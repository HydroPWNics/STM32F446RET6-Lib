ARM GAS  /tmp/cco0z0UJ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"stm32f4xx_it.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.NMI_Handler,"ax",%progbits
  22              		.align	2
  23              		.global	NMI_Handler
  24              		.thumb
  25              		.thumb_func
  27              	NMI_Handler:
  28              	.LFB126:
  29              		.file 1 "Src/stm32f4xx_it.c"
   1:Src/stm32f4xx_it.c **** /**
   2:Src/stm32f4xx_it.c ****   ******************************************************************************
   3:Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   4:Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   5:Src/stm32f4xx_it.c ****   ******************************************************************************
   6:Src/stm32f4xx_it.c ****   *
   7:Src/stm32f4xx_it.c ****   * COPYRIGHT(c) 2016 STMicroelectronics
   8:Src/stm32f4xx_it.c ****   *
   9:Src/stm32f4xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  10:Src/stm32f4xx_it.c ****   * are permitted provided that the following conditions are met:
  11:Src/stm32f4xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  12:Src/stm32f4xx_it.c ****   *      this list of conditions and the following disclaimer.
  13:Src/stm32f4xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:Src/stm32f4xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  15:Src/stm32f4xx_it.c ****   *      and/or other materials provided with the distribution.
  16:Src/stm32f4xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:Src/stm32f4xx_it.c ****   *      may be used to endorse or promote products derived from this software
  18:Src/stm32f4xx_it.c ****   *      without specific prior written permission.
  19:Src/stm32f4xx_it.c ****   *
  20:Src/stm32f4xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:Src/stm32f4xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:Src/stm32f4xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:Src/stm32f4xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:Src/stm32f4xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:Src/stm32f4xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:Src/stm32f4xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:Src/stm32f4xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:Src/stm32f4xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:Src/stm32f4xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
ARM GAS  /tmp/cco0z0UJ.s 			page 2


  30:Src/stm32f4xx_it.c ****   *
  31:Src/stm32f4xx_it.c ****   ******************************************************************************
  32:Src/stm32f4xx_it.c ****   */
  33:Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  34:Src/stm32f4xx_it.c **** #include "stm32f4xx_hal.h"
  35:Src/stm32f4xx_it.c **** #include "stm32f4xx.h"
  36:Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  37:Src/stm32f4xx_it.c **** 
  38:Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  39:Src/stm32f4xx_it.c **** 
  40:Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  41:Src/stm32f4xx_it.c **** 
  42:Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  43:Src/stm32f4xx_it.c **** extern PCD_HandleTypeDef hpcd_USB_OTG_HS;
  44:Src/stm32f4xx_it.c **** 
  45:Src/stm32f4xx_it.c **** /******************************************************************************/
  46:Src/stm32f4xx_it.c **** /*            Cortex-M4 Processor Interruption and Exception Handlers         */ 
  47:Src/stm32f4xx_it.c **** /******************************************************************************/
  48:Src/stm32f4xx_it.c **** 
  49:Src/stm32f4xx_it.c **** /**
  50:Src/stm32f4xx_it.c **** * @brief This function handles Non maskable interrupt.
  51:Src/stm32f4xx_it.c **** */
  52:Src/stm32f4xx_it.c **** void NMI_Handler(void)
  53:Src/stm32f4xx_it.c **** {
  30              		.loc 1 53 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 1, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35 0000 80B4     		push	{r7}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 4
  38              		.cfi_offset 7, -4
  39 0002 00AF     		add	r7, sp, #0
  40              	.LCFI1:
  41              		.cfi_def_cfa_register 7
  54:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  55:Src/stm32f4xx_it.c **** 
  56:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  57:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  58:Src/stm32f4xx_it.c **** 
  59:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  60:Src/stm32f4xx_it.c **** }
  42              		.loc 1 60 0
  43 0004 00BF     		nop
  44 0006 BD46     		mov	sp, r7
  45              	.LCFI2:
  46              		.cfi_def_cfa_register 13
  47              		@ sp needed
  48 0008 5DF8047B 		ldr	r7, [sp], #4
  49              	.LCFI3:
  50              		.cfi_restore 7
  51              		.cfi_def_cfa_offset 0
  52 000c 7047     		bx	lr
  53              		.cfi_endproc
  54              	.LFE126:
  56 000e 00BF     		.section	.text.HardFault_Handler,"ax",%progbits
ARM GAS  /tmp/cco0z0UJ.s 			page 3


  57              		.align	2
  58              		.global	HardFault_Handler
  59              		.thumb
  60              		.thumb_func
  62              	HardFault_Handler:
  63              	.LFB127:
  61:Src/stm32f4xx_it.c **** 
  62:Src/stm32f4xx_it.c **** /**
  63:Src/stm32f4xx_it.c **** * @brief This function handles Hard fault interrupt.
  64:Src/stm32f4xx_it.c **** */
  65:Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  66:Src/stm32f4xx_it.c **** {
  64              		.loc 1 66 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 1, uses_anonymous_args = 0
  68              		@ link register save eliminated.
  69 0000 80B4     		push	{r7}
  70              	.LCFI4:
  71              		.cfi_def_cfa_offset 4
  72              		.cfi_offset 7, -4
  73 0002 00AF     		add	r7, sp, #0
  74              	.LCFI5:
  75              		.cfi_def_cfa_register 7
  76              	.L3:
  67:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  68:Src/stm32f4xx_it.c **** 
  69:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  70:Src/stm32f4xx_it.c ****   while (1)
  71:Src/stm32f4xx_it.c ****   {
  72:Src/stm32f4xx_it.c ****   }
  77              		.loc 1 72 0 discriminator 1
  78 0004 FEE7     		b	.L3
  79              		.cfi_endproc
  80              	.LFE127:
  82 0006 00BF     		.section	.text.MemManage_Handler,"ax",%progbits
  83              		.align	2
  84              		.global	MemManage_Handler
  85              		.thumb
  86              		.thumb_func
  88              	MemManage_Handler:
  89              	.LFB128:
  73:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 1 */
  74:Src/stm32f4xx_it.c **** 
  75:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 1 */
  76:Src/stm32f4xx_it.c **** }
  77:Src/stm32f4xx_it.c **** 
  78:Src/stm32f4xx_it.c **** /**
  79:Src/stm32f4xx_it.c **** * @brief This function handles Memory management fault.
  80:Src/stm32f4xx_it.c **** */
  81:Src/stm32f4xx_it.c **** void MemManage_Handler(void)
  82:Src/stm32f4xx_it.c **** {
  90              		.loc 1 82 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 1, uses_anonymous_args = 0
  94              		@ link register save eliminated.
ARM GAS  /tmp/cco0z0UJ.s 			page 4


  95 0000 80B4     		push	{r7}
  96              	.LCFI6:
  97              		.cfi_def_cfa_offset 4
  98              		.cfi_offset 7, -4
  99 0002 00AF     		add	r7, sp, #0
 100              	.LCFI7:
 101              		.cfi_def_cfa_register 7
 102              	.L5:
  83:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
  84:Src/stm32f4xx_it.c **** 
  85:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
  86:Src/stm32f4xx_it.c ****   while (1)
  87:Src/stm32f4xx_it.c ****   {
  88:Src/stm32f4xx_it.c ****   }
 103              		.loc 1 88 0 discriminator 1
 104 0004 FEE7     		b	.L5
 105              		.cfi_endproc
 106              	.LFE128:
 108 0006 00BF     		.section	.text.BusFault_Handler,"ax",%progbits
 109              		.align	2
 110              		.global	BusFault_Handler
 111              		.thumb
 112              		.thumb_func
 114              	BusFault_Handler:
 115              	.LFB129:
  89:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 1 */
  90:Src/stm32f4xx_it.c **** 
  91:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 1 */
  92:Src/stm32f4xx_it.c **** }
  93:Src/stm32f4xx_it.c **** 
  94:Src/stm32f4xx_it.c **** /**
  95:Src/stm32f4xx_it.c **** * @brief This function handles Pre-fetch fault, memory access fault.
  96:Src/stm32f4xx_it.c **** */
  97:Src/stm32f4xx_it.c **** void BusFault_Handler(void)
  98:Src/stm32f4xx_it.c **** {
 116              		.loc 1 98 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 1, uses_anonymous_args = 0
 120              		@ link register save eliminated.
 121 0000 80B4     		push	{r7}
 122              	.LCFI8:
 123              		.cfi_def_cfa_offset 4
 124              		.cfi_offset 7, -4
 125 0002 00AF     		add	r7, sp, #0
 126              	.LCFI9:
 127              		.cfi_def_cfa_register 7
 128              	.L7:
  99:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 100:Src/stm32f4xx_it.c **** 
 101:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 102:Src/stm32f4xx_it.c ****   while (1)
 103:Src/stm32f4xx_it.c ****   {
 104:Src/stm32f4xx_it.c ****   }
 129              		.loc 1 104 0 discriminator 1
 130 0004 FEE7     		b	.L7
 131              		.cfi_endproc
ARM GAS  /tmp/cco0z0UJ.s 			page 5


 132              	.LFE129:
 134 0006 00BF     		.section	.text.UsageFault_Handler,"ax",%progbits
 135              		.align	2
 136              		.global	UsageFault_Handler
 137              		.thumb
 138              		.thumb_func
 140              	UsageFault_Handler:
 141              	.LFB130:
 105:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 1 */
 106:Src/stm32f4xx_it.c **** 
 107:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 1 */
 108:Src/stm32f4xx_it.c **** }
 109:Src/stm32f4xx_it.c **** 
 110:Src/stm32f4xx_it.c **** /**
 111:Src/stm32f4xx_it.c **** * @brief This function handles Undefined instruction or illegal state.
 112:Src/stm32f4xx_it.c **** */
 113:Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 114:Src/stm32f4xx_it.c **** {
 142              		.loc 1 114 0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 1, uses_anonymous_args = 0
 146              		@ link register save eliminated.
 147 0000 80B4     		push	{r7}
 148              	.LCFI10:
 149              		.cfi_def_cfa_offset 4
 150              		.cfi_offset 7, -4
 151 0002 00AF     		add	r7, sp, #0
 152              	.LCFI11:
 153              		.cfi_def_cfa_register 7
 154              	.L9:
 115:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 116:Src/stm32f4xx_it.c **** 
 117:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 118:Src/stm32f4xx_it.c ****   while (1)
 119:Src/stm32f4xx_it.c ****   {
 120:Src/stm32f4xx_it.c ****   }
 155              		.loc 1 120 0 discriminator 1
 156 0004 FEE7     		b	.L9
 157              		.cfi_endproc
 158              	.LFE130:
 160 0006 00BF     		.section	.text.SVC_Handler,"ax",%progbits
 161              		.align	2
 162              		.global	SVC_Handler
 163              		.thumb
 164              		.thumb_func
 166              	SVC_Handler:
 167              	.LFB131:
 121:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 1 */
 122:Src/stm32f4xx_it.c **** 
 123:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 1 */
 124:Src/stm32f4xx_it.c **** }
 125:Src/stm32f4xx_it.c **** 
 126:Src/stm32f4xx_it.c **** /**
 127:Src/stm32f4xx_it.c **** * @brief This function handles System service call via SWI instruction.
 128:Src/stm32f4xx_it.c **** */
 129:Src/stm32f4xx_it.c **** void SVC_Handler(void)
ARM GAS  /tmp/cco0z0UJ.s 			page 6


 130:Src/stm32f4xx_it.c **** {
 168              		.loc 1 130 0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 1, uses_anonymous_args = 0
 172              		@ link register save eliminated.
 173 0000 80B4     		push	{r7}
 174              	.LCFI12:
 175              		.cfi_def_cfa_offset 4
 176              		.cfi_offset 7, -4
 177 0002 00AF     		add	r7, sp, #0
 178              	.LCFI13:
 179              		.cfi_def_cfa_register 7
 131:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 132:Src/stm32f4xx_it.c **** 
 133:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 134:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 135:Src/stm32f4xx_it.c **** 
 136:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 137:Src/stm32f4xx_it.c **** }
 180              		.loc 1 137 0
 181 0004 00BF     		nop
 182 0006 BD46     		mov	sp, r7
 183              	.LCFI14:
 184              		.cfi_def_cfa_register 13
 185              		@ sp needed
 186 0008 5DF8047B 		ldr	r7, [sp], #4
 187              	.LCFI15:
 188              		.cfi_restore 7
 189              		.cfi_def_cfa_offset 0
 190 000c 7047     		bx	lr
 191              		.cfi_endproc
 192              	.LFE131:
 194 000e 00BF     		.section	.text.DebugMon_Handler,"ax",%progbits
 195              		.align	2
 196              		.global	DebugMon_Handler
 197              		.thumb
 198              		.thumb_func
 200              	DebugMon_Handler:
 201              	.LFB132:
 138:Src/stm32f4xx_it.c **** 
 139:Src/stm32f4xx_it.c **** /**
 140:Src/stm32f4xx_it.c **** * @brief This function handles Debug monitor.
 141:Src/stm32f4xx_it.c **** */
 142:Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 143:Src/stm32f4xx_it.c **** {
 202              		.loc 1 143 0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 1, uses_anonymous_args = 0
 206              		@ link register save eliminated.
 207 0000 80B4     		push	{r7}
 208              	.LCFI16:
 209              		.cfi_def_cfa_offset 4
 210              		.cfi_offset 7, -4
 211 0002 00AF     		add	r7, sp, #0
 212              	.LCFI17:
ARM GAS  /tmp/cco0z0UJ.s 			page 7


 213              		.cfi_def_cfa_register 7
 144:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 145:Src/stm32f4xx_it.c **** 
 146:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 147:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 148:Src/stm32f4xx_it.c **** 
 149:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 150:Src/stm32f4xx_it.c **** }
 214              		.loc 1 150 0
 215 0004 00BF     		nop
 216 0006 BD46     		mov	sp, r7
 217              	.LCFI18:
 218              		.cfi_def_cfa_register 13
 219              		@ sp needed
 220 0008 5DF8047B 		ldr	r7, [sp], #4
 221              	.LCFI19:
 222              		.cfi_restore 7
 223              		.cfi_def_cfa_offset 0
 224 000c 7047     		bx	lr
 225              		.cfi_endproc
 226              	.LFE132:
 228 000e 00BF     		.section	.text.PendSV_Handler,"ax",%progbits
 229              		.align	2
 230              		.global	PendSV_Handler
 231              		.thumb
 232              		.thumb_func
 234              	PendSV_Handler:
 235              	.LFB133:
 151:Src/stm32f4xx_it.c **** 
 152:Src/stm32f4xx_it.c **** /**
 153:Src/stm32f4xx_it.c **** * @brief This function handles Pendable request for system service.
 154:Src/stm32f4xx_it.c **** */
 155:Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 156:Src/stm32f4xx_it.c **** {
 236              		.loc 1 156 0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 0
 239              		@ frame_needed = 1, uses_anonymous_args = 0
 240              		@ link register save eliminated.
 241 0000 80B4     		push	{r7}
 242              	.LCFI20:
 243              		.cfi_def_cfa_offset 4
 244              		.cfi_offset 7, -4
 245 0002 00AF     		add	r7, sp, #0
 246              	.LCFI21:
 247              		.cfi_def_cfa_register 7
 157:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 158:Src/stm32f4xx_it.c **** 
 159:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 160:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 161:Src/stm32f4xx_it.c **** 
 162:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 163:Src/stm32f4xx_it.c **** }
 248              		.loc 1 163 0
 249 0004 00BF     		nop
 250 0006 BD46     		mov	sp, r7
 251              	.LCFI22:
ARM GAS  /tmp/cco0z0UJ.s 			page 8


 252              		.cfi_def_cfa_register 13
 253              		@ sp needed
 254 0008 5DF8047B 		ldr	r7, [sp], #4
 255              	.LCFI23:
 256              		.cfi_restore 7
 257              		.cfi_def_cfa_offset 0
 258 000c 7047     		bx	lr
 259              		.cfi_endproc
 260              	.LFE133:
 262 000e 00BF     		.section	.text.SysTick_Handler,"ax",%progbits
 263              		.align	2
 264              		.global	SysTick_Handler
 265              		.thumb
 266              		.thumb_func
 268              	SysTick_Handler:
 269              	.LFB134:
 164:Src/stm32f4xx_it.c **** 
 165:Src/stm32f4xx_it.c **** /**
 166:Src/stm32f4xx_it.c **** * @brief This function handles System tick timer.
 167:Src/stm32f4xx_it.c **** */
 168:Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 169:Src/stm32f4xx_it.c **** {
 270              		.loc 1 169 0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 0
 273              		@ frame_needed = 1, uses_anonymous_args = 0
 274 0000 80B5     		push	{r7, lr}
 275              	.LCFI24:
 276              		.cfi_def_cfa_offset 8
 277              		.cfi_offset 7, -8
 278              		.cfi_offset 14, -4
 279 0002 00AF     		add	r7, sp, #0
 280              	.LCFI25:
 281              		.cfi_def_cfa_register 7
 170:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 171:Src/stm32f4xx_it.c **** 
 172:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 173:Src/stm32f4xx_it.c ****   HAL_IncTick();
 282              		.loc 1 173 0
 283 0004 FFF7FEFF 		bl	HAL_IncTick
 174:Src/stm32f4xx_it.c ****   HAL_SYSTICK_IRQHandler();
 284              		.loc 1 174 0
 285 0008 FFF7FEFF 		bl	HAL_SYSTICK_IRQHandler
 175:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 176:Src/stm32f4xx_it.c **** 
 177:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 178:Src/stm32f4xx_it.c **** }
 286              		.loc 1 178 0
 287 000c 00BF     		nop
 288 000e 80BD     		pop	{r7, pc}
 289              		.cfi_endproc
 290              	.LFE134:
 292              		.section	.text.OTG_HS_IRQHandler,"ax",%progbits
 293              		.align	2
 294              		.global	OTG_HS_IRQHandler
 295              		.thumb
 296              		.thumb_func
ARM GAS  /tmp/cco0z0UJ.s 			page 9


 298              	OTG_HS_IRQHandler:
 299              	.LFB135:
 179:Src/stm32f4xx_it.c **** 
 180:Src/stm32f4xx_it.c **** /******************************************************************************/
 181:Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 182:Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 183:Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 184:Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 185:Src/stm32f4xx_it.c **** /******************************************************************************/
 186:Src/stm32f4xx_it.c **** 
 187:Src/stm32f4xx_it.c **** /**
 188:Src/stm32f4xx_it.c **** * @brief This function handles USB On The Go HS global interrupt.
 189:Src/stm32f4xx_it.c **** */
 190:Src/stm32f4xx_it.c **** void OTG_HS_IRQHandler(void)
 191:Src/stm32f4xx_it.c **** {
 300              		.loc 1 191 0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 0
 303              		@ frame_needed = 1, uses_anonymous_args = 0
 304 0000 80B5     		push	{r7, lr}
 305              	.LCFI26:
 306              		.cfi_def_cfa_offset 8
 307              		.cfi_offset 7, -8
 308              		.cfi_offset 14, -4
 309 0002 00AF     		add	r7, sp, #0
 310              	.LCFI27:
 311              		.cfi_def_cfa_register 7
 192:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN OTG_HS_IRQn 0 */
 193:Src/stm32f4xx_it.c **** 
 194:Src/stm32f4xx_it.c ****   /* USER CODE END OTG_HS_IRQn 0 */
 195:Src/stm32f4xx_it.c ****   HAL_PCD_IRQHandler(&hpcd_USB_OTG_HS);
 312              		.loc 1 195 0
 313 0004 0248     		ldr	r0, .L15
 314 0006 FFF7FEFF 		bl	HAL_PCD_IRQHandler
 196:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN OTG_HS_IRQn 1 */
 197:Src/stm32f4xx_it.c **** 
 198:Src/stm32f4xx_it.c ****   /* USER CODE END OTG_HS_IRQn 1 */
 199:Src/stm32f4xx_it.c **** }
 315              		.loc 1 199 0
 316 000a 00BF     		nop
 317 000c 80BD     		pop	{r7, pc}
 318              	.L16:
 319 000e 00BF     		.align	2
 320              	.L15:
 321 0010 00000000 		.word	hpcd_USB_OTG_HS
 322              		.cfi_endproc
 323              	.LFE135:
 325              		.text
 326              	.Letext0:
 327              		.file 2 "/usr/local/gcc-arm-none-eabi-5_4-2016q2/arm-none-eabi/include/machine/_default_types.h"
 328              		.file 3 "/usr/local/gcc-arm-none-eabi-5_4-2016q2/arm-none-eabi/include/sys/_stdint.h"
 329              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 330              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 331              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usb.h"
 332              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pcd.h"
 333              		.file 8 "Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  /tmp/cco0z0UJ.s 			page 10


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_it.c
     /tmp/cco0z0UJ.s:22     .text.NMI_Handler:00000000 $t
     /tmp/cco0z0UJ.s:27     .text.NMI_Handler:00000000 NMI_Handler
     /tmp/cco0z0UJ.s:57     .text.HardFault_Handler:00000000 $t
     /tmp/cco0z0UJ.s:62     .text.HardFault_Handler:00000000 HardFault_Handler
     /tmp/cco0z0UJ.s:83     .text.MemManage_Handler:00000000 $t
     /tmp/cco0z0UJ.s:88     .text.MemManage_Handler:00000000 MemManage_Handler
     /tmp/cco0z0UJ.s:109    .text.BusFault_Handler:00000000 $t
     /tmp/cco0z0UJ.s:114    .text.BusFault_Handler:00000000 BusFault_Handler
     /tmp/cco0z0UJ.s:135    .text.UsageFault_Handler:00000000 $t
     /tmp/cco0z0UJ.s:140    .text.UsageFault_Handler:00000000 UsageFault_Handler
     /tmp/cco0z0UJ.s:161    .text.SVC_Handler:00000000 $t
     /tmp/cco0z0UJ.s:166    .text.SVC_Handler:00000000 SVC_Handler
     /tmp/cco0z0UJ.s:195    .text.DebugMon_Handler:00000000 $t
     /tmp/cco0z0UJ.s:200    .text.DebugMon_Handler:00000000 DebugMon_Handler
     /tmp/cco0z0UJ.s:229    .text.PendSV_Handler:00000000 $t
     /tmp/cco0z0UJ.s:234    .text.PendSV_Handler:00000000 PendSV_Handler
     /tmp/cco0z0UJ.s:263    .text.SysTick_Handler:00000000 $t
     /tmp/cco0z0UJ.s:268    .text.SysTick_Handler:00000000 SysTick_Handler
     /tmp/cco0z0UJ.s:293    .text.OTG_HS_IRQHandler:00000000 $t
     /tmp/cco0z0UJ.s:298    .text.OTG_HS_IRQHandler:00000000 OTG_HS_IRQHandler
     /tmp/cco0z0UJ.s:321    .text.OTG_HS_IRQHandler:00000010 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_SYSTICK_IRQHandler
HAL_PCD_IRQHandler
hpcd_USB_OTG_HS
