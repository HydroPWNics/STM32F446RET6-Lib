ARM GAS  /tmp/ccez0bZg.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"stm32f4xx_hal_uart.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.HAL_UART_Init,"ax",%progbits
  22              		.align	2
  23              		.global	HAL_UART_Init
  24              		.thumb
  25              		.thumb_func
  27              	HAL_UART_Init:
  28              	.LFB126:
  29              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @file    stm32f4xx_hal_uart.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @version V1.5.2
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @date    22-September-2016
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief   UART HAL module driver.
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          This file provides firmware functions to manage the following 
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter (UART) peripheral:
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Initialization and de-initialization functions
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + IO operation functions
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Peripheral Control functions  
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Peripheral State and Errors functions  
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   @verbatim       
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                         ##### How to use this driver #####
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure.
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) Enable the USARTx interface clock.
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) UART pins configuration:
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
ARM GAS  /tmp/ccez0bZg.s 			page 2


  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx stream.
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required 
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   Tx/Rx parameters.                
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx Stream.
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete 
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx Stream.
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware 
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         flow control and Mode(Receiver/Transmitter) in the Init structure.
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_UART_Init() API.
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling 
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the LIN mode, initialize the UART registers by calling the HAL_LIN_Init() API.
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the Multi-Processor mode, initialize the UART registers by calling 
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_MultiProcessor_Init() API.
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..] 
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) The specific UART interrupts (Transmission complete interrupt, 
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             RXNE interrupt and Error Interrupts) will be managed using the macros
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit 
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             and receive process.
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..] 
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) These APIs (HAL_UART_Init() and HAL_HalfDuplex_Init()) configure also the 
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             low level Hardware GPIO, CLOCK, CORTEX...etc) by calling the customized 
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             HAL_UART_MspInit() API.
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..] 
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         Three operation modes are available within this driver :     
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** Polling mode IO operation ***
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      =================================
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]    
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit() 
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** Interrupt mode IO operation ***    
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ===================================
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]    
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT() 
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT() 
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
ARM GAS  /tmp/ccez0bZg.s 			page 3


  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** DMA mode IO operation ***    
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ==============================
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..] 
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA() 
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback 
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA() 
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can 
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback 
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()      
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()  
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()      
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** UART HAL driver macros list ***
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ============================================= 
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral 
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral     
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_GET_IT_SOURCE: Check whether the specified UART interrupt has occurred or not
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..] 
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros 
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   @endverbatim
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @attention
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * Redistribution and use in source and binary forms, with or without modification,
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * are permitted provided that the following conditions are met:
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *      this list of conditions and the following disclaimer.
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *      this list of conditions and the following disclaimer in the documentation
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *      and/or other materials provided with the distribution.
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *      may be used to endorse or promote products derived from this software
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *      without specific prior written permission.
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
ARM GAS  /tmp/ccez0bZg.s 			page 4


 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */ 
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #include "stm32f4xx_hal.h"
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup STM32F4xx_HAL_Driver
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART UART
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief HAL UART module driver
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup UART_Private_Constants
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private macro -------------------------------------------------------------*/
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup UART_Private_Functions   UART Private Functions
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma); 
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_SetConfig (UART_HandleTypeDef *huart);
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Exported functions ---------------------------------------------------------*/
ARM GAS  /tmp/ccez0bZg.s 			page 5


 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions 
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions 
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim    
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** ===============================================================================
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================  
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy 
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in asynchronous mode.
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) For the asynchronous mode only these parameters can be configured: 
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Baud Rate
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Word Length 
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Stop Bit
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              Depending on the frame length defined by the M bit (8-bits or 9-bits),
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              please refer to Reference manual for possible UART frame formats.           
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Hardware flow control
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Receiver/transmitter modes
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Over Sampling Method
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init() APIs 
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, LIN and Multi-Processor
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     configuration procedures (details for the procedures are available in reference manual (RM0329)
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the UART mode according to the specified parameters in
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the UART_InitTypeDef and create the associated handle.
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
  30              		.loc 1 243 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 1, uses_anonymous_args = 0
  34 0000 80B5     		push	{r7, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 82B0     		sub	sp, sp, #8
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 16
  42 0004 00AF     		add	r7, sp, #0
  43              	.LCFI2:
ARM GAS  /tmp/ccez0bZg.s 			page 6


  44              		.cfi_def_cfa_register 7
  45 0006 7860     		str	r0, [r7, #4]
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart == NULL)
  46              		.loc 1 245 0
  47 0008 7B68     		ldr	r3, [r7, #4]
  48 000a 002B     		cmp	r3, #0
  49 000c 01D1     		bne	.L2
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
  50              		.loc 1 247 0
  51 000e 0123     		movs	r3, #1
  52 0010 3FE0     		b	.L3
  53              	.L2:
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   { 
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* The hardware flow control is available only for USART1, USART2, USART3 and USART6 */
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
  54              		.loc 1 264 0
  55 0012 7B68     		ldr	r3, [r7, #4]
  56 0014 93F83930 		ldrb	r3, [r3, #57]
  57 0018 DBB2     		uxtb	r3, r3
  58 001a 002B     		cmp	r3, #0
  59 001c 06D1     		bne	.L4
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {  
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
  60              		.loc 1 267 0
  61 001e 7B68     		ldr	r3, [r7, #4]
  62 0020 0022     		movs	r2, #0
  63 0022 83F83820 		strb	r2, [r3, #56]
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
  64              		.loc 1 269 0
  65 0026 7868     		ldr	r0, [r7, #4]
  66 0028 FFF7FEFF 		bl	HAL_UART_MspInit
  67              	.L4:
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
  68              		.loc 1 272 0
  69 002c 7B68     		ldr	r3, [r7, #4]
  70 002e 2422     		movs	r2, #36
  71 0030 83F83920 		strb	r2, [r3, #57]
ARM GAS  /tmp/ccez0bZg.s 			page 7


 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
  72              		.loc 1 275 0
  73 0034 7B68     		ldr	r3, [r7, #4]
  74 0036 1B68     		ldr	r3, [r3]
  75 0038 7A68     		ldr	r2, [r7, #4]
  76 003a 1268     		ldr	r2, [r2]
  77 003c D268     		ldr	r2, [r2, #12]
  78 003e 22F40052 		bic	r2, r2, #8192
  79 0042 DA60     		str	r2, [r3, #12]
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
  80              		.loc 1 278 0
  81 0044 7868     		ldr	r0, [r7, #4]
  82 0046 FFF7FEFF 		bl	UART_SetConfig
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared: 
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
  83              		.loc 1 283 0
  84 004a 7B68     		ldr	r3, [r7, #4]
  85 004c 1B68     		ldr	r3, [r3]
  86 004e 7A68     		ldr	r2, [r7, #4]
  87 0050 1268     		ldr	r2, [r2]
  88 0052 1269     		ldr	r2, [r2, #16]
  89 0054 22F49042 		bic	r2, r2, #18432
  90 0058 1A61     		str	r2, [r3, #16]
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
  91              		.loc 1 284 0
  92 005a 7B68     		ldr	r3, [r7, #4]
  93 005c 1B68     		ldr	r3, [r3]
  94 005e 7A68     		ldr	r2, [r7, #4]
  95 0060 1268     		ldr	r2, [r2]
  96 0062 5269     		ldr	r2, [r2, #20]
  97 0064 22F02A02 		bic	r2, r2, #42
  98 0068 5A61     		str	r2, [r3, #20]
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
  99              		.loc 1 287 0
 100 006a 7B68     		ldr	r3, [r7, #4]
 101 006c 1B68     		ldr	r3, [r3]
 102 006e 7A68     		ldr	r2, [r7, #4]
 103 0070 1268     		ldr	r2, [r2]
 104 0072 D268     		ldr	r2, [r2, #12]
 105 0074 42F40052 		orr	r2, r2, #8192
 106 0078 DA60     		str	r2, [r3, #12]
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state */
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 107              		.loc 1 290 0
 108 007a 7B68     		ldr	r3, [r7, #4]
 109 007c 0022     		movs	r2, #0
 110 007e DA63     		str	r2, [r3, #60]
ARM GAS  /tmp/ccez0bZg.s 			page 8


 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 111              		.loc 1 291 0
 112 0080 7B68     		ldr	r3, [r7, #4]
 113 0082 2022     		movs	r2, #32
 114 0084 83F83920 		strb	r2, [r3, #57]
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 115              		.loc 1 292 0
 116 0088 7B68     		ldr	r3, [r7, #4]
 117 008a 2022     		movs	r2, #32
 118 008c 83F83A20 		strb	r2, [r3, #58]
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 119              		.loc 1 294 0
 120 0090 0023     		movs	r3, #0
 121              	.L3:
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 122              		.loc 1 295 0
 123 0092 1846     		mov	r0, r3
 124 0094 0837     		adds	r7, r7, #8
 125              	.LCFI3:
 126              		.cfi_def_cfa_offset 8
 127 0096 BD46     		mov	sp, r7
 128              	.LCFI4:
 129              		.cfi_def_cfa_register 13
 130              		@ sp needed
 131 0098 80BD     		pop	{r7, pc}
 132              		.cfi_endproc
 133              	.LFE126:
 135 009a 00BF     		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 136              		.align	2
 137              		.global	HAL_HalfDuplex_Init
 138              		.thumb
 139              		.thumb_func
 141              	HAL_HalfDuplex_Init:
 142              	.LFB127:
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the half-duplex mode according to the specified
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 143              		.loc 1 305 0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 8
 146              		@ frame_needed = 1, uses_anonymous_args = 0
 147 0000 80B5     		push	{r7, lr}
 148              	.LCFI5:
 149              		.cfi_def_cfa_offset 8
 150              		.cfi_offset 7, -8
 151              		.cfi_offset 14, -4
 152 0002 82B0     		sub	sp, sp, #8
 153              	.LCFI6:
 154              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccez0bZg.s 			page 9


 155 0004 00AF     		add	r7, sp, #0
 156              	.LCFI7:
 157              		.cfi_def_cfa_register 7
 158 0006 7860     		str	r0, [r7, #4]
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart == NULL)
 159              		.loc 1 307 0
 160 0008 7B68     		ldr	r3, [r7, #4]
 161 000a 002B     		cmp	r3, #0
 162 000c 01D1     		bne	.L6
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 163              		.loc 1 309 0
 164 000e 0123     		movs	r3, #1
 165 0010 47E0     		b	.L7
 166              	.L6:
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */ 
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 167              		.loc 1 317 0
 168 0012 7B68     		ldr	r3, [r7, #4]
 169 0014 93F83930 		ldrb	r3, [r3, #57]
 170 0018 DBB2     		uxtb	r3, r3
 171 001a 002B     		cmp	r3, #0
 172 001c 06D1     		bne	.L8
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   { 
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 173              		.loc 1 320 0
 174 001e 7B68     		ldr	r3, [r7, #4]
 175 0020 0022     		movs	r2, #0
 176 0022 83F83820 		strb	r2, [r3, #56]
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 177              		.loc 1 322 0
 178 0026 7868     		ldr	r0, [r7, #4]
 179 0028 FFF7FEFF 		bl	HAL_UART_MspInit
 180              	.L8:
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 181              		.loc 1 325 0
 182 002c 7B68     		ldr	r3, [r7, #4]
 183 002e 2422     		movs	r2, #36
 184 0030 83F83920 		strb	r2, [r3, #57]
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 185              		.loc 1 328 0
 186 0034 7B68     		ldr	r3, [r7, #4]
 187 0036 1B68     		ldr	r3, [r3]
 188 0038 7A68     		ldr	r2, [r7, #4]
ARM GAS  /tmp/ccez0bZg.s 			page 10


 189 003a 1268     		ldr	r2, [r2]
 190 003c D268     		ldr	r2, [r2, #12]
 191 003e 22F40052 		bic	r2, r2, #8192
 192 0042 DA60     		str	r2, [r3, #12]
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 193              		.loc 1 331 0
 194 0044 7868     		ldr	r0, [r7, #4]
 195 0046 FFF7FEFF 		bl	UART_SetConfig
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared: 
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 196              		.loc 1 336 0
 197 004a 7B68     		ldr	r3, [r7, #4]
 198 004c 1B68     		ldr	r3, [r3]
 199 004e 7A68     		ldr	r2, [r7, #4]
 200 0050 1268     		ldr	r2, [r2]
 201 0052 1269     		ldr	r2, [r2, #16]
 202 0054 22F49042 		bic	r2, r2, #18432
 203 0058 1A61     		str	r2, [r3, #16]
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 204              		.loc 1 337 0
 205 005a 7B68     		ldr	r3, [r7, #4]
 206 005c 1B68     		ldr	r3, [r3]
 207 005e 7A68     		ldr	r2, [r7, #4]
 208 0060 1268     		ldr	r2, [r2]
 209 0062 5269     		ldr	r2, [r2, #20]
 210 0064 22F02202 		bic	r2, r2, #34
 211 0068 5A61     		str	r2, [r3, #20]
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 212              		.loc 1 340 0
 213 006a 7B68     		ldr	r3, [r7, #4]
 214 006c 1B68     		ldr	r3, [r3]
 215 006e 7A68     		ldr	r2, [r7, #4]
 216 0070 1268     		ldr	r2, [r2]
 217 0072 5269     		ldr	r2, [r2, #20]
 218 0074 42F00802 		orr	r2, r2, #8
 219 0078 5A61     		str	r2, [r3, #20]
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 220              		.loc 1 343 0
 221 007a 7B68     		ldr	r3, [r7, #4]
 222 007c 1B68     		ldr	r3, [r3]
 223 007e 7A68     		ldr	r2, [r7, #4]
 224 0080 1268     		ldr	r2, [r2]
 225 0082 D268     		ldr	r2, [r2, #12]
 226 0084 42F40052 		orr	r2, r2, #8192
 227 0088 DA60     		str	r2, [r3, #12]
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state*/
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
ARM GAS  /tmp/ccez0bZg.s 			page 11


 228              		.loc 1 346 0
 229 008a 7B68     		ldr	r3, [r7, #4]
 230 008c 0022     		movs	r2, #0
 231 008e DA63     		str	r2, [r3, #60]
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 232              		.loc 1 347 0
 233 0090 7B68     		ldr	r3, [r7, #4]
 234 0092 2022     		movs	r2, #32
 235 0094 83F83920 		strb	r2, [r3, #57]
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 236              		.loc 1 348 0
 237 0098 7B68     		ldr	r3, [r7, #4]
 238 009a 2022     		movs	r2, #32
 239 009c 83F83A20 		strb	r2, [r3, #58]
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 240              		.loc 1 350 0
 241 00a0 0023     		movs	r3, #0
 242              	.L7:
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 243              		.loc 1 351 0
 244 00a2 1846     		mov	r0, r3
 245 00a4 0837     		adds	r7, r7, #8
 246              	.LCFI8:
 247              		.cfi_def_cfa_offset 8
 248 00a6 BD46     		mov	sp, r7
 249              	.LCFI9:
 250              		.cfi_def_cfa_register 13
 251              		@ sp needed
 252 00a8 80BD     		pop	{r7, pc}
 253              		.cfi_endproc
 254              	.LFE127:
 256 00aa 00BF     		.section	.text.HAL_LIN_Init,"ax",%progbits
 257              		.align	2
 258              		.global	HAL_LIN_Init
 259              		.thumb
 260              		.thumb_func
 262              	HAL_LIN_Init:
 263              	.LFB128:
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the LIN mode according to the specified
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  BreakDetectLength: Specifies the LIN break detection length.
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_10B: 10-bit break detection
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_11B: 11-bit break detection
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 264              		.loc 1 365 0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 8
 267              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccez0bZg.s 			page 12


 268 0000 80B5     		push	{r7, lr}
 269              	.LCFI10:
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 7, -8
 272              		.cfi_offset 14, -4
 273 0002 82B0     		sub	sp, sp, #8
 274              	.LCFI11:
 275              		.cfi_def_cfa_offset 16
 276 0004 00AF     		add	r7, sp, #0
 277              	.LCFI12:
 278              		.cfi_def_cfa_register 7
 279 0006 7860     		str	r0, [r7, #4]
 280 0008 3960     		str	r1, [r7]
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart == NULL)
 281              		.loc 1 367 0
 282 000a 7B68     		ldr	r3, [r7, #4]
 283 000c 002B     		cmp	r3, #0
 284 000e 01D1     		bne	.L10
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 285              		.loc 1 369 0
 286 0010 0123     		movs	r3, #1
 287 0012 57E0     		b	.L11
 288              	.L10:
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_WORD_LENGTH(huart->Init.WordLength));
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_OVERSAMPLING(huart->Init.OverSampling));
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 289              		.loc 1 378 0
 290 0014 7B68     		ldr	r3, [r7, #4]
 291 0016 93F83930 		ldrb	r3, [r3, #57]
 292 001a DBB2     		uxtb	r3, r3
 293 001c 002B     		cmp	r3, #0
 294 001e 06D1     		bne	.L12
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 295              		.loc 1 381 0
 296 0020 7B68     		ldr	r3, [r7, #4]
 297 0022 0022     		movs	r2, #0
 298 0024 83F83820 		strb	r2, [r3, #56]
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 299              		.loc 1 383 0
 300 0028 7868     		ldr	r0, [r7, #4]
 301 002a FFF7FEFF 		bl	HAL_UART_MspInit
 302              	.L12:
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 303              		.loc 1 386 0
ARM GAS  /tmp/ccez0bZg.s 			page 13


 304 002e 7B68     		ldr	r3, [r7, #4]
 305 0030 2422     		movs	r2, #36
 306 0032 83F83920 		strb	r2, [r3, #57]
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 307              		.loc 1 389 0
 308 0036 7B68     		ldr	r3, [r7, #4]
 309 0038 1B68     		ldr	r3, [r3]
 310 003a 7A68     		ldr	r2, [r7, #4]
 311 003c 1268     		ldr	r2, [r2]
 312 003e D268     		ldr	r2, [r2, #12]
 313 0040 22F40052 		bic	r2, r2, #8192
 314 0044 DA60     		str	r2, [r3, #12]
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 315              		.loc 1 392 0
 316 0046 7868     		ldr	r0, [r7, #4]
 317 0048 FFF7FEFF 		bl	UART_SetConfig
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared: 
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 318              		.loc 1 397 0
 319 004c 7B68     		ldr	r3, [r7, #4]
 320 004e 1B68     		ldr	r3, [r3]
 321 0050 7A68     		ldr	r2, [r7, #4]
 322 0052 1268     		ldr	r2, [r2]
 323 0054 1269     		ldr	r2, [r2, #16]
 324 0056 22F40062 		bic	r2, r2, #2048
 325 005a 1A61     		str	r2, [r3, #16]
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 326              		.loc 1 398 0
 327 005c 7B68     		ldr	r3, [r7, #4]
 328 005e 1B68     		ldr	r3, [r3]
 329 0060 7A68     		ldr	r2, [r7, #4]
 330 0062 1268     		ldr	r2, [r2]
 331 0064 5269     		ldr	r2, [r2, #20]
 332 0066 22F02A02 		bic	r2, r2, #42
 333 006a 5A61     		str	r2, [r3, #20]
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 334              		.loc 1 401 0
 335 006c 7B68     		ldr	r3, [r7, #4]
 336 006e 1B68     		ldr	r3, [r3]
 337 0070 7A68     		ldr	r2, [r7, #4]
 338 0072 1268     		ldr	r2, [r2]
 339 0074 1269     		ldr	r2, [r2, #16]
 340 0076 42F48042 		orr	r2, r2, #16384
 341 007a 1A61     		str	r2, [r3, #16]
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_LBDL);
 342              		.loc 1 404 0
ARM GAS  /tmp/ccez0bZg.s 			page 14


 343 007c 7B68     		ldr	r3, [r7, #4]
 344 007e 1B68     		ldr	r3, [r3]
 345 0080 7A68     		ldr	r2, [r7, #4]
 346 0082 1268     		ldr	r2, [r2]
 347 0084 1269     		ldr	r2, [r2, #16]
 348 0086 22F02002 		bic	r2, r2, #32
 349 008a 1A61     		str	r2, [r3, #16]
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, BreakDetectLength);
 350              		.loc 1 405 0
 351 008c 7B68     		ldr	r3, [r7, #4]
 352 008e 1B68     		ldr	r3, [r3]
 353 0090 7A68     		ldr	r2, [r7, #4]
 354 0092 1268     		ldr	r2, [r2]
 355 0094 1169     		ldr	r1, [r2, #16]
 356 0096 3A68     		ldr	r2, [r7]
 357 0098 0A43     		orrs	r2, r2, r1
 358 009a 1A61     		str	r2, [r3, #16]
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 359              		.loc 1 408 0
 360 009c 7B68     		ldr	r3, [r7, #4]
 361 009e 1B68     		ldr	r3, [r3]
 362 00a0 7A68     		ldr	r2, [r7, #4]
 363 00a2 1268     		ldr	r2, [r2]
 364 00a4 D268     		ldr	r2, [r2, #12]
 365 00a6 42F40052 		orr	r2, r2, #8192
 366 00aa DA60     		str	r2, [r3, #12]
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state*/
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 367              		.loc 1 411 0
 368 00ac 7B68     		ldr	r3, [r7, #4]
 369 00ae 0022     		movs	r2, #0
 370 00b0 DA63     		str	r2, [r3, #60]
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 371              		.loc 1 412 0
 372 00b2 7B68     		ldr	r3, [r7, #4]
 373 00b4 2022     		movs	r2, #32
 374 00b6 83F83920 		strb	r2, [r3, #57]
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 375              		.loc 1 413 0
 376 00ba 7B68     		ldr	r3, [r7, #4]
 377 00bc 2022     		movs	r2, #32
 378 00be 83F83A20 		strb	r2, [r3, #58]
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 379              		.loc 1 415 0
 380 00c2 0023     		movs	r3, #0
 381              	.L11:
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 382              		.loc 1 416 0
 383 00c4 1846     		mov	r0, r3
 384 00c6 0837     		adds	r7, r7, #8
 385              	.LCFI13:
 386              		.cfi_def_cfa_offset 8
 387 00c8 BD46     		mov	sp, r7
ARM GAS  /tmp/ccez0bZg.s 			page 15


 388              	.LCFI14:
 389              		.cfi_def_cfa_register 13
 390              		@ sp needed
 391 00ca 80BD     		pop	{r7, pc}
 392              		.cfi_endproc
 393              	.LFE128:
 395              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 396              		.align	2
 397              		.global	HAL_MultiProcessor_Init
 398              		.thumb
 399              		.thumb_func
 401              	HAL_MultiProcessor_Init:
 402              	.LFB129:
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the Multi-Processor mode according to the specified
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Address: USART address
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  WakeUpMethod: specifies the USART wake-up method.
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          This parameter can be one of the following values:
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_IDLELINE: Wake-up by an idle line detection
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_ADDRESSMARK: Wake-up by an address mark
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 403              		.loc 1 431 0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 16
 406              		@ frame_needed = 1, uses_anonymous_args = 0
 407 0000 80B5     		push	{r7, lr}
 408              	.LCFI15:
 409              		.cfi_def_cfa_offset 8
 410              		.cfi_offset 7, -8
 411              		.cfi_offset 14, -4
 412 0002 84B0     		sub	sp, sp, #16
 413              	.LCFI16:
 414              		.cfi_def_cfa_offset 24
 415 0004 00AF     		add	r7, sp, #0
 416              	.LCFI17:
 417              		.cfi_def_cfa_register 7
 418 0006 F860     		str	r0, [r7, #12]
 419 0008 0B46     		mov	r3, r1
 420 000a 7A60     		str	r2, [r7, #4]
 421 000c FB72     		strb	r3, [r7, #11]
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart == NULL)
 422              		.loc 1 433 0
 423 000e FB68     		ldr	r3, [r7, #12]
 424 0010 002B     		cmp	r3, #0
 425 0012 01D1     		bne	.L14
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 426              		.loc 1 435 0
 427 0014 0123     		movs	r3, #1
ARM GAS  /tmp/ccez0bZg.s 			page 16


 428 0016 5FE0     		b	.L15
 429              	.L14:
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_ADDRESS(Address));
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 430              		.loc 1 445 0
 431 0018 FB68     		ldr	r3, [r7, #12]
 432 001a 93F83930 		ldrb	r3, [r3, #57]
 433 001e DBB2     		uxtb	r3, r3
 434 0020 002B     		cmp	r3, #0
 435 0022 06D1     		bne	.L16
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 436              		.loc 1 448 0
 437 0024 FB68     		ldr	r3, [r7, #12]
 438 0026 0022     		movs	r2, #0
 439 0028 83F83820 		strb	r2, [r3, #56]
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 440              		.loc 1 450 0
 441 002c F868     		ldr	r0, [r7, #12]
 442 002e FFF7FEFF 		bl	HAL_UART_MspInit
 443              	.L16:
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 444              		.loc 1 453 0
 445 0032 FB68     		ldr	r3, [r7, #12]
 446 0034 2422     		movs	r2, #36
 447 0036 83F83920 		strb	r2, [r3, #57]
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 448              		.loc 1 456 0
 449 003a FB68     		ldr	r3, [r7, #12]
 450 003c 1B68     		ldr	r3, [r3]
 451 003e FA68     		ldr	r2, [r7, #12]
 452 0040 1268     		ldr	r2, [r2]
 453 0042 D268     		ldr	r2, [r2, #12]
 454 0044 22F40052 		bic	r2, r2, #8192
 455 0048 DA60     		str	r2, [r3, #12]
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 456              		.loc 1 459 0
 457 004a F868     		ldr	r0, [r7, #12]
 458 004c FFF7FEFF 		bl	UART_SetConfig
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In Multi-Processor mode, the following bits must be kept cleared: 
ARM GAS  /tmp/ccez0bZg.s 			page 17


 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register */
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 459              		.loc 1 464 0
 460 0050 FB68     		ldr	r3, [r7, #12]
 461 0052 1B68     		ldr	r3, [r3]
 462 0054 FA68     		ldr	r2, [r7, #12]
 463 0056 1268     		ldr	r2, [r2]
 464 0058 1269     		ldr	r2, [r2, #16]
 465 005a 22F49042 		bic	r2, r2, #18432
 466 005e 1A61     		str	r2, [r3, #16]
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 467              		.loc 1 465 0
 468 0060 FB68     		ldr	r3, [r7, #12]
 469 0062 1B68     		ldr	r3, [r3]
 470 0064 FA68     		ldr	r2, [r7, #12]
 471 0066 1268     		ldr	r2, [r2]
 472 0068 5269     		ldr	r2, [r2, #20]
 473 006a 22F02A02 		bic	r2, r2, #42
 474 006e 5A61     		str	r2, [r3, #20]
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear the USART address */
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_ADD);
 475              		.loc 1 468 0
 476 0070 FB68     		ldr	r3, [r7, #12]
 477 0072 1B68     		ldr	r3, [r3]
 478 0074 FA68     		ldr	r2, [r7, #12]
 479 0076 1268     		ldr	r2, [r2]
 480 0078 1269     		ldr	r2, [r2, #16]
 481 007a 22F00F02 		bic	r2, r2, #15
 482 007e 1A61     		str	r2, [r3, #16]
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART address node */
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, Address);
 483              		.loc 1 470 0
 484 0080 FB68     		ldr	r3, [r7, #12]
 485 0082 1B68     		ldr	r3, [r3]
 486 0084 FA68     		ldr	r2, [r7, #12]
 487 0086 1268     		ldr	r2, [r2]
 488 0088 1169     		ldr	r1, [r2, #16]
 489 008a FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 490 008c 0A43     		orrs	r2, r2, r1
 491 008e 1A61     		str	r2, [r3, #16]
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_WAKE);
 492              		.loc 1 473 0
 493 0090 FB68     		ldr	r3, [r7, #12]
 494 0092 1B68     		ldr	r3, [r3]
 495 0094 FA68     		ldr	r2, [r7, #12]
 496 0096 1268     		ldr	r2, [r2]
 497 0098 D268     		ldr	r2, [r2, #12]
 498 009a 22F40062 		bic	r2, r2, #2048
 499 009e DA60     		str	r2, [r3, #12]
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, WakeUpMethod);
 500              		.loc 1 474 0
 501 00a0 FB68     		ldr	r3, [r7, #12]
 502 00a2 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccez0bZg.s 			page 18


 503 00a4 FA68     		ldr	r2, [r7, #12]
 504 00a6 1268     		ldr	r2, [r2]
 505 00a8 D168     		ldr	r1, [r2, #12]
 506 00aa 7A68     		ldr	r2, [r7, #4]
 507 00ac 0A43     		orrs	r2, r2, r1
 508 00ae DA60     		str	r2, [r3, #12]
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 509              		.loc 1 477 0
 510 00b0 FB68     		ldr	r3, [r7, #12]
 511 00b2 1B68     		ldr	r3, [r3]
 512 00b4 FA68     		ldr	r2, [r7, #12]
 513 00b6 1268     		ldr	r2, [r2]
 514 00b8 D268     		ldr	r2, [r2, #12]
 515 00ba 42F40052 		orr	r2, r2, #8192
 516 00be DA60     		str	r2, [r3, #12]
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state */
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 517              		.loc 1 480 0
 518 00c0 FB68     		ldr	r3, [r7, #12]
 519 00c2 0022     		movs	r2, #0
 520 00c4 DA63     		str	r2, [r3, #60]
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 521              		.loc 1 481 0
 522 00c6 FB68     		ldr	r3, [r7, #12]
 523 00c8 2022     		movs	r2, #32
 524 00ca 83F83920 		strb	r2, [r3, #57]
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 525              		.loc 1 482 0
 526 00ce FB68     		ldr	r3, [r7, #12]
 527 00d0 2022     		movs	r2, #32
 528 00d2 83F83A20 		strb	r2, [r3, #58]
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 529              		.loc 1 484 0
 530 00d6 0023     		movs	r3, #0
 531              	.L15:
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 532              		.loc 1 485 0
 533 00d8 1846     		mov	r0, r3
 534 00da 1037     		adds	r7, r7, #16
 535              	.LCFI18:
 536              		.cfi_def_cfa_offset 8
 537 00dc BD46     		mov	sp, r7
 538              	.LCFI19:
 539              		.cfi_def_cfa_register 13
 540              		@ sp needed
 541 00de 80BD     		pop	{r7, pc}
 542              		.cfi_endproc
 543              	.LFE129:
 545              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 546              		.align	2
 547              		.global	HAL_UART_DeInit
 548              		.thumb
 549              		.thumb_func
ARM GAS  /tmp/ccez0bZg.s 			page 19


 551              	HAL_UART_DeInit:
 552              	.LFB130:
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DeInitializes the UART peripheral. 
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 553              		.loc 1 494 0
 554              		.cfi_startproc
 555              		@ args = 0, pretend = 0, frame = 8
 556              		@ frame_needed = 1, uses_anonymous_args = 0
 557 0000 80B5     		push	{r7, lr}
 558              	.LCFI20:
 559              		.cfi_def_cfa_offset 8
 560              		.cfi_offset 7, -8
 561              		.cfi_offset 14, -4
 562 0002 82B0     		sub	sp, sp, #8
 563              	.LCFI21:
 564              		.cfi_def_cfa_offset 16
 565 0004 00AF     		add	r7, sp, #0
 566              	.LCFI22:
 567              		.cfi_def_cfa_register 7
 568 0006 7860     		str	r0, [r7, #4]
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart == NULL)
 569              		.loc 1 496 0
 570 0008 7B68     		ldr	r3, [r7, #4]
 571 000a 002B     		cmp	r3, #0
 572 000c 01D1     		bne	.L18
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 573              		.loc 1 498 0
 574 000e 0123     		movs	r3, #1
 575 0010 16E0     		b	.L19
 576              	.L18:
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 577              		.loc 1 504 0
 578 0012 7B68     		ldr	r3, [r7, #4]
 579 0014 2422     		movs	r2, #36
 580 0016 83F83920 		strb	r2, [r3, #57]
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DeInit the low level hardware */
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 581              		.loc 1 507 0
 582 001a 7868     		ldr	r0, [r7, #4]
 583 001c FFF7FEFF 		bl	HAL_UART_MspDeInit
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
ARM GAS  /tmp/ccez0bZg.s 			page 20


 584              		.loc 1 509 0
 585 0020 7B68     		ldr	r3, [r7, #4]
 586 0022 0022     		movs	r2, #0
 587 0024 DA63     		str	r2, [r3, #60]
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 588              		.loc 1 510 0
 589 0026 7B68     		ldr	r3, [r7, #4]
 590 0028 0022     		movs	r2, #0
 591 002a 83F83920 		strb	r2, [r3, #57]
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 592              		.loc 1 511 0
 593 002e 7B68     		ldr	r3, [r7, #4]
 594 0030 0022     		movs	r2, #0
 595 0032 83F83A20 		strb	r2, [r3, #58]
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Lock */
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 596              		.loc 1 514 0
 597 0036 7B68     		ldr	r3, [r7, #4]
 598 0038 0022     		movs	r2, #0
 599 003a 83F83820 		strb	r2, [r3, #56]
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 600              		.loc 1 516 0
 601 003e 0023     		movs	r3, #0
 602              	.L19:
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 603              		.loc 1 517 0
 604 0040 1846     		mov	r0, r3
 605 0042 0837     		adds	r7, r7, #8
 606              	.LCFI23:
 607              		.cfi_def_cfa_offset 8
 608 0044 BD46     		mov	sp, r7
 609              	.LCFI24:
 610              		.cfi_def_cfa_register 13
 611              		@ sp needed
 612 0046 80BD     		pop	{r7, pc}
 613              		.cfi_endproc
 614              	.LFE130:
 616              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 617              		.align	2
 618              		.weak	HAL_UART_MspInit
 619              		.thumb
 620              		.thumb_func
 622              	HAL_UART_MspInit:
 623              	.LFB131:
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART MSP Init.
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 624              		.loc 1 526 0
 625              		.cfi_startproc
ARM GAS  /tmp/ccez0bZg.s 			page 21


 626              		@ args = 0, pretend = 0, frame = 8
 627              		@ frame_needed = 1, uses_anonymous_args = 0
 628              		@ link register save eliminated.
 629 0000 80B4     		push	{r7}
 630              	.LCFI25:
 631              		.cfi_def_cfa_offset 4
 632              		.cfi_offset 7, -4
 633 0002 83B0     		sub	sp, sp, #12
 634              	.LCFI26:
 635              		.cfi_def_cfa_offset 16
 636 0004 00AF     		add	r7, sp, #0
 637              	.LCFI27:
 638              		.cfi_def_cfa_register 7
 639 0006 7860     		str	r0, [r7, #4]
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    /* Prevent unused argument(s) compilation warning */
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_MspInit could be implemented in the user file
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */ 
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 640              		.loc 1 532 0
 641 0008 00BF     		nop
 642 000a 0C37     		adds	r7, r7, #12
 643              	.LCFI28:
 644              		.cfi_def_cfa_offset 4
 645 000c BD46     		mov	sp, r7
 646              	.LCFI29:
 647              		.cfi_def_cfa_register 13
 648              		@ sp needed
 649 000e 5DF8047B 		ldr	r7, [sp], #4
 650              	.LCFI30:
 651              		.cfi_restore 7
 652              		.cfi_def_cfa_offset 0
 653 0012 7047     		bx	lr
 654              		.cfi_endproc
 655              	.LFE131:
 657              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 658              		.align	2
 659              		.weak	HAL_UART_MspDeInit
 660              		.thumb
 661              		.thumb_func
 663              	HAL_UART_MspDeInit:
 664              	.LFB132:
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART MSP DeInit.
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 665              		.loc 1 541 0
 666              		.cfi_startproc
 667              		@ args = 0, pretend = 0, frame = 8
 668              		@ frame_needed = 1, uses_anonymous_args = 0
 669              		@ link register save eliminated.
ARM GAS  /tmp/ccez0bZg.s 			page 22


 670 0000 80B4     		push	{r7}
 671              	.LCFI31:
 672              		.cfi_def_cfa_offset 4
 673              		.cfi_offset 7, -4
 674 0002 83B0     		sub	sp, sp, #12
 675              	.LCFI32:
 676              		.cfi_def_cfa_offset 16
 677 0004 00AF     		add	r7, sp, #0
 678              	.LCFI33:
 679              		.cfi_def_cfa_register 7
 680 0006 7860     		str	r0, [r7, #4]
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_MspDeInit could be implemented in the user file
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */ 
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 681              		.loc 1 547 0
 682 0008 00BF     		nop
 683 000a 0C37     		adds	r7, r7, #12
 684              	.LCFI34:
 685              		.cfi_def_cfa_offset 4
 686 000c BD46     		mov	sp, r7
 687              	.LCFI35:
 688              		.cfi_def_cfa_register 13
 689              		@ sp needed
 690 000e 5DF8047B 		ldr	r7, [sp], #4
 691              	.LCFI36:
 692              		.cfi_restore 7
 693              		.cfi_def_cfa_offset 0
 694 0012 7047     		bx	lr
 695              		.cfi_endproc
 696              	.LFE132:
 698              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 699              		.align	2
 700              		.global	HAL_UART_Transmit
 701              		.thumb
 702              		.thumb_func
 704              	HAL_UART_Transmit:
 705              	.LFB133:
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions 
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief UART Transmit and Receive functions 
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim   
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                       ##### IO operation functions #####
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================  
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and Half duplex data transfers.
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) There are two modes of transfer:
ARM GAS  /tmp/ccez0bZg.s 			page 23


 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (++) Blocking mode: The communication is performed in polling mode. 
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             The HAL status of all data processing is returned by the same function 
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             after finishing transfer.  
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (++) Non blocking mode: The communication is performed using Interrupts 
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             or DMA, these APIs return the HAL status.
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             The end of the data processing will be indicated through the 
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             dedicated UART IRQ when using Interrupt mode or the DMA IRQ when 
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             using DMA mode.
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks 
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             will be executed respectively at the end of the transmit or receive process.
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             The HAL_UART_ErrorCallback() user callback will be executed when 
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             a communication error is detected.
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Blocking mode APIs are:
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Transmit()
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Receive() 
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non Blocking mode APIs with Interrupt are:
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Transmit_IT()
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Receive_IT()
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_IRQHandler()
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non Blocking mode functions with DMA are:
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Transmit_DMA()
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Receive_DMA()
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in non blocking mode:
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_TxCpltCallback()
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_RxCpltCallback()
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_ErrorCallback()
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..] 
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (@) In the Half duplex communication, it is forbidden to run the transmit 
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX 
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           can't be useful.
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       
 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in blocking mode. 
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size: Amount of data to be sent
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout: Timeout duration  
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 706              		.loc 1 615 0
 707              		.cfi_startproc
 708              		@ args = 0, pretend = 0, frame = 24
 709              		@ frame_needed = 1, uses_anonymous_args = 0
 710 0000 80B5     		push	{r7, lr}
 711              	.LCFI37:
ARM GAS  /tmp/ccez0bZg.s 			page 24


 712              		.cfi_def_cfa_offset 8
 713              		.cfi_offset 7, -8
 714              		.cfi_offset 14, -4
 715 0002 88B0     		sub	sp, sp, #32
 716              	.LCFI38:
 717              		.cfi_def_cfa_offset 40
 718 0004 02AF     		add	r7, sp, #8
 719              	.LCFI39:
 720              		.cfi_def_cfa 7, 32
 721 0006 F860     		str	r0, [r7, #12]
 722 0008 B960     		str	r1, [r7, #8]
 723 000a 3B60     		str	r3, [r7]
 724 000c 1346     		mov	r3, r2	@ movhi
 725 000e FB80     		strh	r3, [r7, #6]	@ movhi
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart = 0U;
 726              		.loc 1 617 0
 727 0010 0023     		movs	r3, #0
 728 0012 7B61     		str	r3, [r7, #20]
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY) 
 729              		.loc 1 620 0
 730 0014 FB68     		ldr	r3, [r7, #12]
 731 0016 93F83930 		ldrb	r3, [r3, #57]
 732 001a DBB2     		uxtb	r3, r3
 733 001c 202B     		cmp	r3, #32
 734 001e 40F08280 		bne	.L23
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U)) 
 735              		.loc 1 622 0
 736 0022 BB68     		ldr	r3, [r7, #8]
 737 0024 002B     		cmp	r3, #0
 738 0026 02D0     		beq	.L24
 739              		.loc 1 622 0 is_stmt 0 discriminator 1
 740 0028 FB88     		ldrh	r3, [r7, #6]
 741 002a 002B     		cmp	r3, #0
 742 002c 01D1     		bne	.L25
 743              	.L24:
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
 744              		.loc 1 624 0 is_stmt 1
 745 002e 0123     		movs	r3, #1
 746 0030 7AE0     		b	.L26
 747              	.L25:
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 748              		.loc 1 628 0
 749 0032 FB68     		ldr	r3, [r7, #12]
 750 0034 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 751 0038 012B     		cmp	r3, #1
 752 003a 01D1     		bne	.L27
 753              		.loc 1 628 0 is_stmt 0 discriminator 1
 754 003c 0223     		movs	r3, #2
 755 003e 73E0     		b	.L26
ARM GAS  /tmp/ccez0bZg.s 			page 25


 756              	.L27:
 757              		.loc 1 628 0 discriminator 2
 758 0040 FB68     		ldr	r3, [r7, #12]
 759 0042 0122     		movs	r2, #1
 760 0044 83F83820 		strb	r2, [r3, #56]
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 761              		.loc 1 630 0 is_stmt 1 discriminator 2
 762 0048 FB68     		ldr	r3, [r7, #12]
 763 004a 0022     		movs	r2, #0
 764 004c DA63     		str	r2, [r3, #60]
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 765              		.loc 1 631 0 discriminator 2
 766 004e FB68     		ldr	r3, [r7, #12]
 767 0050 2122     		movs	r2, #33
 768 0052 83F83920 		strb	r2, [r3, #57]
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 	
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init tickstart for timeout managment */
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 769              		.loc 1 634 0 discriminator 2
 770 0056 FFF7FEFF 		bl	HAL_GetTick
 771 005a 7861     		str	r0, [r7, #20]
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 772              		.loc 1 636 0 discriminator 2
 773 005c FB68     		ldr	r3, [r7, #12]
 774 005e FA88     		ldrh	r2, [r7, #6]	@ movhi
 775 0060 9A84     		strh	r2, [r3, #36]	@ movhi
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 776              		.loc 1 637 0 discriminator 2
 777 0062 FB68     		ldr	r3, [r7, #12]
 778 0064 FA88     		ldrh	r2, [r7, #6]	@ movhi
 779 0066 DA84     		strh	r2, [r3, #38]	@ movhi
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 780              		.loc 1 638 0 discriminator 2
 781 0068 41E0     		b	.L28
 782              	.L34:
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->TxXferCount--;
 783              		.loc 1 640 0
 784 006a FB68     		ldr	r3, [r7, #12]
 785 006c DB8C     		ldrh	r3, [r3, #38]	@ movhi
 786 006e 9BB2     		uxth	r3, r3
 787 0070 013B     		subs	r3, r3, #1
 788 0072 9AB2     		uxth	r2, r3
 789 0074 FB68     		ldr	r3, [r7, #12]
 790 0076 DA84     		strh	r2, [r3, #38]	@ movhi
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 791              		.loc 1 641 0
 792 0078 FB68     		ldr	r3, [r7, #12]
 793 007a 9B68     		ldr	r3, [r3, #8]
 794 007c B3F5805F 		cmp	r3, #4096
 795 0080 21D1     		bne	.L29
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 796              		.loc 1 643 0
 797 0082 3B68     		ldr	r3, [r7]
ARM GAS  /tmp/ccez0bZg.s 			page 26


 798 0084 0093     		str	r3, [sp]
 799 0086 7B69     		ldr	r3, [r7, #20]
 800 0088 0022     		movs	r2, #0
 801 008a 8021     		movs	r1, #128
 802 008c F868     		ldr	r0, [r7, #12]
 803 008e FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 804 0092 0346     		mov	r3, r0
 805 0094 002B     		cmp	r3, #0
 806 0096 01D0     		beq	.L30
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 807              		.loc 1 645 0
 808 0098 0323     		movs	r3, #3
 809 009a 45E0     		b	.L26
 810              	.L30:
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 811              		.loc 1 647 0
 812 009c BB68     		ldr	r3, [r7, #8]
 813 009e 3B61     		str	r3, [r7, #16]
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->Instance->DR = (*tmp & (uint16_t)0x01FFU);
 814              		.loc 1 648 0
 815 00a0 FB68     		ldr	r3, [r7, #12]
 816 00a2 1B68     		ldr	r3, [r3]
 817 00a4 3A69     		ldr	r2, [r7, #16]
 818 00a6 1288     		ldrh	r2, [r2]
 819 00a8 C2F30802 		ubfx	r2, r2, #0, #9
 820 00ac 5A60     		str	r2, [r3, #4]
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 821              		.loc 1 649 0
 822 00ae FB68     		ldr	r3, [r7, #12]
 823 00b0 1B69     		ldr	r3, [r3, #16]
 824 00b2 002B     		cmp	r3, #0
 825 00b4 03D1     		bne	.L31
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData +=2U;
 826              		.loc 1 651 0
 827 00b6 BB68     		ldr	r3, [r7, #8]
 828 00b8 0233     		adds	r3, r3, #2
 829 00ba BB60     		str	r3, [r7, #8]
 830 00bc 17E0     		b	.L28
 831              	.L31:
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData +=1U;
 832              		.loc 1 655 0
 833 00be BB68     		ldr	r3, [r7, #8]
 834 00c0 0133     		adds	r3, r3, #1
 835 00c2 BB60     		str	r3, [r7, #8]
 836 00c4 13E0     		b	.L28
 837              	.L29:
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       } 
 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
ARM GAS  /tmp/ccez0bZg.s 			page 27


 838              		.loc 1 660 0
 839 00c6 3B68     		ldr	r3, [r7]
 840 00c8 0093     		str	r3, [sp]
 841 00ca 7B69     		ldr	r3, [r7, #20]
 842 00cc 0022     		movs	r2, #0
 843 00ce 8021     		movs	r1, #128
 844 00d0 F868     		ldr	r0, [r7, #12]
 845 00d2 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 846 00d6 0346     		mov	r3, r0
 847 00d8 002B     		cmp	r3, #0
 848 00da 01D0     		beq	.L33
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 849              		.loc 1 662 0
 850 00dc 0323     		movs	r3, #3
 851 00de 23E0     		b	.L26
 852              	.L33:
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->Instance->DR = (*pData++ & (uint8_t)0xFFU);
 853              		.loc 1 664 0
 854 00e0 FB68     		ldr	r3, [r7, #12]
 855 00e2 1A68     		ldr	r2, [r3]
 856 00e4 BB68     		ldr	r3, [r7, #8]
 857 00e6 591C     		adds	r1, r3, #1
 858 00e8 B960     		str	r1, [r7, #8]
 859 00ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 860 00ec 5360     		str	r3, [r2, #4]
 861              	.L28:
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 862              		.loc 1 638 0
 863 00ee FB68     		ldr	r3, [r7, #12]
 864 00f0 DB8C     		ldrh	r3, [r3, #38]	@ movhi
 865 00f2 9BB2     		uxth	r3, r3
 866 00f4 002B     		cmp	r3, #0
 867 00f6 B8D1     		bne	.L34
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       } 
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 868              		.loc 1 668 0
 869 00f8 3B68     		ldr	r3, [r7]
 870 00fa 0093     		str	r3, [sp]
 871 00fc 7B69     		ldr	r3, [r7, #20]
 872 00fe 0022     		movs	r2, #0
 873 0100 4021     		movs	r1, #64
 874 0102 F868     		ldr	r0, [r7, #12]
 875 0104 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 876 0108 0346     		mov	r3, r0
 877 010a 002B     		cmp	r3, #0
 878 010c 01D0     		beq	.L35
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     { 
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_TIMEOUT;
 879              		.loc 1 670 0
 880 010e 0323     		movs	r3, #3
 881 0110 0AE0     		b	.L26
 882              	.L35:
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
ARM GAS  /tmp/ccez0bZg.s 			page 28


 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 883              		.loc 1 674 0
 884 0112 FB68     		ldr	r3, [r7, #12]
 885 0114 2022     		movs	r2, #32
 886 0116 83F83920 		strb	r2, [r3, #57]
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 887              		.loc 1 677 0
 888 011a FB68     		ldr	r3, [r7, #12]
 889 011c 0022     		movs	r2, #0
 890 011e 83F83820 		strb	r2, [r3, #56]
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 891              		.loc 1 679 0
 892 0122 0023     		movs	r3, #0
 893 0124 00E0     		b	.L26
 894              	.L23:
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 895              		.loc 1 683 0
 896 0126 0223     		movs	r3, #2
 897              	.L26:
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 898              		.loc 1 685 0
 899 0128 1846     		mov	r0, r3
 900 012a 1837     		adds	r7, r7, #24
 901              	.LCFI40:
 902              		.cfi_def_cfa_offset 8
 903 012c BD46     		mov	sp, r7
 904              	.LCFI41:
 905              		.cfi_def_cfa_register 13
 906              		@ sp needed
 907 012e 80BD     		pop	{r7, pc}
 908              		.cfi_endproc
 909              	.LFE133:
 911              		.section	.text.HAL_UART_Receive,"ax",%progbits
 912              		.align	2
 913              		.global	HAL_UART_Receive
 914              		.thumb
 915              		.thumb_func
 917              	HAL_UART_Receive:
 918              	.LFB134:
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in blocking mode. 
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size: Amount of data to be received
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout: Timeout duration
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
ARM GAS  /tmp/ccez0bZg.s 			page 29


 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** { 
 919              		.loc 1 697 0
 920              		.cfi_startproc
 921              		@ args = 0, pretend = 0, frame = 24
 922              		@ frame_needed = 1, uses_anonymous_args = 0
 923 0000 80B5     		push	{r7, lr}
 924              	.LCFI42:
 925              		.cfi_def_cfa_offset 8
 926              		.cfi_offset 7, -8
 927              		.cfi_offset 14, -4
 928 0002 88B0     		sub	sp, sp, #32
 929              	.LCFI43:
 930              		.cfi_def_cfa_offset 40
 931 0004 02AF     		add	r7, sp, #8
 932              	.LCFI44:
 933              		.cfi_def_cfa 7, 32
 934 0006 F860     		str	r0, [r7, #12]
 935 0008 B960     		str	r1, [r7, #8]
 936 000a 3B60     		str	r3, [r7]
 937 000c 1346     		mov	r3, r2	@ movhi
 938 000e FB80     		strh	r3, [r7, #6]	@ movhi
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart = 0U;
 939              		.loc 1 699 0
 940 0010 0023     		movs	r3, #0
 941 0012 7B61     		str	r3, [r7, #20]
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY) 
 942              		.loc 1 702 0
 943 0014 FB68     		ldr	r3, [r7, #12]
 944 0016 93F83A30 		ldrb	r3, [r3, #58]
 945 001a DBB2     		uxtb	r3, r3
 946 001c 202B     		cmp	r3, #32
 947 001e 40F09080 		bne	.L37
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   { 
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U)) 
 948              		.loc 1 704 0
 949 0022 BB68     		ldr	r3, [r7, #8]
 950 0024 002B     		cmp	r3, #0
 951 0026 02D0     		beq	.L38
 952              		.loc 1 704 0 is_stmt 0 discriminator 1
 953 0028 FB88     		ldrh	r3, [r7, #6]
 954 002a 002B     		cmp	r3, #0
 955 002c 01D1     		bne	.L39
 956              	.L38:
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
 957              		.loc 1 706 0 is_stmt 1
 958 002e 0123     		movs	r3, #1
 959 0030 88E0     		b	.L40
 960              	.L39:
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
ARM GAS  /tmp/ccez0bZg.s 			page 30


 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 961              		.loc 1 710 0
 962 0032 FB68     		ldr	r3, [r7, #12]
 963 0034 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 964 0038 012B     		cmp	r3, #1
 965 003a 01D1     		bne	.L41
 966              		.loc 1 710 0 is_stmt 0 discriminator 1
 967 003c 0223     		movs	r3, #2
 968 003e 81E0     		b	.L40
 969              	.L41:
 970              		.loc 1 710 0 discriminator 2
 971 0040 FB68     		ldr	r3, [r7, #12]
 972 0042 0122     		movs	r2, #1
 973 0044 83F83820 		strb	r2, [r3, #56]
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 974              		.loc 1 712 0 is_stmt 1 discriminator 2
 975 0048 FB68     		ldr	r3, [r7, #12]
 976 004a 0022     		movs	r2, #0
 977 004c DA63     		str	r2, [r3, #60]
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 978              		.loc 1 713 0 discriminator 2
 979 004e FB68     		ldr	r3, [r7, #12]
 980 0050 2222     		movs	r2, #34
 981 0052 83F83A20 		strb	r2, [r3, #58]
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 	
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init tickstart for timeout managment */
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 982              		.loc 1 716 0 discriminator 2
 983 0056 FFF7FEFF 		bl	HAL_GetTick
 984 005a 7861     		str	r0, [r7, #20]
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size; 
 985              		.loc 1 718 0 discriminator 2
 986 005c FB68     		ldr	r3, [r7, #12]
 987 005e FA88     		ldrh	r2, [r7, #6]	@ movhi
 988 0060 9A85     		strh	r2, [r3, #44]	@ movhi
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 989              		.loc 1 719 0 discriminator 2
 990 0062 FB68     		ldr	r3, [r7, #12]
 991 0064 FA88     		ldrh	r2, [r7, #6]	@ movhi
 992 0066 DA85     		strh	r2, [r3, #46]	@ movhi
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check the remain data to be received */
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while(huart->RxXferCount > 0U)
 993              		.loc 1 722 0 discriminator 2
 994 0068 5CE0     		b	.L42
 995              	.L49:
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxXferCount--;
 996              		.loc 1 724 0
 997 006a FB68     		ldr	r3, [r7, #12]
 998 006c DB8D     		ldrh	r3, [r3, #46]	@ movhi
 999 006e 9BB2     		uxth	r3, r3
 1000 0070 013B     		subs	r3, r3, #1
 1001 0072 9AB2     		uxth	r2, r3
 1002 0074 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccez0bZg.s 			page 31


 1003 0076 DA85     		strh	r2, [r3, #46]	@ movhi
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 1004              		.loc 1 725 0
 1005 0078 FB68     		ldr	r3, [r7, #12]
 1006 007a 9B68     		ldr	r3, [r3, #8]
 1007 007c B3F5805F 		cmp	r3, #4096
 1008 0080 2BD1     		bne	.L43
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 1009              		.loc 1 727 0
 1010 0082 3B68     		ldr	r3, [r7]
 1011 0084 0093     		str	r3, [sp]
 1012 0086 7B69     		ldr	r3, [r7, #20]
 1013 0088 0022     		movs	r2, #0
 1014 008a 2021     		movs	r1, #32
 1015 008c F868     		ldr	r0, [r7, #12]
 1016 008e FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1017 0092 0346     		mov	r3, r0
 1018 0094 002B     		cmp	r3, #0
 1019 0096 01D0     		beq	.L44
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 1020              		.loc 1 729 0
 1021 0098 0323     		movs	r3, #3
 1022 009a 53E0     		b	.L40
 1023              	.L44:
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 1024              		.loc 1 731 0
 1025 009c BB68     		ldr	r3, [r7, #8]
 1026 009e 3B61     		str	r3, [r7, #16]
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 1027              		.loc 1 732 0
 1028 00a0 FB68     		ldr	r3, [r7, #12]
 1029 00a2 1B69     		ldr	r3, [r3, #16]
 1030 00a4 002B     		cmp	r3, #0
 1031 00a6 0CD1     		bne	.L45
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FFU);
 1032              		.loc 1 734 0
 1033 00a8 FB68     		ldr	r3, [r7, #12]
 1034 00aa 1B68     		ldr	r3, [r3]
 1035 00ac 5B68     		ldr	r3, [r3, #4]
 1036 00ae 9BB2     		uxth	r3, r3
 1037 00b0 C3F30803 		ubfx	r3, r3, #0, #9
 1038 00b4 9AB2     		uxth	r2, r3
 1039 00b6 3B69     		ldr	r3, [r7, #16]
 1040 00b8 1A80     		strh	r2, [r3]	@ movhi
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData +=2U;
 1041              		.loc 1 735 0
 1042 00ba BB68     		ldr	r3, [r7, #8]
 1043 00bc 0233     		adds	r3, r3, #2
 1044 00be BB60     		str	r3, [r7, #8]
 1045 00c0 30E0     		b	.L42
 1046              	.L45:
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
ARM GAS  /tmp/ccez0bZg.s 			page 32


 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FFU);
 1047              		.loc 1 739 0
 1048 00c2 FB68     		ldr	r3, [r7, #12]
 1049 00c4 1B68     		ldr	r3, [r3]
 1050 00c6 5B68     		ldr	r3, [r3, #4]
 1051 00c8 9BB2     		uxth	r3, r3
 1052 00ca DBB2     		uxtb	r3, r3
 1053 00cc 9AB2     		uxth	r2, r3
 1054 00ce 3B69     		ldr	r3, [r7, #16]
 1055 00d0 1A80     		strh	r2, [r3]	@ movhi
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData +=1U;
 1056              		.loc 1 740 0
 1057 00d2 BB68     		ldr	r3, [r7, #8]
 1058 00d4 0133     		adds	r3, r3, #1
 1059 00d6 BB60     		str	r3, [r7, #8]
 1060 00d8 24E0     		b	.L42
 1061              	.L43:
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       } 
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 1062              		.loc 1 746 0
 1063 00da 3B68     		ldr	r3, [r7]
 1064 00dc 0093     		str	r3, [sp]
 1065 00de 7B69     		ldr	r3, [r7, #20]
 1066 00e0 0022     		movs	r2, #0
 1067 00e2 2021     		movs	r1, #32
 1068 00e4 F868     		ldr	r0, [r7, #12]
 1069 00e6 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1070 00ea 0346     		mov	r3, r0
 1071 00ec 002B     		cmp	r3, #0
 1072 00ee 01D0     		beq	.L47
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 1073              		.loc 1 748 0
 1074 00f0 0323     		movs	r3, #3
 1075 00f2 27E0     		b	.L40
 1076              	.L47:
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 1077              		.loc 1 750 0
 1078 00f4 FB68     		ldr	r3, [r7, #12]
 1079 00f6 1B69     		ldr	r3, [r3, #16]
 1080 00f8 002B     		cmp	r3, #0
 1081 00fa 08D1     		bne	.L48
 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FFU);
 1082              		.loc 1 752 0
 1083 00fc BB68     		ldr	r3, [r7, #8]
 1084 00fe 5A1C     		adds	r2, r3, #1
 1085 0100 BA60     		str	r2, [r7, #8]
 1086 0102 FA68     		ldr	r2, [r7, #12]
 1087 0104 1268     		ldr	r2, [r2]
 1088 0106 5268     		ldr	r2, [r2, #4]
ARM GAS  /tmp/ccez0bZg.s 			page 33


 1089 0108 D2B2     		uxtb	r2, r2
 1090 010a 1A70     		strb	r2, [r3]
 1091 010c 0AE0     		b	.L42
 1092              	.L48:
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007FU);
 1093              		.loc 1 756 0
 1094 010e BB68     		ldr	r3, [r7, #8]
 1095 0110 5A1C     		adds	r2, r3, #1
 1096 0112 BA60     		str	r2, [r7, #8]
 1097 0114 FA68     		ldr	r2, [r7, #12]
 1098 0116 1268     		ldr	r2, [r2]
 1099 0118 5268     		ldr	r2, [r2, #4]
 1100 011a D2B2     		uxtb	r2, r2
 1101 011c 02F07F02 		and	r2, r2, #127
 1102 0120 D2B2     		uxtb	r2, r2
 1103 0122 1A70     		strb	r2, [r3]
 1104              	.L42:
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1105              		.loc 1 722 0
 1106 0124 FB68     		ldr	r3, [r7, #12]
 1107 0126 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 1108 0128 9BB2     		uxth	r3, r3
 1109 012a 002B     		cmp	r3, #0
 1110 012c 9DD1     		bne	.L49
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1111              		.loc 1 763 0
 1112 012e FB68     		ldr	r3, [r7, #12]
 1113 0130 2022     		movs	r2, #32
 1114 0132 83F83A20 		strb	r2, [r3, #58]
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1115              		.loc 1 766 0
 1116 0136 FB68     		ldr	r3, [r7, #12]
 1117 0138 0022     		movs	r2, #0
 1118 013a 83F83820 		strb	r2, [r3, #56]
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1119              		.loc 1 768 0
 1120 013e 0023     		movs	r3, #0
 1121 0140 00E0     		b	.L40
 1122              	.L37:
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;   
 1123              		.loc 1 772 0
 1124 0142 0223     		movs	r3, #2
ARM GAS  /tmp/ccez0bZg.s 			page 34


 1125              	.L40:
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1126              		.loc 1 774 0
 1127 0144 1846     		mov	r0, r3
 1128 0146 1837     		adds	r7, r7, #24
 1129              	.LCFI45:
 1130              		.cfi_def_cfa_offset 8
 1131 0148 BD46     		mov	sp, r7
 1132              	.LCFI46:
 1133              		.cfi_def_cfa_register 13
 1134              		@ sp needed
 1135 014a 80BD     		pop	{r7, pc}
 1136              		.cfi_endproc
 1137              	.LFE134:
 1139              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1140              		.align	2
 1141              		.global	HAL_UART_Transmit_IT
 1142              		.thumb
 1143              		.thumb_func
 1145              	HAL_UART_Transmit_IT:
 1146              	.LFB135:
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size: Amount of data to be sent
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1147              		.loc 1 785 0
 1148              		.cfi_startproc
 1149              		@ args = 0, pretend = 0, frame = 16
 1150              		@ frame_needed = 1, uses_anonymous_args = 0
 1151              		@ link register save eliminated.
 1152 0000 80B4     		push	{r7}
 1153              	.LCFI47:
 1154              		.cfi_def_cfa_offset 4
 1155              		.cfi_offset 7, -4
 1156 0002 85B0     		sub	sp, sp, #20
 1157              	.LCFI48:
 1158              		.cfi_def_cfa_offset 24
 1159 0004 00AF     		add	r7, sp, #0
 1160              	.LCFI49:
 1161              		.cfi_def_cfa_register 7
 1162 0006 F860     		str	r0, [r7, #12]
 1163 0008 B960     		str	r1, [r7, #8]
 1164 000a 1346     		mov	r3, r2
 1165 000c FB80     		strh	r3, [r7, #6]	@ movhi
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 1166              		.loc 1 787 0
 1167 000e FB68     		ldr	r3, [r7, #12]
 1168 0010 93F83930 		ldrb	r3, [r3, #57]
ARM GAS  /tmp/ccez0bZg.s 			page 35


 1169 0014 DBB2     		uxtb	r3, r3
 1170 0016 202B     		cmp	r3, #32
 1171 0018 30D1     		bne	.L51
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U)) 
 1172              		.loc 1 789 0
 1173 001a BB68     		ldr	r3, [r7, #8]
 1174 001c 002B     		cmp	r3, #0
 1175 001e 02D0     		beq	.L52
 1176              		.loc 1 789 0 is_stmt 0 discriminator 1
 1177 0020 FB88     		ldrh	r3, [r7, #6]
 1178 0022 002B     		cmp	r3, #0
 1179 0024 01D1     		bne	.L53
 1180              	.L52:
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1181              		.loc 1 791 0 is_stmt 1
 1182 0026 0123     		movs	r3, #1
 1183 0028 29E0     		b	.L54
 1184              	.L53:
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1185              		.loc 1 795 0
 1186 002a FB68     		ldr	r3, [r7, #12]
 1187 002c 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1188 0030 012B     		cmp	r3, #1
 1189 0032 01D1     		bne	.L55
 1190              		.loc 1 795 0 is_stmt 0 discriminator 1
 1191 0034 0223     		movs	r3, #2
 1192 0036 22E0     		b	.L54
 1193              	.L55:
 1194              		.loc 1 795 0 discriminator 2
 1195 0038 FB68     		ldr	r3, [r7, #12]
 1196 003a 0122     		movs	r2, #1
 1197 003c 83F83820 		strb	r2, [r3, #56]
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 1198              		.loc 1 797 0 is_stmt 1 discriminator 2
 1199 0040 FB68     		ldr	r3, [r7, #12]
 1200 0042 BA68     		ldr	r2, [r7, #8]
 1201 0044 1A62     		str	r2, [r3, #32]
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 1202              		.loc 1 798 0 discriminator 2
 1203 0046 FB68     		ldr	r3, [r7, #12]
 1204 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1205 004a 9A84     		strh	r2, [r3, #36]	@ movhi
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1206              		.loc 1 799 0 discriminator 2
 1207 004c FB68     		ldr	r3, [r7, #12]
 1208 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1209 0050 DA84     		strh	r2, [r3, #38]	@ movhi
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1210              		.loc 1 801 0 discriminator 2
 1211 0052 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccez0bZg.s 			page 36


 1212 0054 0022     		movs	r2, #0
 1213 0056 DA63     		str	r2, [r3, #60]
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1214              		.loc 1 802 0 discriminator 2
 1215 0058 FB68     		ldr	r3, [r7, #12]
 1216 005a 2122     		movs	r2, #33
 1217 005c 83F83920 		strb	r2, [r3, #57]
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1218              		.loc 1 805 0 discriminator 2
 1219 0060 FB68     		ldr	r3, [r7, #12]
 1220 0062 0022     		movs	r2, #0
 1221 0064 83F83820 		strb	r2, [r3, #56]
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Transmit data register empty Interrupt */
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 1222              		.loc 1 808 0 discriminator 2
 1223 0068 FB68     		ldr	r3, [r7, #12]
 1224 006a 1B68     		ldr	r3, [r3]
 1225 006c FA68     		ldr	r2, [r7, #12]
 1226 006e 1268     		ldr	r2, [r2]
 1227 0070 D268     		ldr	r2, [r2, #12]
 1228 0072 42F08002 		orr	r2, r2, #128
 1229 0076 DA60     		str	r2, [r3, #12]
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1230              		.loc 1 810 0 discriminator 2
 1231 0078 0023     		movs	r3, #0
 1232 007a 00E0     		b	.L54
 1233              	.L51:
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;   
 1234              		.loc 1 814 0
 1235 007c 0223     		movs	r3, #2
 1236              	.L54:
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1237              		.loc 1 816 0
 1238 007e 1846     		mov	r0, r3
 1239 0080 1437     		adds	r7, r7, #20
 1240              	.LCFI50:
 1241              		.cfi_def_cfa_offset 4
 1242 0082 BD46     		mov	sp, r7
 1243              	.LCFI51:
 1244              		.cfi_def_cfa_register 13
 1245              		@ sp needed
 1246 0084 5DF8047B 		ldr	r7, [sp], #4
 1247              	.LCFI52:
 1248              		.cfi_restore 7
 1249              		.cfi_def_cfa_offset 0
 1250 0088 7047     		bx	lr
 1251              		.cfi_endproc
 1252              	.LFE135:
 1254 008a 00BF     		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
ARM GAS  /tmp/ccez0bZg.s 			page 37


 1255              		.align	2
 1256              		.global	HAL_UART_Receive_IT
 1257              		.thumb
 1258              		.thumb_func
 1260              	HAL_UART_Receive_IT:
 1261              	.LFB136:
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode 
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size: Amount of data to be received
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1262              		.loc 1 827 0
 1263              		.cfi_startproc
 1264              		@ args = 0, pretend = 0, frame = 16
 1265              		@ frame_needed = 1, uses_anonymous_args = 0
 1266              		@ link register save eliminated.
 1267 0000 80B4     		push	{r7}
 1268              	.LCFI53:
 1269              		.cfi_def_cfa_offset 4
 1270              		.cfi_offset 7, -4
 1271 0002 85B0     		sub	sp, sp, #20
 1272              	.LCFI54:
 1273              		.cfi_def_cfa_offset 24
 1274 0004 00AF     		add	r7, sp, #0
 1275              	.LCFI55:
 1276              		.cfi_def_cfa_register 7
 1277 0006 F860     		str	r0, [r7, #12]
 1278 0008 B960     		str	r1, [r7, #8]
 1279 000a 1346     		mov	r3, r2
 1280 000c FB80     		strh	r3, [r7, #6]	@ movhi
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */ 
 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 1281              		.loc 1 829 0
 1282 000e FB68     		ldr	r3, [r7, #12]
 1283 0010 93F83A30 		ldrb	r3, [r3, #58]
 1284 0014 DBB2     		uxtb	r3, r3
 1285 0016 202B     		cmp	r3, #32
 1286 0018 38D1     		bne	.L57
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U)) 
 1287              		.loc 1 831 0
 1288 001a BB68     		ldr	r3, [r7, #8]
 1289 001c 002B     		cmp	r3, #0
 1290 001e 02D0     		beq	.L58
 1291              		.loc 1 831 0 is_stmt 0 discriminator 1
 1292 0020 FB88     		ldrh	r3, [r7, #6]
 1293 0022 002B     		cmp	r3, #0
 1294 0024 01D1     		bne	.L59
 1295              	.L58:
 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
ARM GAS  /tmp/ccez0bZg.s 			page 38


 1296              		.loc 1 833 0 is_stmt 1
 1297 0026 0123     		movs	r3, #1
 1298 0028 31E0     		b	.L60
 1299              	.L59:
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1300              		.loc 1 837 0
 1301 002a FB68     		ldr	r3, [r7, #12]
 1302 002c 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1303 0030 012B     		cmp	r3, #1
 1304 0032 01D1     		bne	.L61
 1305              		.loc 1 837 0 is_stmt 0 discriminator 1
 1306 0034 0223     		movs	r3, #2
 1307 0036 2AE0     		b	.L60
 1308              	.L61:
 1309              		.loc 1 837 0 discriminator 2
 1310 0038 FB68     		ldr	r3, [r7, #12]
 1311 003a 0122     		movs	r2, #1
 1312 003c 83F83820 		strb	r2, [r3, #56]
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 1313              		.loc 1 839 0 is_stmt 1 discriminator 2
 1314 0040 FB68     		ldr	r3, [r7, #12]
 1315 0042 BA68     		ldr	r2, [r7, #8]
 1316 0044 9A62     		str	r2, [r3, #40]
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 1317              		.loc 1 840 0 discriminator 2
 1318 0046 FB68     		ldr	r3, [r7, #12]
 1319 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1320 004a 9A85     		strh	r2, [r3, #44]	@ movhi
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 1321              		.loc 1 841 0 discriminator 2
 1322 004c FB68     		ldr	r3, [r7, #12]
 1323 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1324 0050 DA85     		strh	r2, [r3, #46]	@ movhi
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1325              		.loc 1 843 0 discriminator 2
 1326 0052 FB68     		ldr	r3, [r7, #12]
 1327 0054 0022     		movs	r2, #0
 1328 0056 DA63     		str	r2, [r3, #60]
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1329              		.loc 1 844 0 discriminator 2
 1330 0058 FB68     		ldr	r3, [r7, #12]
 1331 005a 2222     		movs	r2, #34
 1332 005c 83F83A20 		strb	r2, [r3, #58]
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1333              		.loc 1 847 0 discriminator 2
 1334 0060 FB68     		ldr	r3, [r7, #12]
 1335 0062 0022     		movs	r2, #0
 1336 0064 83F83820 		strb	r2, [r3, #56]
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
ARM GAS  /tmp/ccez0bZg.s 			page 39


 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1337              		.loc 1 850 0 discriminator 2
 1338 0068 FB68     		ldr	r3, [r7, #12]
 1339 006a 1B68     		ldr	r3, [r3]
 1340 006c FA68     		ldr	r2, [r7, #12]
 1341 006e 1268     		ldr	r2, [r2]
 1342 0070 5269     		ldr	r2, [r2, #20]
 1343 0072 42F00102 		orr	r2, r2, #1
 1344 0076 5A61     		str	r2, [r3, #20]
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Parity Error and Data Register not empty Interrupts */
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 1345              		.loc 1 853 0 discriminator 2
 1346 0078 FB68     		ldr	r3, [r7, #12]
 1347 007a 1B68     		ldr	r3, [r3]
 1348 007c FA68     		ldr	r2, [r7, #12]
 1349 007e 1268     		ldr	r2, [r2]
 1350 0080 D268     		ldr	r2, [r2, #12]
 1351 0082 42F49072 		orr	r2, r2, #288
 1352 0086 DA60     		str	r2, [r3, #12]
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1353              		.loc 1 855 0 discriminator 2
 1354 0088 0023     		movs	r3, #0
 1355 008a 00E0     		b	.L60
 1356              	.L57:
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY; 
 1357              		.loc 1 859 0
 1358 008c 0223     		movs	r3, #2
 1359              	.L60:
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1360              		.loc 1 861 0
 1361 008e 1846     		mov	r0, r3
 1362 0090 1437     		adds	r7, r7, #20
 1363              	.LCFI56:
 1364              		.cfi_def_cfa_offset 4
 1365 0092 BD46     		mov	sp, r7
 1366              	.LCFI57:
 1367              		.cfi_def_cfa_register 13
 1368              		@ sp needed
 1369 0094 5DF8047B 		ldr	r7, [sp], #4
 1370              	.LCFI58:
 1371              		.cfi_restore 7
 1372              		.cfi_def_cfa_offset 0
 1373 0098 7047     		bx	lr
 1374              		.cfi_endproc
 1375              	.LFE136:
 1377 009a 00BF     		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1378              		.align	2
 1379              		.global	HAL_UART_Transmit_DMA
 1380              		.thumb
 1381              		.thumb_func
 1383              	HAL_UART_Transmit_DMA:
ARM GAS  /tmp/ccez0bZg.s 			page 40


 1384              	.LFB137:
 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode. 
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size: Amount of data to be sent
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1385              		.loc 1 872 0
 1386              		.cfi_startproc
 1387              		@ args = 0, pretend = 0, frame = 24
 1388              		@ frame_needed = 1, uses_anonymous_args = 0
 1389 0000 80B5     		push	{r7, lr}
 1390              	.LCFI59:
 1391              		.cfi_def_cfa_offset 8
 1392              		.cfi_offset 7, -8
 1393              		.cfi_offset 14, -4
 1394 0002 86B0     		sub	sp, sp, #24
 1395              	.LCFI60:
 1396              		.cfi_def_cfa_offset 32
 1397 0004 00AF     		add	r7, sp, #0
 1398              	.LCFI61:
 1399              		.cfi_def_cfa_register 7
 1400 0006 F860     		str	r0, [r7, #12]
 1401 0008 B960     		str	r1, [r7, #8]
 1402 000a 1346     		mov	r3, r2
 1403 000c FB80     		strh	r3, [r7, #6]	@ movhi
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 1404              		.loc 1 876 0
 1405 000e FB68     		ldr	r3, [r7, #12]
 1406 0010 93F83930 		ldrb	r3, [r3, #57]
 1407 0014 DBB2     		uxtb	r3, r3
 1408 0016 202B     		cmp	r3, #32
 1409 0018 53D1     		bne	.L63
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 1410              		.loc 1 878 0
 1411 001a BB68     		ldr	r3, [r7, #8]
 1412 001c 002B     		cmp	r3, #0
 1413 001e 02D0     		beq	.L64
 1414              		.loc 1 878 0 is_stmt 0 discriminator 1
 1415 0020 FB88     		ldrh	r3, [r7, #6]
 1416 0022 002B     		cmp	r3, #0
 1417 0024 01D1     		bne	.L65
 1418              	.L64:
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1419              		.loc 1 880 0 is_stmt 1
 1420 0026 0123     		movs	r3, #1
 1421 0028 4CE0     		b	.L66
ARM GAS  /tmp/ccez0bZg.s 			page 41


 1422              	.L65:
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1423              		.loc 1 884 0
 1424 002a FB68     		ldr	r3, [r7, #12]
 1425 002c 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1426 0030 012B     		cmp	r3, #1
 1427 0032 01D1     		bne	.L67
 1428              		.loc 1 884 0 is_stmt 0 discriminator 1
 1429 0034 0223     		movs	r3, #2
 1430 0036 45E0     		b	.L66
 1431              	.L67:
 1432              		.loc 1 884 0 discriminator 2
 1433 0038 FB68     		ldr	r3, [r7, #12]
 1434 003a 0122     		movs	r2, #1
 1435 003c 83F83820 		strb	r2, [r3, #56]
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 1436              		.loc 1 886 0 is_stmt 1 discriminator 2
 1437 0040 BA68     		ldr	r2, [r7, #8]
 1438 0042 FB68     		ldr	r3, [r7, #12]
 1439 0044 1A62     		str	r2, [r3, #32]
 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 1440              		.loc 1 887 0 discriminator 2
 1441 0046 FB68     		ldr	r3, [r7, #12]
 1442 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1443 004a 9A84     		strh	r2, [r3, #36]	@ movhi
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1444              		.loc 1 888 0 discriminator 2
 1445 004c FB68     		ldr	r3, [r7, #12]
 1446 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1447 0050 DA84     		strh	r2, [r3, #38]	@ movhi
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1448              		.loc 1 890 0 discriminator 2
 1449 0052 FB68     		ldr	r3, [r7, #12]
 1450 0054 0022     		movs	r2, #0
 1451 0056 DA63     		str	r2, [r3, #60]
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1452              		.loc 1 891 0 discriminator 2
 1453 0058 FB68     		ldr	r3, [r7, #12]
 1454 005a 2122     		movs	r2, #33
 1455 005c 83F83920 		strb	r2, [r3, #57]
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 1456              		.loc 1 894 0 discriminator 2
 1457 0060 FB68     		ldr	r3, [r7, #12]
 1458 0062 1B6B     		ldr	r3, [r3, #48]
 1459 0064 194A     		ldr	r2, .L68
 1460 0066 DA63     		str	r2, [r3, #60]
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 1461              		.loc 1 897 0 discriminator 2
ARM GAS  /tmp/ccez0bZg.s 			page 42


 1462 0068 FB68     		ldr	r3, [r7, #12]
 1463 006a 1B6B     		ldr	r3, [r3, #48]
 1464 006c 184A     		ldr	r2, .L68+4
 1465 006e 1A64     		str	r2, [r3, #64]
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA error callback */
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 1466              		.loc 1 900 0 discriminator 2
 1467 0070 FB68     		ldr	r3, [r7, #12]
 1468 0072 1B6B     		ldr	r3, [r3, #48]
 1469 0074 174A     		ldr	r2, .L68+8
 1470 0076 DA64     		str	r2, [r3, #76]
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA abort callback */
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
 1471              		.loc 1 903 0 discriminator 2
 1472 0078 FB68     		ldr	r3, [r7, #12]
 1473 007a 1B6B     		ldr	r3, [r3, #48]
 1474 007c 0022     		movs	r2, #0
 1475 007e 1A65     		str	r2, [r3, #80]
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART transmit DMA Stream */
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
 1476              		.loc 1 906 0 discriminator 2
 1477 0080 07F10803 		add	r3, r7, #8
 1478 0084 7B61     		str	r3, [r7, #20]
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, *(uint32_t*)tmp, (uint32_t)&huart->Instance->DR, Size);
 1479              		.loc 1 907 0 discriminator 2
 1480 0086 FB68     		ldr	r3, [r7, #12]
 1481 0088 186B     		ldr	r0, [r3, #48]
 1482 008a 7B69     		ldr	r3, [r7, #20]
 1483 008c 1968     		ldr	r1, [r3]
 1484 008e FB68     		ldr	r3, [r7, #12]
 1485 0090 1B68     		ldr	r3, [r3]
 1486 0092 0433     		adds	r3, r3, #4
 1487 0094 1A46     		mov	r2, r3
 1488 0096 FB88     		ldrh	r3, [r7, #6]
 1489 0098 FFF7FEFF 		bl	HAL_DMA_Start_IT
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the TC flag in the SR register by writing 0 to it */
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_FLAG_TC);
 1490              		.loc 1 910 0 discriminator 2
 1491 009c FB68     		ldr	r3, [r7, #12]
 1492 009e 1B68     		ldr	r3, [r3]
 1493 00a0 6FF04002 		mvn	r2, #64
 1494 00a4 1A60     		str	r2, [r3]
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1495              		.loc 1 913 0 discriminator 2
 1496 00a6 FB68     		ldr	r3, [r7, #12]
 1497 00a8 0022     		movs	r2, #0
 1498 00aa 83F83820 		strb	r2, [r3, #56]
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
ARM GAS  /tmp/ccez0bZg.s 			page 43


 1499              		.loc 1 917 0 discriminator 2
 1500 00ae FB68     		ldr	r3, [r7, #12]
 1501 00b0 1B68     		ldr	r3, [r3]
 1502 00b2 FA68     		ldr	r2, [r7, #12]
 1503 00b4 1268     		ldr	r2, [r2]
 1504 00b6 5269     		ldr	r2, [r2, #20]
 1505 00b8 42F08002 		orr	r2, r2, #128
 1506 00bc 5A61     		str	r2, [r3, #20]
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1507              		.loc 1 919 0 discriminator 2
 1508 00be 0023     		movs	r3, #0
 1509 00c0 00E0     		b	.L66
 1510              	.L63:
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1511              		.loc 1 923 0
 1512 00c2 0223     		movs	r3, #2
 1513              	.L66:
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1514              		.loc 1 925 0
 1515 00c4 1846     		mov	r0, r3
 1516 00c6 1837     		adds	r7, r7, #24
 1517              	.LCFI62:
 1518              		.cfi_def_cfa_offset 8
 1519 00c8 BD46     		mov	sp, r7
 1520              	.LCFI63:
 1521              		.cfi_def_cfa_register 13
 1522              		@ sp needed
 1523 00ca 80BD     		pop	{r7, pc}
 1524              	.L69:
 1525              		.align	2
 1526              	.L68:
 1527 00cc 00000000 		.word	UART_DMATransmitCplt
 1528 00d0 00000000 		.word	UART_DMATxHalfCplt
 1529 00d4 00000000 		.word	UART_DMAError
 1530              		.cfi_endproc
 1531              	.LFE137:
 1533              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 1534              		.align	2
 1535              		.global	HAL_UART_Receive_DMA
 1536              		.thumb
 1537              		.thumb_func
 1539              	HAL_UART_Receive_DMA:
 1540              	.LFB138:
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode. 
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size: Amount of data to be received
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1) the data received contain the parity bit.
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
ARM GAS  /tmp/ccez0bZg.s 			page 44


 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {  
 1541              		.loc 1 937 0
 1542              		.cfi_startproc
 1543              		@ args = 0, pretend = 0, frame = 24
 1544              		@ frame_needed = 1, uses_anonymous_args = 0
 1545 0000 80B5     		push	{r7, lr}
 1546              	.LCFI64:
 1547              		.cfi_def_cfa_offset 8
 1548              		.cfi_offset 7, -8
 1549              		.cfi_offset 14, -4
 1550 0002 86B0     		sub	sp, sp, #24
 1551              	.LCFI65:
 1552              		.cfi_def_cfa_offset 32
 1553 0004 00AF     		add	r7, sp, #0
 1554              	.LCFI66:
 1555              		.cfi_def_cfa_register 7
 1556 0006 F860     		str	r0, [r7, #12]
 1557 0008 B960     		str	r1, [r7, #8]
 1558 000a 1346     		mov	r3, r2
 1559 000c FB80     		strh	r3, [r7, #6]	@ movhi
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY) 
 1560              		.loc 1 941 0
 1561 000e FB68     		ldr	r3, [r7, #12]
 1562 0010 93F83A30 		ldrb	r3, [r3, #58]
 1563 0014 DBB2     		uxtb	r3, r3
 1564 0016 202B     		cmp	r3, #32
 1565 0018 5BD1     		bne	.L71
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U)) 
 1566              		.loc 1 943 0
 1567 001a BB68     		ldr	r3, [r7, #8]
 1568 001c 002B     		cmp	r3, #0
 1569 001e 02D0     		beq	.L72
 1570              		.loc 1 943 0 is_stmt 0 discriminator 1
 1571 0020 FB88     		ldrh	r3, [r7, #6]
 1572 0022 002B     		cmp	r3, #0
 1573 0024 01D1     		bne	.L73
 1574              	.L72:
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1575              		.loc 1 945 0 is_stmt 1
 1576 0026 0123     		movs	r3, #1
 1577 0028 54E0     		b	.L74
 1578              	.L73:
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1579              		.loc 1 949 0
 1580 002a FB68     		ldr	r3, [r7, #12]
 1581 002c 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1582 0030 012B     		cmp	r3, #1
ARM GAS  /tmp/ccez0bZg.s 			page 45


 1583 0032 01D1     		bne	.L75
 1584              		.loc 1 949 0 is_stmt 0 discriminator 1
 1585 0034 0223     		movs	r3, #2
 1586 0036 4DE0     		b	.L74
 1587              	.L75:
 1588              		.loc 1 949 0 discriminator 2
 1589 0038 FB68     		ldr	r3, [r7, #12]
 1590 003a 0122     		movs	r2, #1
 1591 003c 83F83820 		strb	r2, [r3, #56]
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 1592              		.loc 1 951 0 is_stmt 1 discriminator 2
 1593 0040 BA68     		ldr	r2, [r7, #8]
 1594 0042 FB68     		ldr	r3, [r7, #12]
 1595 0044 9A62     		str	r2, [r3, #40]
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 1596              		.loc 1 952 0 discriminator 2
 1597 0046 FB68     		ldr	r3, [r7, #12]
 1598 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1599 004a 9A85     		strh	r2, [r3, #44]	@ movhi
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1600              		.loc 1 954 0 discriminator 2
 1601 004c FB68     		ldr	r3, [r7, #12]
 1602 004e 0022     		movs	r2, #0
 1603 0050 DA63     		str	r2, [r3, #60]
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1604              		.loc 1 955 0 discriminator 2
 1605 0052 FB68     		ldr	r3, [r7, #12]
 1606 0054 2222     		movs	r2, #34
 1607 0056 83F83A20 		strb	r2, [r3, #58]
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 1608              		.loc 1 958 0 discriminator 2
 1609 005a FB68     		ldr	r3, [r7, #12]
 1610 005c 5B6B     		ldr	r3, [r3, #52]
 1611 005e 1F4A     		ldr	r2, .L76
 1612 0060 DA63     		str	r2, [r3, #60]
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 1613              		.loc 1 961 0 discriminator 2
 1614 0062 FB68     		ldr	r3, [r7, #12]
 1615 0064 5B6B     		ldr	r3, [r3, #52]
 1616 0066 1E4A     		ldr	r2, .L76+4
 1617 0068 1A64     		str	r2, [r3, #64]
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA error callback */
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
 1618              		.loc 1 964 0 discriminator 2
 1619 006a FB68     		ldr	r3, [r7, #12]
 1620 006c 5B6B     		ldr	r3, [r3, #52]
 1621 006e 1D4A     		ldr	r2, .L76+8
 1622 0070 DA64     		str	r2, [r3, #76]
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA abort callback */
ARM GAS  /tmp/ccez0bZg.s 			page 46


 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
 1623              		.loc 1 967 0 discriminator 2
 1624 0072 FB68     		ldr	r3, [r7, #12]
 1625 0074 5B6B     		ldr	r3, [r3, #52]
 1626 0076 0022     		movs	r2, #0
 1627 0078 1A65     		str	r2, [r3, #80]
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA Stream */
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
 1628              		.loc 1 970 0 discriminator 2
 1629 007a 07F10803 		add	r3, r7, #8
 1630 007e 7B61     		str	r3, [r7, #20]
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t*)tmp, Size); 
 1631              		.loc 1 971 0 discriminator 2
 1632 0080 FB68     		ldr	r3, [r7, #12]
 1633 0082 586B     		ldr	r0, [r3, #52]
 1634 0084 FB68     		ldr	r3, [r7, #12]
 1635 0086 1B68     		ldr	r3, [r3]
 1636 0088 0433     		adds	r3, r3, #4
 1637 008a 1946     		mov	r1, r3
 1638 008c 7B69     		ldr	r3, [r7, #20]
 1639 008e 1A68     		ldr	r2, [r3]
 1640 0090 FB88     		ldrh	r3, [r7, #6]
 1641 0092 FFF7FEFF 		bl	HAL_DMA_Start_IT
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 1642              		.loc 1 974 0 discriminator 2
 1643 0096 FB68     		ldr	r3, [r7, #12]
 1644 0098 1B68     		ldr	r3, [r3]
 1645 009a FA68     		ldr	r2, [r7, #12]
 1646 009c 1268     		ldr	r2, [r2]
 1647 009e D268     		ldr	r2, [r2, #12]
 1648 00a0 42F48072 		orr	r2, r2, #256
 1649 00a4 DA60     		str	r2, [r3, #12]
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1650              		.loc 1 977 0 discriminator 2
 1651 00a6 FB68     		ldr	r3, [r7, #12]
 1652 00a8 1B68     		ldr	r3, [r3]
 1653 00aa FA68     		ldr	r2, [r7, #12]
 1654 00ac 1268     		ldr	r2, [r2]
 1655 00ae 5269     		ldr	r2, [r2, #20]
 1656 00b0 42F00102 		orr	r2, r2, #1
 1657 00b4 5A61     		str	r2, [r3, #20]
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit 
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in the UART CR3 register */
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1658              		.loc 1 981 0 discriminator 2
 1659 00b6 FB68     		ldr	r3, [r7, #12]
 1660 00b8 1B68     		ldr	r3, [r3]
 1661 00ba FA68     		ldr	r2, [r7, #12]
 1662 00bc 1268     		ldr	r2, [r2]
 1663 00be 5269     		ldr	r2, [r2, #20]
 1664 00c0 42F04002 		orr	r2, r2, #64
ARM GAS  /tmp/ccez0bZg.s 			page 47


 1665 00c4 5A61     		str	r2, [r3, #20]
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1666              		.loc 1 984 0 discriminator 2
 1667 00c6 FB68     		ldr	r3, [r7, #12]
 1668 00c8 0022     		movs	r2, #0
 1669 00ca 83F83820 		strb	r2, [r3, #56]
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1670              		.loc 1 986 0 discriminator 2
 1671 00ce 0023     		movs	r3, #0
 1672 00d0 00E0     		b	.L74
 1673              	.L71:
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY; 
 1674              		.loc 1 990 0
 1675 00d2 0223     		movs	r3, #2
 1676              	.L74:
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1677              		.loc 1 992 0
 1678 00d4 1846     		mov	r0, r3
 1679 00d6 1837     		adds	r7, r7, #24
 1680              	.LCFI67:
 1681              		.cfi_def_cfa_offset 8
 1682 00d8 BD46     		mov	sp, r7
 1683              	.LCFI68:
 1684              		.cfi_def_cfa_register 13
 1685              		@ sp needed
 1686 00da 80BD     		pop	{r7, pc}
 1687              	.L77:
 1688              		.align	2
 1689              	.L76:
 1690 00dc 00000000 		.word	UART_DMAReceiveCplt
 1691 00e0 00000000 		.word	UART_DMARxHalfCplt
 1692 00e4 00000000 		.word	UART_DMAError
 1693              		.cfi_endproc
 1694              	.LFE138:
 1696              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1697              		.align	2
 1698              		.global	HAL_UART_DMAPause
 1699              		.thumb
 1700              		.thumb_func
 1702              	HAL_UART_DMAPause:
 1703              	.LFB139:
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Pauses the DMA Transfer.
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
ARM GAS  /tmp/ccez0bZg.s 			page 48


 1704              		.loc 1 1001 0
 1705              		.cfi_startproc
 1706              		@ args = 0, pretend = 0, frame = 16
 1707              		@ frame_needed = 1, uses_anonymous_args = 0
 1708              		@ link register save eliminated.
 1709 0000 80B4     		push	{r7}
 1710              	.LCFI69:
 1711              		.cfi_def_cfa_offset 4
 1712              		.cfi_offset 7, -4
 1713 0002 85B0     		sub	sp, sp, #20
 1714              	.LCFI70:
 1715              		.cfi_def_cfa_offset 24
 1716 0004 00AF     		add	r7, sp, #0
 1717              	.LCFI71:
 1718              		.cfi_def_cfa_register 7
 1719 0006 7860     		str	r0, [r7, #4]
1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t dmarequest = 0x00U;
 1720              		.loc 1 1002 0
 1721 0008 0023     		movs	r3, #0
 1722 000a FB60     		str	r3, [r7, #12]
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 1723              		.loc 1 1005 0
 1724 000c 7B68     		ldr	r3, [r7, #4]
 1725 000e 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1726 0012 012B     		cmp	r3, #1
 1727 0014 01D1     		bne	.L79
 1728              		.loc 1 1005 0 is_stmt 0 discriminator 1
 1729 0016 0223     		movs	r3, #2
 1730 0018 50E0     		b	.L80
 1731              	.L79:
 1732              		.loc 1 1005 0 discriminator 2
 1733 001a 7B68     		ldr	r3, [r7, #4]
 1734 001c 0122     		movs	r2, #1
 1735 001e 83F83820 		strb	r2, [r3, #56]
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 1736              		.loc 1 1006 0 is_stmt 1 discriminator 2
 1737 0022 7B68     		ldr	r3, [r7, #4]
 1738 0024 1B68     		ldr	r3, [r3]
 1739 0026 5B69     		ldr	r3, [r3, #20]
 1740 0028 03F08003 		and	r3, r3, #128
 1741 002c 002B     		cmp	r3, #0
 1742 002e 14BF     		ite	ne
 1743 0030 0123     		movne	r3, #1
 1744 0032 0023     		moveq	r3, #0
 1745 0034 DBB2     		uxtb	r3, r3
 1746 0036 FB60     		str	r3, [r7, #12]
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 1747              		.loc 1 1007 0 discriminator 2
 1748 0038 7B68     		ldr	r3, [r7, #4]
 1749 003a 93F83930 		ldrb	r3, [r3, #57]
 1750 003e DBB2     		uxtb	r3, r3
 1751 0040 212B     		cmp	r3, #33
 1752 0042 0AD1     		bne	.L81
 1753              		.loc 1 1007 0 is_stmt 0 discriminator 1
 1754 0044 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccez0bZg.s 			page 49


 1755 0046 002B     		cmp	r3, #0
 1756 0048 07D0     		beq	.L81
1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1757              		.loc 1 1010 0 is_stmt 1
 1758 004a 7B68     		ldr	r3, [r7, #4]
 1759 004c 1B68     		ldr	r3, [r3]
 1760 004e 7A68     		ldr	r2, [r7, #4]
 1761 0050 1268     		ldr	r2, [r2]
 1762 0052 5269     		ldr	r2, [r2, #20]
 1763 0054 22F08002 		bic	r2, r2, #128
 1764 0058 5A61     		str	r2, [r3, #20]
 1765              	.L81:
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 1766              		.loc 1 1012 0
 1767 005a 7B68     		ldr	r3, [r7, #4]
 1768 005c 1B68     		ldr	r3, [r3]
 1769 005e 5B69     		ldr	r3, [r3, #20]
 1770 0060 03F04003 		and	r3, r3, #64
 1771 0064 002B     		cmp	r3, #0
 1772 0066 14BF     		ite	ne
 1773 0068 0123     		movne	r3, #1
 1774 006a 0023     		moveq	r3, #0
 1775 006c DBB2     		uxtb	r3, r3
 1776 006e FB60     		str	r3, [r7, #12]
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 1777              		.loc 1 1013 0
 1778 0070 7B68     		ldr	r3, [r7, #4]
 1779 0072 93F83A30 		ldrb	r3, [r3, #58]
 1780 0076 DBB2     		uxtb	r3, r3
 1781 0078 222B     		cmp	r3, #34
 1782 007a 1AD1     		bne	.L82
 1783              		.loc 1 1013 0 is_stmt 0 discriminator 1
 1784 007c FB68     		ldr	r3, [r7, #12]
 1785 007e 002B     		cmp	r3, #0
 1786 0080 17D0     		beq	.L82
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 1787              		.loc 1 1016 0 is_stmt 1
 1788 0082 7B68     		ldr	r3, [r7, #4]
 1789 0084 1B68     		ldr	r3, [r3]
 1790 0086 7A68     		ldr	r2, [r7, #4]
 1791 0088 1268     		ldr	r2, [r2]
 1792 008a D268     		ldr	r2, [r2, #12]
 1793 008c 22F48072 		bic	r2, r2, #256
 1794 0090 DA60     		str	r2, [r3, #12]
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1795              		.loc 1 1017 0
 1796 0092 7B68     		ldr	r3, [r7, #4]
 1797 0094 1B68     		ldr	r3, [r3]
 1798 0096 7A68     		ldr	r2, [r7, #4]
 1799 0098 1268     		ldr	r2, [r2]
 1800 009a 5269     		ldr	r2, [r2, #20]
 1801 009c 22F00102 		bic	r2, r2, #1
ARM GAS  /tmp/ccez0bZg.s 			page 50


 1802 00a0 5A61     		str	r2, [r3, #20]
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1803              		.loc 1 1020 0
 1804 00a2 7B68     		ldr	r3, [r7, #4]
 1805 00a4 1B68     		ldr	r3, [r3]
 1806 00a6 7A68     		ldr	r2, [r7, #4]
 1807 00a8 1268     		ldr	r2, [r2]
 1808 00aa 5269     		ldr	r2, [r2, #20]
 1809 00ac 22F04002 		bic	r2, r2, #64
 1810 00b0 5A61     		str	r2, [r3, #20]
 1811              	.L82:
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 1812              		.loc 1 1024 0
 1813 00b2 7B68     		ldr	r3, [r7, #4]
 1814 00b4 0022     		movs	r2, #0
 1815 00b6 83F83820 		strb	r2, [r3, #56]
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
 1816              		.loc 1 1026 0
 1817 00ba 0023     		movs	r3, #0
 1818              	.L80:
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1819              		.loc 1 1027 0
 1820 00bc 1846     		mov	r0, r3
 1821 00be 1437     		adds	r7, r7, #20
 1822              	.LCFI72:
 1823              		.cfi_def_cfa_offset 4
 1824 00c0 BD46     		mov	sp, r7
 1825              	.LCFI73:
 1826              		.cfi_def_cfa_register 13
 1827              		@ sp needed
 1828 00c2 5DF8047B 		ldr	r7, [sp], #4
 1829              	.LCFI74:
 1830              		.cfi_restore 7
 1831              		.cfi_def_cfa_offset 0
 1832 00c6 7047     		bx	lr
 1833              		.cfi_endproc
 1834              	.LFE139:
 1836              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 1837              		.align	2
 1838              		.global	HAL_UART_DMAResume
 1839              		.thumb
 1840              		.thumb_func
 1842              	HAL_UART_DMAResume:
 1843              	.LFB140:
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Resumes the DMA Transfer.
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
ARM GAS  /tmp/ccez0bZg.s 			page 51


1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1844              		.loc 1 1036 0
 1845              		.cfi_startproc
 1846              		@ args = 0, pretend = 0, frame = 16
 1847              		@ frame_needed = 1, uses_anonymous_args = 0
 1848              		@ link register save eliminated.
 1849 0000 80B4     		push	{r7}
 1850              	.LCFI75:
 1851              		.cfi_def_cfa_offset 4
 1852              		.cfi_offset 7, -4
 1853 0002 85B0     		sub	sp, sp, #20
 1854              	.LCFI76:
 1855              		.cfi_def_cfa_offset 24
 1856 0004 00AF     		add	r7, sp, #0
 1857              	.LCFI77:
 1858              		.cfi_def_cfa_register 7
 1859 0006 7860     		str	r0, [r7, #4]
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 1860              		.loc 1 1038 0
 1861 0008 7B68     		ldr	r3, [r7, #4]
 1862 000a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1863 000e 012B     		cmp	r3, #1
 1864 0010 01D1     		bne	.L84
 1865              		.loc 1 1038 0 is_stmt 0 discriminator 1
 1866 0012 0223     		movs	r3, #2
 1867 0014 3FE0     		b	.L85
 1868              	.L84:
 1869              		.loc 1 1038 0 discriminator 2
 1870 0016 7B68     		ldr	r3, [r7, #4]
 1871 0018 0122     		movs	r2, #1
 1872 001a 83F83820 		strb	r2, [r3, #56]
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
 1873              		.loc 1 1040 0 is_stmt 1 discriminator 2
 1874 001e 7B68     		ldr	r3, [r7, #4]
 1875 0020 93F83930 		ldrb	r3, [r3, #57]
 1876 0024 DBB2     		uxtb	r3, r3
 1877 0026 212B     		cmp	r3, #33
 1878 0028 07D1     		bne	.L86
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1879              		.loc 1 1043 0
 1880 002a 7B68     		ldr	r3, [r7, #4]
 1881 002c 1B68     		ldr	r3, [r3]
 1882 002e 7A68     		ldr	r2, [r7, #4]
 1883 0030 1268     		ldr	r2, [r2]
 1884 0032 5269     		ldr	r2, [r2, #20]
 1885 0034 42F08002 		orr	r2, r2, #128
 1886 0038 5A61     		str	r2, [r3, #20]
 1887              	.L86:
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
 1888              		.loc 1 1045 0
 1889 003a 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccez0bZg.s 			page 52


 1890 003c 93F83A30 		ldrb	r3, [r3, #58]
 1891 0040 DBB2     		uxtb	r3, r3
 1892 0042 222B     		cmp	r3, #34
 1893 0044 22D1     		bne	.L87
 1894              	.LBB2:
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer*/
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
 1895              		.loc 1 1048 0
 1896 0046 0023     		movs	r3, #0
 1897 0048 FB60     		str	r3, [r7, #12]
 1898 004a 7B68     		ldr	r3, [r7, #4]
 1899 004c 1B68     		ldr	r3, [r3]
 1900 004e 1B68     		ldr	r3, [r3]
 1901 0050 FB60     		str	r3, [r7, #12]
 1902 0052 7B68     		ldr	r3, [r7, #4]
 1903 0054 1B68     		ldr	r3, [r3]
 1904 0056 5B68     		ldr	r3, [r3, #4]
 1905 0058 FB60     		str	r3, [r7, #12]
 1906 005a FB68     		ldr	r3, [r7, #12]
 1907              	.LBE2:
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 1908              		.loc 1 1051 0
 1909 005c 7B68     		ldr	r3, [r7, #4]
 1910 005e 1B68     		ldr	r3, [r3]
 1911 0060 7A68     		ldr	r2, [r7, #4]
 1912 0062 1268     		ldr	r2, [r2]
 1913 0064 D268     		ldr	r2, [r2, #12]
 1914 0066 42F48072 		orr	r2, r2, #256
 1915 006a DA60     		str	r2, [r3, #12]
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1916              		.loc 1 1052 0
 1917 006c 7B68     		ldr	r3, [r7, #4]
 1918 006e 1B68     		ldr	r3, [r3]
 1919 0070 7A68     		ldr	r2, [r7, #4]
 1920 0072 1268     		ldr	r2, [r2]
 1921 0074 5269     		ldr	r2, [r2, #20]
 1922 0076 42F00102 		orr	r2, r2, #1
 1923 007a 5A61     		str	r2, [r3, #20]
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1924              		.loc 1 1055 0
 1925 007c 7B68     		ldr	r3, [r7, #4]
 1926 007e 1B68     		ldr	r3, [r3]
 1927 0080 7A68     		ldr	r2, [r7, #4]
 1928 0082 1268     		ldr	r2, [r2]
 1929 0084 5269     		ldr	r2, [r2, #20]
 1930 0086 42F04002 		orr	r2, r2, #64
 1931 008a 5A61     		str	r2, [r3, #20]
 1932              	.L87:
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
ARM GAS  /tmp/ccez0bZg.s 			page 53


 1933              		.loc 1 1059 0
 1934 008c 7B68     		ldr	r3, [r7, #4]
 1935 008e 0022     		movs	r2, #0
 1936 0090 83F83820 		strb	r2, [r3, #56]
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 1937              		.loc 1 1061 0
 1938 0094 0023     		movs	r3, #0
 1939              	.L85:
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1940              		.loc 1 1062 0
 1941 0096 1846     		mov	r0, r3
 1942 0098 1437     		adds	r7, r7, #20
 1943              	.LCFI78:
 1944              		.cfi_def_cfa_offset 4
 1945 009a BD46     		mov	sp, r7
 1946              	.LCFI79:
 1947              		.cfi_def_cfa_register 13
 1948              		@ sp needed
 1949 009c 5DF8047B 		ldr	r7, [sp], #4
 1950              	.LCFI80:
 1951              		.cfi_restore 7
 1952              		.cfi_def_cfa_offset 0
 1953 00a0 7047     		bx	lr
 1954              		.cfi_endproc
 1955              	.LFE140:
 1957 00a2 00BF     		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 1958              		.align	2
 1959              		.global	HAL_UART_DMAStop
 1960              		.thumb
 1961              		.thumb_func
 1963              	HAL_UART_DMAStop:
 1964              	.LFB141:
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Stops the DMA Transfer.
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1965              		.loc 1 1071 0
 1966              		.cfi_startproc
 1967              		@ args = 0, pretend = 0, frame = 16
 1968              		@ frame_needed = 1, uses_anonymous_args = 0
 1969 0000 80B5     		push	{r7, lr}
 1970              	.LCFI81:
 1971              		.cfi_def_cfa_offset 8
 1972              		.cfi_offset 7, -8
 1973              		.cfi_offset 14, -4
 1974 0002 84B0     		sub	sp, sp, #16
 1975              	.LCFI82:
 1976              		.cfi_def_cfa_offset 24
 1977 0004 00AF     		add	r7, sp, #0
 1978              	.LCFI83:
 1979              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccez0bZg.s 			page 54


 1980 0006 7860     		str	r0, [r7, #4]
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 1981              		.loc 1 1072 0
 1982 0008 0023     		movs	r3, #0
 1983 000a FB60     		str	r3, [r7, #12]
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      and the correspond call back is executed HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      */
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 1984              		.loc 1 1080 0
 1985 000c 7B68     		ldr	r3, [r7, #4]
 1986 000e 1B68     		ldr	r3, [r3]
 1987 0010 5B69     		ldr	r3, [r3, #20]
 1988 0012 03F08003 		and	r3, r3, #128
 1989 0016 002B     		cmp	r3, #0
 1990 0018 14BF     		ite	ne
 1991 001a 0123     		movne	r3, #1
 1992 001c 0023     		moveq	r3, #0
 1993 001e DBB2     		uxtb	r3, r3
 1994 0020 FB60     		str	r3, [r7, #12]
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 1995              		.loc 1 1081 0
 1996 0022 7B68     		ldr	r3, [r7, #4]
 1997 0024 93F83930 		ldrb	r3, [r3, #57]
 1998 0028 DBB2     		uxtb	r3, r3
 1999 002a 212B     		cmp	r3, #33
 2000 002c 16D1     		bne	.L89
 2001              		.loc 1 1081 0 is_stmt 0 discriminator 1
 2002 002e FB68     		ldr	r3, [r7, #12]
 2003 0030 002B     		cmp	r3, #0
 2004 0032 13D0     		beq	.L89
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2005              		.loc 1 1083 0 is_stmt 1
 2006 0034 7B68     		ldr	r3, [r7, #4]
 2007 0036 1B68     		ldr	r3, [r3]
 2008 0038 7A68     		ldr	r2, [r7, #4]
 2009 003a 1268     		ldr	r2, [r2]
 2010 003c 5269     		ldr	r2, [r2, #20]
 2011 003e 22F08002 		bic	r2, r2, #128
 2012 0042 5A61     		str	r2, [r3, #20]
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmatx != NULL)
 2013              		.loc 1 1086 0
 2014 0044 7B68     		ldr	r3, [r7, #4]
 2015 0046 1B6B     		ldr	r3, [r3, #48]
 2016 0048 002B     		cmp	r3, #0
 2017 004a 04D0     		beq	.L90
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
 2018              		.loc 1 1088 0
 2019 004c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccez0bZg.s 			page 55


 2020 004e 1B6B     		ldr	r3, [r3, #48]
 2021 0050 1846     		mov	r0, r3
 2022 0052 FFF7FEFF 		bl	HAL_DMA_Abort
 2023              	.L90:
1089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2024              		.loc 1 1090 0
 2025 0056 7868     		ldr	r0, [r7, #4]
 2026 0058 FFF7FEFF 		bl	UART_EndTxTransfer
 2027              	.L89:
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 2028              		.loc 1 1094 0
 2029 005c 7B68     		ldr	r3, [r7, #4]
 2030 005e 1B68     		ldr	r3, [r3]
 2031 0060 5B69     		ldr	r3, [r3, #20]
 2032 0062 03F04003 		and	r3, r3, #64
 2033 0066 002B     		cmp	r3, #0
 2034 0068 14BF     		ite	ne
 2035 006a 0123     		movne	r3, #1
 2036 006c 0023     		moveq	r3, #0
 2037 006e DBB2     		uxtb	r3, r3
 2038 0070 FB60     		str	r3, [r7, #12]
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 2039              		.loc 1 1095 0
 2040 0072 7B68     		ldr	r3, [r7, #4]
 2041 0074 93F83A30 		ldrb	r3, [r3, #58]
 2042 0078 DBB2     		uxtb	r3, r3
 2043 007a 222B     		cmp	r3, #34
 2044 007c 16D1     		bne	.L91
 2045              		.loc 1 1095 0 is_stmt 0 discriminator 1
 2046 007e FB68     		ldr	r3, [r7, #12]
 2047 0080 002B     		cmp	r3, #0
 2048 0082 13D0     		beq	.L91
1096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2049              		.loc 1 1097 0 is_stmt 1
 2050 0084 7B68     		ldr	r3, [r7, #4]
 2051 0086 1B68     		ldr	r3, [r3]
 2052 0088 7A68     		ldr	r2, [r7, #4]
 2053 008a 1268     		ldr	r2, [r2]
 2054 008c 5269     		ldr	r2, [r2, #20]
 2055 008e 22F04002 		bic	r2, r2, #64
 2056 0092 5A61     		str	r2, [r3, #20]
1098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmarx != NULL)
 2057              		.loc 1 1100 0
 2058 0094 7B68     		ldr	r3, [r7, #4]
 2059 0096 5B6B     		ldr	r3, [r3, #52]
 2060 0098 002B     		cmp	r3, #0
 2061 009a 04D0     		beq	.L92
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
 2062              		.loc 1 1102 0
ARM GAS  /tmp/ccez0bZg.s 			page 56


 2063 009c 7B68     		ldr	r3, [r7, #4]
 2064 009e 5B6B     		ldr	r3, [r3, #52]
 2065 00a0 1846     		mov	r0, r3
 2066 00a2 FFF7FEFF 		bl	HAL_DMA_Abort
 2067              	.L92:
1103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2068              		.loc 1 1104 0
 2069 00a6 7868     		ldr	r0, [r7, #4]
 2070 00a8 FFF7FEFF 		bl	UART_EndRxTransfer
 2071              	.L91:
1105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2072              		.loc 1 1107 0
 2073 00ac 0023     		movs	r3, #0
1108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2074              		.loc 1 1108 0
 2075 00ae 1846     		mov	r0, r3
 2076 00b0 1037     		adds	r7, r7, #16
 2077              	.LCFI84:
 2078              		.cfi_def_cfa_offset 8
 2079 00b2 BD46     		mov	sp, r7
 2080              	.LCFI85:
 2081              		.cfi_def_cfa_register 13
 2082              		@ sp needed
 2083 00b4 80BD     		pop	{r7, pc}
 2084              		.cfi_endproc
 2085              	.LFE141:
 2087 00b6 00BF     		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 2088              		.align	2
 2089              		.global	HAL_UART_IRQHandler
 2090              		.thumb
 2091              		.thumb_func
 2093              	HAL_UART_IRQHandler:
 2094              	.LFB142:
1109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  This function handles UART interrupt request.
1112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
1117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2095              		.loc 1 1117 0
 2096              		.cfi_startproc
 2097              		@ args = 0, pretend = 0, frame = 32
 2098              		@ frame_needed = 1, uses_anonymous_args = 0
 2099 0000 80B5     		push	{r7, lr}
 2100              	.LCFI86:
 2101              		.cfi_def_cfa_offset 8
 2102              		.cfi_offset 7, -8
 2103              		.cfi_offset 14, -4
 2104 0002 88B0     		sub	sp, sp, #32
 2105              	.LCFI87:
 2106              		.cfi_def_cfa_offset 40
ARM GAS  /tmp/ccez0bZg.s 			page 57


 2107 0004 00AF     		add	r7, sp, #0
 2108              	.LCFI88:
 2109              		.cfi_def_cfa_register 7
 2110 0006 7860     		str	r0, [r7, #4]
1118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t isrflags   = READ_REG(huart->Instance->SR);
 2111              		.loc 1 1118 0
 2112 0008 7B68     		ldr	r3, [r7, #4]
 2113 000a 1B68     		ldr	r3, [r3]
 2114 000c 1B68     		ldr	r3, [r3]
 2115 000e FB61     		str	r3, [r7, #28]
1119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 2116              		.loc 1 1119 0
 2117 0010 7B68     		ldr	r3, [r7, #4]
 2118 0012 1B68     		ldr	r3, [r3]
 2119 0014 DB68     		ldr	r3, [r3, #12]
 2120 0016 BB61     		str	r3, [r7, #24]
1120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 2121              		.loc 1 1120 0
 2122 0018 7B68     		ldr	r3, [r7, #4]
 2123 001a 1B68     		ldr	r3, [r3]
 2124 001c 5B69     		ldr	r3, [r3, #20]
 2125 001e 7B61     		str	r3, [r7, #20]
1121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t errorflags = 0x00U;
 2126              		.loc 1 1121 0
 2127 0020 0023     		movs	r3, #0
 2128 0022 3B61     		str	r3, [r7, #16]
1122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t dmarequest = 0x00U;
 2129              		.loc 1 1122 0
 2130 0024 0023     		movs	r3, #0
 2131 0026 FB60     		str	r3, [r7, #12]
1123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If no error occurs */
1125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_SR_PE | USART_SR_FE | USART_SR_ORE | USART_SR_NE));
 2132              		.loc 1 1125 0
 2133 0028 FB69     		ldr	r3, [r7, #28]
 2134 002a 03F00F03 		and	r3, r3, #15
 2135 002e 3B61     		str	r3, [r7, #16]
1126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(errorflags == RESET)
 2136              		.loc 1 1126 0
 2137 0030 3B69     		ldr	r3, [r7, #16]
 2138 0032 002B     		cmp	r3, #0
 2139 0034 0DD1     		bne	.L95
1127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART in mode Receiver -------------------------------------------------*/
1129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 2140              		.loc 1 1129 0
 2141 0036 FB69     		ldr	r3, [r7, #28]
 2142 0038 03F02003 		and	r3, r3, #32
 2143 003c 002B     		cmp	r3, #0
 2144 003e 08D0     		beq	.L95
 2145              		.loc 1 1129 0 is_stmt 0 discriminator 1
 2146 0040 BB69     		ldr	r3, [r7, #24]
 2147 0042 03F02003 		and	r3, r3, #32
 2148 0046 002B     		cmp	r3, #0
 2149 0048 03D0     		beq	.L95
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       UART_Receive_IT(huart);
ARM GAS  /tmp/ccez0bZg.s 			page 58


 2150              		.loc 1 1131 0 is_stmt 1
 2151 004a 7868     		ldr	r0, [r7, #4]
 2152 004c FFF7FEFF 		bl	UART_Receive_IT
1132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
 2153              		.loc 1 1132 0
 2154 0050 CCE0     		b	.L94
 2155              	.L95:
1133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If some errors occur */
1137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET) || ((cr1its & (USART_CR1_RXNEIE 
 2156              		.loc 1 1137 0
 2157 0052 3B69     		ldr	r3, [r7, #16]
 2158 0054 002B     		cmp	r3, #0
 2159 0056 00F0AB80 		beq	.L97
 2160              		.loc 1 1137 0 is_stmt 0 discriminator 1
 2161 005a 7B69     		ldr	r3, [r7, #20]
 2162 005c 03F00103 		and	r3, r3, #1
 2163 0060 002B     		cmp	r3, #0
 2164 0062 05D1     		bne	.L98
 2165              		.loc 1 1137 0 discriminator 2
 2166 0064 BB69     		ldr	r3, [r7, #24]
 2167 0066 03F49073 		and	r3, r3, #288
 2168 006a 002B     		cmp	r3, #0
 2169 006c 00F0A080 		beq	.L97
 2170              	.L98:
1138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART parity error interrupt occurred ----------------------------------*/
1140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
 2171              		.loc 1 1140 0 is_stmt 1
 2172 0070 FB69     		ldr	r3, [r7, #28]
 2173 0072 03F00103 		and	r3, r3, #1
 2174 0076 002B     		cmp	r3, #0
 2175 0078 0AD0     		beq	.L99
 2176              		.loc 1 1140 0 is_stmt 0 discriminator 1
 2177 007a BB69     		ldr	r3, [r7, #24]
 2178 007c 03F48073 		and	r3, r3, #256
 2179 0080 002B     		cmp	r3, #0
 2180 0082 05D0     		beq	.L99
1141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
 2181              		.loc 1 1142 0 is_stmt 1
 2182 0084 7B68     		ldr	r3, [r7, #4]
 2183 0086 DB6B     		ldr	r3, [r3, #60]
 2184 0088 43F00102 		orr	r2, r3, #1
 2185 008c 7B68     		ldr	r3, [r7, #4]
 2186 008e DA63     		str	r2, [r3, #60]
 2187              	.L99:
1143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART noise error interrupt occurred -----------------------------------*/
1146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 2188              		.loc 1 1146 0
 2189 0090 FB69     		ldr	r3, [r7, #28]
 2190 0092 03F00403 		and	r3, r3, #4
 2191 0096 002B     		cmp	r3, #0
ARM GAS  /tmp/ccez0bZg.s 			page 59


 2192 0098 0AD0     		beq	.L100
 2193              		.loc 1 1146 0 is_stmt 0 discriminator 1
 2194 009a 7B69     		ldr	r3, [r7, #20]
 2195 009c 03F00103 		and	r3, r3, #1
 2196 00a0 002B     		cmp	r3, #0
 2197 00a2 05D0     		beq	.L100
1147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
 2198              		.loc 1 1148 0 is_stmt 1
 2199 00a4 7B68     		ldr	r3, [r7, #4]
 2200 00a6 DB6B     		ldr	r3, [r3, #60]
 2201 00a8 43F00202 		orr	r2, r3, #2
 2202 00ac 7B68     		ldr	r3, [r7, #4]
 2203 00ae DA63     		str	r2, [r3, #60]
 2204              	.L100:
1149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART frame error interrupt occurred -----------------------------------*/
1152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 2205              		.loc 1 1152 0
 2206 00b0 FB69     		ldr	r3, [r7, #28]
 2207 00b2 03F00203 		and	r3, r3, #2
 2208 00b6 002B     		cmp	r3, #0
 2209 00b8 0AD0     		beq	.L101
 2210              		.loc 1 1152 0 is_stmt 0 discriminator 1
 2211 00ba 7B69     		ldr	r3, [r7, #20]
 2212 00bc 03F00103 		and	r3, r3, #1
 2213 00c0 002B     		cmp	r3, #0
 2214 00c2 05D0     		beq	.L101
1153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
 2215              		.loc 1 1154 0 is_stmt 1
 2216 00c4 7B68     		ldr	r3, [r7, #4]
 2217 00c6 DB6B     		ldr	r3, [r3, #60]
 2218 00c8 43F00402 		orr	r2, r3, #4
 2219 00cc 7B68     		ldr	r3, [r7, #4]
 2220 00ce DA63     		str	r2, [r3, #60]
 2221              	.L101:
1155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART Over-Run interrupt occurred --------------------------------------*/
1158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(((isrflags & USART_SR_ORE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 2222              		.loc 1 1158 0
 2223 00d0 FB69     		ldr	r3, [r7, #28]
 2224 00d2 03F00803 		and	r3, r3, #8
 2225 00d6 002B     		cmp	r3, #0
 2226 00d8 0AD0     		beq	.L102
 2227              		.loc 1 1158 0 is_stmt 0 discriminator 1
 2228 00da 7B69     		ldr	r3, [r7, #20]
 2229 00dc 03F00103 		and	r3, r3, #1
 2230 00e0 002B     		cmp	r3, #0
 2231 00e2 05D0     		beq	.L102
1159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     { 
1160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
 2232              		.loc 1 1160 0 is_stmt 1
 2233 00e4 7B68     		ldr	r3, [r7, #4]
 2234 00e6 DB6B     		ldr	r3, [r3, #60]
ARM GAS  /tmp/ccez0bZg.s 			page 60


 2235 00e8 43F00802 		orr	r2, r3, #8
 2236 00ec 7B68     		ldr	r3, [r7, #4]
 2237 00ee DA63     		str	r2, [r3, #60]
 2238              	.L102:
1161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/    
1164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->ErrorCode != HAL_UART_ERROR_NONE)
 2239              		.loc 1 1164 0
 2240 00f0 7B68     		ldr	r3, [r7, #4]
 2241 00f2 DB6B     		ldr	r3, [r3, #60]
 2242 00f4 002B     		cmp	r3, #0
 2243 00f6 78D0     		beq	.L113
1165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART in mode Receiver -----------------------------------------------*/
1167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 2244              		.loc 1 1167 0
 2245 00f8 FB69     		ldr	r3, [r7, #28]
 2246 00fa 03F02003 		and	r3, r3, #32
 2247 00fe 002B     		cmp	r3, #0
 2248 0100 07D0     		beq	.L104
 2249              		.loc 1 1167 0 is_stmt 0 discriminator 1
 2250 0102 BB69     		ldr	r3, [r7, #24]
 2251 0104 03F02003 		and	r3, r3, #32
 2252 0108 002B     		cmp	r3, #0
 2253 010a 02D0     		beq	.L104
1168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         UART_Receive_IT(huart);
 2254              		.loc 1 1169 0 is_stmt 1
 2255 010c 7868     		ldr	r0, [r7, #4]
 2256 010e FFF7FEFF 		bl	UART_Receive_IT
 2257              	.L104:
1170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
1173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          consider error as blocking */
1174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 2258              		.loc 1 1174 0
 2259 0112 7B68     		ldr	r3, [r7, #4]
 2260 0114 1B68     		ldr	r3, [r3]
 2261 0116 5B69     		ldr	r3, [r3, #20]
 2262 0118 03F04003 		and	r3, r3, #64
 2263 011c 002B     		cmp	r3, #0
 2264 011e 14BF     		ite	ne
 2265 0120 0123     		movne	r3, #1
 2266 0122 0023     		moveq	r3, #0
 2267 0124 DBB2     		uxtb	r3, r3
 2268 0126 FB60     		str	r3, [r7, #12]
1175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 2269              		.loc 1 1175 0
 2270 0128 7B68     		ldr	r3, [r7, #4]
 2271 012a DB6B     		ldr	r3, [r3, #60]
 2272 012c 03F00803 		and	r3, r3, #8
 2273 0130 002B     		cmp	r3, #0
 2274 0132 02D1     		bne	.L105
 2275              		.loc 1 1175 0 is_stmt 0 discriminator 1
 2276 0134 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccez0bZg.s 			page 61


 2277 0136 002B     		cmp	r3, #0
 2278 0138 31D0     		beq	.L106
 2279              	.L105:
1176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Blocking error : transfer is aborted
1178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
1179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
1180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         UART_EndRxTransfer(huart);
 2280              		.loc 1 1180 0 is_stmt 1
 2281 013a 7868     		ldr	r0, [r7, #4]
 2282 013c FFF7FEFF 		bl	UART_EndRxTransfer
1181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
1182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
1183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2283              		.loc 1 1183 0
 2284 0140 7B68     		ldr	r3, [r7, #4]
 2285 0142 1B68     		ldr	r3, [r3]
 2286 0144 5B69     		ldr	r3, [r3, #20]
 2287 0146 03F04003 		and	r3, r3, #64
 2288 014a 002B     		cmp	r3, #0
 2289 014c 23D0     		beq	.L107
1184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2290              		.loc 1 1185 0
 2291 014e 7B68     		ldr	r3, [r7, #4]
 2292 0150 1B68     		ldr	r3, [r3]
 2293 0152 7A68     		ldr	r2, [r7, #4]
 2294 0154 1268     		ldr	r2, [r2]
 2295 0156 5269     		ldr	r2, [r2, #20]
 2296 0158 22F04002 		bic	r2, r2, #64
 2297 015c 5A61     		str	r2, [r3, #20]
1186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           
1187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
1188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           if(huart->hdmarx != NULL)
 2298              		.loc 1 1188 0
 2299 015e 7B68     		ldr	r3, [r7, #4]
 2300 0160 5B6B     		ldr	r3, [r3, #52]
 2301 0162 002B     		cmp	r3, #0
 2302 0164 13D0     		beq	.L108
1189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
1190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /* Set the UART DMA Abort callback : 
1191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
1192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 2303              		.loc 1 1192 0
 2304 0166 7B68     		ldr	r3, [r7, #4]
 2305 0168 5B6B     		ldr	r3, [r3, #52]
 2306 016a 224A     		ldr	r2, .L115
 2307 016c 1A65     		str	r2, [r3, #80]
1193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 2308              		.loc 1 1193 0
 2309 016e 7B68     		ldr	r3, [r7, #4]
 2310 0170 5B6B     		ldr	r3, [r3, #52]
 2311 0172 1846     		mov	r0, r3
 2312 0174 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2313 0178 0346     		mov	r3, r0
 2314 017a 002B     		cmp	r3, #0
 2315 017c 16D0     		beq	.L114
ARM GAS  /tmp/ccez0bZg.s 			page 62


1194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             {
1195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****               /* Call Directly XferAbortCallback function in case of error */
1196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
 2316              		.loc 1 1196 0
 2317 017e 7B68     		ldr	r3, [r7, #4]
 2318 0180 5B6B     		ldr	r3, [r3, #52]
 2319 0182 1B6D     		ldr	r3, [r3, #80]
 2320 0184 7A68     		ldr	r2, [r7, #4]
 2321 0186 526B     		ldr	r2, [r2, #52]
 2322 0188 1046     		mov	r0, r2
 2323 018a 9847     		blx	r3
1183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 2324              		.loc 1 1183 0
 2325 018c 0EE0     		b	.L114
 2326              	.L108:
1197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             }
1198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
1199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           else
1200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
1201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /* Call user error callback */
1202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
 2327              		.loc 1 1202 0
 2328 018e 7868     		ldr	r0, [r7, #4]
 2329 0190 FFF7FEFF 		bl	HAL_UART_ErrorCallback
1183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 2330              		.loc 1 1183 0
 2331 0194 0AE0     		b	.L114
 2332              	.L107:
1203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
1204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
1206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Call user error callback */
1208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
 2333              		.loc 1 1208 0
 2334 0196 7868     		ldr	r0, [r7, #4]
 2335 0198 FFF7FEFF 		bl	HAL_UART_ErrorCallback
1183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 2336              		.loc 1 1183 0
 2337 019c 06E0     		b	.L114
 2338              	.L106:
1209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Non Blocking error : transfer could go on. 
1214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Error is notified to user through user error callback */
1215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
 2339              		.loc 1 1215 0
 2340 019e 7868     		ldr	r0, [r7, #4]
 2341 01a0 FFF7FEFF 		bl	HAL_UART_ErrorCallback
1216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 2342              		.loc 1 1216 0
 2343 01a4 7B68     		ldr	r3, [r7, #4]
 2344 01a6 0022     		movs	r2, #0
 2345 01a8 DA63     		str	r2, [r3, #60]
1217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
ARM GAS  /tmp/ccez0bZg.s 			page 63


1218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
 2346              		.loc 1 1219 0
 2347 01aa 1EE0     		b	.L113
 2348              	.L114:
1183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 2349              		.loc 1 1183 0
 2350 01ac 00BF     		nop
 2351              		.loc 1 1219 0
 2352 01ae 1CE0     		b	.L113
 2353              	.L97:
1220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   } /* End if some error occurs */
1221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
1223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
 2354              		.loc 1 1223 0
 2355 01b0 FB69     		ldr	r3, [r7, #28]
 2356 01b2 03F08003 		and	r3, r3, #128
 2357 01b6 002B     		cmp	r3, #0
 2358 01b8 08D0     		beq	.L112
 2359              		.loc 1 1223 0 is_stmt 0 discriminator 1
 2360 01ba BB69     		ldr	r3, [r7, #24]
 2361 01bc 03F08003 		and	r3, r3, #128
 2362 01c0 002B     		cmp	r3, #0
 2363 01c2 03D0     		beq	.L112
1224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_Transmit_IT(huart);
 2364              		.loc 1 1225 0 is_stmt 1
 2365 01c4 7868     		ldr	r0, [r7, #4]
 2366 01c6 FFF7FEFF 		bl	UART_Transmit_IT
1226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
 2367              		.loc 1 1226 0
 2368 01ca 0FE0     		b	.L94
 2369              	.L112:
1227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART in mode Transmitter end --------------------------------------------*/
1230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
 2370              		.loc 1 1230 0
 2371 01cc FB69     		ldr	r3, [r7, #28]
 2372 01ce 03F04003 		and	r3, r3, #64
 2373 01d2 002B     		cmp	r3, #0
 2374 01d4 0AD0     		beq	.L94
 2375              		.loc 1 1230 0 is_stmt 0 discriminator 1
 2376 01d6 BB69     		ldr	r3, [r7, #24]
 2377 01d8 03F04003 		and	r3, r3, #64
 2378 01dc 002B     		cmp	r3, #0
 2379 01de 05D0     		beq	.L94
1231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
 2380              		.loc 1 1232 0 is_stmt 1
 2381 01e0 7868     		ldr	r0, [r7, #4]
 2382 01e2 FFF7FEFF 		bl	UART_EndTransmit_IT
1233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
 2383              		.loc 1 1233 0
 2384 01e6 00BF     		nop
 2385 01e8 00E0     		b	.L94
ARM GAS  /tmp/ccez0bZg.s 			page 64


 2386              	.L113:
1219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   } /* End if some error occurs */
 2387              		.loc 1 1219 0
 2388 01ea 00BF     		nop
 2389              	.L94:
1234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2390              		.loc 1 1235 0
 2391 01ec 2037     		adds	r7, r7, #32
 2392              	.LCFI89:
 2393              		.cfi_def_cfa_offset 8
 2394 01ee BD46     		mov	sp, r7
 2395              	.LCFI90:
 2396              		.cfi_def_cfa_register 13
 2397              		@ sp needed
 2398 01f0 80BD     		pop	{r7, pc}
 2399              	.L116:
 2400 01f2 00BF     		.align	2
 2401              	.L115:
 2402 01f4 00000000 		.word	UART_DMAAbortOnError
 2403              		.cfi_endproc
 2404              	.LFE142:
 2406              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 2407              		.align	2
 2408              		.weak	HAL_UART_TxCpltCallback
 2409              		.thumb
 2410              		.thumb_func
 2412              	HAL_UART_TxCpltCallback:
 2413              	.LFB143:
1236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Tx Transfer completed callbacks.
1239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
1244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2414              		.loc 1 1244 0
 2415              		.cfi_startproc
 2416              		@ args = 0, pretend = 0, frame = 8
 2417              		@ frame_needed = 1, uses_anonymous_args = 0
 2418              		@ link register save eliminated.
 2419 0000 80B4     		push	{r7}
 2420              	.LCFI91:
 2421              		.cfi_def_cfa_offset 4
 2422              		.cfi_offset 7, -4
 2423 0002 83B0     		sub	sp, sp, #12
 2424              	.LCFI92:
 2425              		.cfi_def_cfa_offset 16
 2426 0004 00AF     		add	r7, sp, #0
 2427              	.LCFI93:
 2428              		.cfi_def_cfa_register 7
 2429 0006 7860     		str	r0, [r7, #4]
1245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
1247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
ARM GAS  /tmp/ccez0bZg.s 			page 65


1248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
1249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */ 
1250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2430              		.loc 1 1250 0
 2431 0008 00BF     		nop
 2432 000a 0C37     		adds	r7, r7, #12
 2433              	.LCFI94:
 2434              		.cfi_def_cfa_offset 4
 2435 000c BD46     		mov	sp, r7
 2436              	.LCFI95:
 2437              		.cfi_def_cfa_register 13
 2438              		@ sp needed
 2439 000e 5DF8047B 		ldr	r7, [sp], #4
 2440              	.LCFI96:
 2441              		.cfi_restore 7
 2442              		.cfi_def_cfa_offset 0
 2443 0012 7047     		bx	lr
 2444              		.cfi_endproc
 2445              	.LFE143:
 2447              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 2448              		.align	2
 2449              		.weak	HAL_UART_TxHalfCpltCallback
 2450              		.thumb
 2451              		.thumb_func
 2453              	HAL_UART_TxHalfCpltCallback:
 2454              	.LFB144:
1251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callbacks.
1254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
1259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2455              		.loc 1 1259 0
 2456              		.cfi_startproc
 2457              		@ args = 0, pretend = 0, frame = 8
 2458              		@ frame_needed = 1, uses_anonymous_args = 0
 2459              		@ link register save eliminated.
 2460 0000 80B4     		push	{r7}
 2461              	.LCFI97:
 2462              		.cfi_def_cfa_offset 4
 2463              		.cfi_offset 7, -4
 2464 0002 83B0     		sub	sp, sp, #12
 2465              	.LCFI98:
 2466              		.cfi_def_cfa_offset 16
 2467 0004 00AF     		add	r7, sp, #0
 2468              	.LCFI99:
 2469              		.cfi_def_cfa_register 7
 2470 0006 7860     		str	r0, [r7, #4]
1260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
1262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
1264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */ 
1265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
ARM GAS  /tmp/ccez0bZg.s 			page 66


 2471              		.loc 1 1265 0
 2472 0008 00BF     		nop
 2473 000a 0C37     		adds	r7, r7, #12
 2474              	.LCFI100:
 2475              		.cfi_def_cfa_offset 4
 2476 000c BD46     		mov	sp, r7
 2477              	.LCFI101:
 2478              		.cfi_def_cfa_register 13
 2479              		@ sp needed
 2480 000e 5DF8047B 		ldr	r7, [sp], #4
 2481              	.LCFI102:
 2482              		.cfi_restore 7
 2483              		.cfi_def_cfa_offset 0
 2484 0012 7047     		bx	lr
 2485              		.cfi_endproc
 2486              	.LFE144:
 2488              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 2489              		.align	2
 2490              		.weak	HAL_UART_RxCpltCallback
 2491              		.thumb
 2492              		.thumb_func
 2494              	HAL_UART_RxCpltCallback:
 2495              	.LFB145:
1266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Rx Transfer completed callbacks.
1269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
1274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2496              		.loc 1 1274 0
 2497              		.cfi_startproc
 2498              		@ args = 0, pretend = 0, frame = 8
 2499              		@ frame_needed = 1, uses_anonymous_args = 0
 2500              		@ link register save eliminated.
 2501 0000 80B4     		push	{r7}
 2502              	.LCFI103:
 2503              		.cfi_def_cfa_offset 4
 2504              		.cfi_offset 7, -4
 2505 0002 83B0     		sub	sp, sp, #12
 2506              	.LCFI104:
 2507              		.cfi_def_cfa_offset 16
 2508 0004 00AF     		add	r7, sp, #0
 2509              	.LCFI105:
 2510              		.cfi_def_cfa_register 7
 2511 0006 7860     		str	r0, [r7, #4]
1275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
1277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
1279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2512              		.loc 1 1280 0
 2513 0008 00BF     		nop
 2514 000a 0C37     		adds	r7, r7, #12
ARM GAS  /tmp/ccez0bZg.s 			page 67


 2515              	.LCFI106:
 2516              		.cfi_def_cfa_offset 4
 2517 000c BD46     		mov	sp, r7
 2518              	.LCFI107:
 2519              		.cfi_def_cfa_register 13
 2520              		@ sp needed
 2521 000e 5DF8047B 		ldr	r7, [sp], #4
 2522              	.LCFI108:
 2523              		.cfi_restore 7
 2524              		.cfi_def_cfa_offset 0
 2525 0012 7047     		bx	lr
 2526              		.cfi_endproc
 2527              	.LFE145:
 2529              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 2530              		.align	2
 2531              		.weak	HAL_UART_RxHalfCpltCallback
 2532              		.thumb
 2533              		.thumb_func
 2535              	HAL_UART_RxHalfCpltCallback:
 2536              	.LFB146:
1281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callbacks.
1284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
1289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2537              		.loc 1 1289 0
 2538              		.cfi_startproc
 2539              		@ args = 0, pretend = 0, frame = 8
 2540              		@ frame_needed = 1, uses_anonymous_args = 0
 2541              		@ link register save eliminated.
 2542 0000 80B4     		push	{r7}
 2543              	.LCFI109:
 2544              		.cfi_def_cfa_offset 4
 2545              		.cfi_offset 7, -4
 2546 0002 83B0     		sub	sp, sp, #12
 2547              	.LCFI110:
 2548              		.cfi_def_cfa_offset 16
 2549 0004 00AF     		add	r7, sp, #0
 2550              	.LCFI111:
 2551              		.cfi_def_cfa_register 7
 2552 0006 7860     		str	r0, [r7, #4]
1290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
1292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
1294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
1295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2553              		.loc 1 1295 0
 2554 0008 00BF     		nop
 2555 000a 0C37     		adds	r7, r7, #12
 2556              	.LCFI112:
 2557              		.cfi_def_cfa_offset 4
 2558 000c BD46     		mov	sp, r7
ARM GAS  /tmp/ccez0bZg.s 			page 68


 2559              	.LCFI113:
 2560              		.cfi_def_cfa_register 13
 2561              		@ sp needed
 2562 000e 5DF8047B 		ldr	r7, [sp], #4
 2563              	.LCFI114:
 2564              		.cfi_restore 7
 2565              		.cfi_def_cfa_offset 0
 2566 0012 7047     		bx	lr
 2567              		.cfi_endproc
 2568              	.LFE146:
 2570              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 2571              		.align	2
 2572              		.weak	HAL_UART_ErrorCallback
 2573              		.thumb
 2574              		.thumb_func
 2576              	HAL_UART_ErrorCallback:
 2577              	.LFB147:
1296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART error callbacks.
1299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
1304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2578              		.loc 1 1304 0
 2579              		.cfi_startproc
 2580              		@ args = 0, pretend = 0, frame = 8
 2581              		@ frame_needed = 1, uses_anonymous_args = 0
 2582              		@ link register save eliminated.
 2583 0000 80B4     		push	{r7}
 2584              	.LCFI115:
 2585              		.cfi_def_cfa_offset 4
 2586              		.cfi_offset 7, -4
 2587 0002 83B0     		sub	sp, sp, #12
 2588              	.LCFI116:
 2589              		.cfi_def_cfa_offset 16
 2590 0004 00AF     		add	r7, sp, #0
 2591              	.LCFI117:
 2592              		.cfi_def_cfa_register 7
 2593 0006 7860     		str	r0, [r7, #4]
1305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart); 
1307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_ErrorCallback could be implemented in the user file
1309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */ 
1310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2594              		.loc 1 1310 0
 2595 0008 00BF     		nop
 2596 000a 0C37     		adds	r7, r7, #12
 2597              	.LCFI118:
 2598              		.cfi_def_cfa_offset 4
 2599 000c BD46     		mov	sp, r7
 2600              	.LCFI119:
 2601              		.cfi_def_cfa_register 13
 2602              		@ sp needed
ARM GAS  /tmp/ccez0bZg.s 			page 69


 2603 000e 5DF8047B 		ldr	r7, [sp], #4
 2604              	.LCFI120:
 2605              		.cfi_restore 7
 2606              		.cfi_def_cfa_offset 0
 2607 0012 7047     		bx	lr
 2608              		.cfi_endproc
 2609              	.LFE147:
 2611              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 2612              		.align	2
 2613              		.global	HAL_LIN_SendBreak
 2614              		.thumb
 2615              		.thumb_func
 2617              	HAL_LIN_SendBreak:
 2618              	.LFB148:
1311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
1314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions 
1317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief   UART control functions 
1318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
1319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim   
1320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
1321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                       ##### Peripheral Control functions #####
1322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================  
1323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
1324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART:
1325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_LIN_SendBreak() API can be helpful to transmit the break character.
1326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_MultiProcessor_EnterMuteMode() API can be helpful to enter the UART in mute mode. 
1327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_MultiProcessor_ExitMuteMode() API can be helpful to exit the UART mute mode by software
1328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
1330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
1331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Transmits break characters.
1335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
1340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2619              		.loc 1 1340 0
 2620              		.cfi_startproc
 2621              		@ args = 0, pretend = 0, frame = 8
 2622              		@ frame_needed = 1, uses_anonymous_args = 0
 2623              		@ link register save eliminated.
 2624 0000 80B4     		push	{r7}
 2625              	.LCFI121:
 2626              		.cfi_def_cfa_offset 4
 2627              		.cfi_offset 7, -4
 2628 0002 83B0     		sub	sp, sp, #12
 2629              	.LCFI122:
 2630              		.cfi_def_cfa_offset 16
 2631 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccez0bZg.s 			page 70


 2632              	.LCFI123:
 2633              		.cfi_def_cfa_register 7
 2634 0006 7860     		str	r0, [r7, #4]
1341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
1342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 2635              		.loc 1 1345 0
 2636 0008 7B68     		ldr	r3, [r7, #4]
 2637 000a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 2638 000e 012B     		cmp	r3, #1
 2639 0010 01D1     		bne	.L123
 2640              		.loc 1 1345 0 is_stmt 0 discriminator 1
 2641 0012 0223     		movs	r3, #2
 2642 0014 18E0     		b	.L124
 2643              	.L123:
 2644              		.loc 1 1345 0 discriminator 2
 2645 0016 7B68     		ldr	r3, [r7, #4]
 2646 0018 0122     		movs	r2, #1
 2647 001a 83F83820 		strb	r2, [r3, #56]
1346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2648              		.loc 1 1347 0 is_stmt 1 discriminator 2
 2649 001e 7B68     		ldr	r3, [r7, #4]
 2650 0020 2422     		movs	r2, #36
 2651 0022 83F83920 		strb	r2, [r3, #57]
1348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Send break characters */
1350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_SBK);
 2652              		.loc 1 1350 0 discriminator 2
 2653 0026 7B68     		ldr	r3, [r7, #4]
 2654 0028 1B68     		ldr	r3, [r3]
 2655 002a 7A68     		ldr	r2, [r7, #4]
 2656 002c 1268     		ldr	r2, [r2]
 2657 002e D268     		ldr	r2, [r2, #12]
 2658 0030 42F00102 		orr	r2, r2, #1
 2659 0034 DA60     		str	r2, [r3, #12]
1351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
1352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2660              		.loc 1 1352 0 discriminator 2
 2661 0036 7B68     		ldr	r3, [r7, #4]
 2662 0038 2022     		movs	r2, #32
 2663 003a 83F83920 		strb	r2, [r3, #57]
1353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2664              		.loc 1 1355 0 discriminator 2
 2665 003e 7B68     		ldr	r3, [r7, #4]
 2666 0040 0022     		movs	r2, #0
 2667 0042 83F83820 		strb	r2, [r3, #56]
1356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
 2668              		.loc 1 1357 0 discriminator 2
 2669 0046 0023     		movs	r3, #0
 2670              	.L124:
1358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
ARM GAS  /tmp/ccez0bZg.s 			page 71


 2671              		.loc 1 1358 0
 2672 0048 1846     		mov	r0, r3
 2673 004a 0C37     		adds	r7, r7, #12
 2674              	.LCFI124:
 2675              		.cfi_def_cfa_offset 4
 2676 004c BD46     		mov	sp, r7
 2677              	.LCFI125:
 2678              		.cfi_def_cfa_register 13
 2679              		@ sp needed
 2680 004e 5DF8047B 		ldr	r7, [sp], #4
 2681              	.LCFI126:
 2682              		.cfi_restore 7
 2683              		.cfi_def_cfa_offset 0
 2684 0052 7047     		bx	lr
 2685              		.cfi_endproc
 2686              	.LFE148:
 2688              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 2689              		.align	2
 2690              		.global	HAL_MultiProcessor_EnterMuteMode
 2691              		.thumb
 2692              		.thumb_func
 2694              	HAL_MultiProcessor_EnterMuteMode:
 2695              	.LFB149:
1359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enters the UART in mute mode. 
1362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
1367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2696              		.loc 1 1367 0
 2697              		.cfi_startproc
 2698              		@ args = 0, pretend = 0, frame = 8
 2699              		@ frame_needed = 1, uses_anonymous_args = 0
 2700              		@ link register save eliminated.
 2701 0000 80B4     		push	{r7}
 2702              	.LCFI127:
 2703              		.cfi_def_cfa_offset 4
 2704              		.cfi_offset 7, -4
 2705 0002 83B0     		sub	sp, sp, #12
 2706              	.LCFI128:
 2707              		.cfi_def_cfa_offset 16
 2708 0004 00AF     		add	r7, sp, #0
 2709              	.LCFI129:
 2710              		.cfi_def_cfa_register 7
 2711 0006 7860     		str	r0, [r7, #4]
1368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
1369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 2712              		.loc 1 1372 0
 2713 0008 7B68     		ldr	r3, [r7, #4]
 2714 000a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 2715 000e 012B     		cmp	r3, #1
ARM GAS  /tmp/ccez0bZg.s 			page 72


 2716 0010 01D1     		bne	.L126
 2717              		.loc 1 1372 0 is_stmt 0 discriminator 1
 2718 0012 0223     		movs	r3, #2
 2719 0014 18E0     		b	.L127
 2720              	.L126:
 2721              		.loc 1 1372 0 discriminator 2
 2722 0016 7B68     		ldr	r3, [r7, #4]
 2723 0018 0122     		movs	r2, #1
 2724 001a 83F83820 		strb	r2, [r3, #56]
1373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2725              		.loc 1 1374 0 is_stmt 1 discriminator 2
 2726 001e 7B68     		ldr	r3, [r7, #4]
 2727 0020 2422     		movs	r2, #36
 2728 0022 83F83920 		strb	r2, [r3, #57]
1375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART mute mode  by setting the RWU bit in the CR1 register */
1377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RWU);
 2729              		.loc 1 1377 0 discriminator 2
 2730 0026 7B68     		ldr	r3, [r7, #4]
 2731 0028 1B68     		ldr	r3, [r3]
 2732 002a 7A68     		ldr	r2, [r7, #4]
 2733 002c 1268     		ldr	r2, [r2]
 2734 002e D268     		ldr	r2, [r2, #12]
 2735 0030 42F00202 		orr	r2, r2, #2
 2736 0034 DA60     		str	r2, [r3, #12]
1378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2737              		.loc 1 1379 0 discriminator 2
 2738 0036 7B68     		ldr	r3, [r7, #4]
 2739 0038 2022     		movs	r2, #32
 2740 003a 83F83920 		strb	r2, [r3, #57]
1380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2741              		.loc 1 1382 0 discriminator 2
 2742 003e 7B68     		ldr	r3, [r7, #4]
 2743 0040 0022     		movs	r2, #0
 2744 0042 83F83820 		strb	r2, [r3, #56]
1383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
 2745              		.loc 1 1384 0 discriminator 2
 2746 0046 0023     		movs	r3, #0
 2747              	.L127:
1385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2748              		.loc 1 1385 0
 2749 0048 1846     		mov	r0, r3
 2750 004a 0C37     		adds	r7, r7, #12
 2751              	.LCFI130:
 2752              		.cfi_def_cfa_offset 4
 2753 004c BD46     		mov	sp, r7
 2754              	.LCFI131:
 2755              		.cfi_def_cfa_register 13
 2756              		@ sp needed
 2757 004e 5DF8047B 		ldr	r7, [sp], #4
 2758              	.LCFI132:
 2759              		.cfi_restore 7
ARM GAS  /tmp/ccez0bZg.s 			page 73


 2760              		.cfi_def_cfa_offset 0
 2761 0052 7047     		bx	lr
 2762              		.cfi_endproc
 2763              	.LFE149:
 2765              		.section	.text.HAL_MultiProcessor_ExitMuteMode,"ax",%progbits
 2766              		.align	2
 2767              		.global	HAL_MultiProcessor_ExitMuteMode
 2768              		.thumb
 2769              		.thumb_func
 2771              	HAL_MultiProcessor_ExitMuteMode:
 2772              	.LFB150:
1386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Exits the UART mute mode: wake up software. 
1389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_ExitMuteMode(UART_HandleTypeDef *huart)
1394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2773              		.loc 1 1394 0
 2774              		.cfi_startproc
 2775              		@ args = 0, pretend = 0, frame = 8
 2776              		@ frame_needed = 1, uses_anonymous_args = 0
 2777              		@ link register save eliminated.
 2778 0000 80B4     		push	{r7}
 2779              	.LCFI133:
 2780              		.cfi_def_cfa_offset 4
 2781              		.cfi_offset 7, -4
 2782 0002 83B0     		sub	sp, sp, #12
 2783              	.LCFI134:
 2784              		.cfi_def_cfa_offset 16
 2785 0004 00AF     		add	r7, sp, #0
 2786              	.LCFI135:
 2787              		.cfi_def_cfa_register 7
 2788 0006 7860     		str	r0, [r7, #4]
1395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
1396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 2789              		.loc 1 1399 0
 2790 0008 7B68     		ldr	r3, [r7, #4]
 2791 000a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 2792 000e 012B     		cmp	r3, #1
 2793 0010 01D1     		bne	.L129
 2794              		.loc 1 1399 0 is_stmt 0 discriminator 1
 2795 0012 0223     		movs	r3, #2
 2796 0014 18E0     		b	.L130
 2797              	.L129:
 2798              		.loc 1 1399 0 discriminator 2
 2799 0016 7B68     		ldr	r3, [r7, #4]
 2800 0018 0122     		movs	r2, #1
 2801 001a 83F83820 		strb	r2, [r3, #56]
1400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2802              		.loc 1 1401 0 is_stmt 1 discriminator 2
ARM GAS  /tmp/ccez0bZg.s 			page 74


 2803 001e 7B68     		ldr	r3, [r7, #4]
 2804 0020 2422     		movs	r2, #36
 2805 0022 83F83920 		strb	r2, [r3, #57]
1402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the USART mute mode by clearing the RWU bit in the CR1 register */
1404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_RWU);
 2806              		.loc 1 1404 0 discriminator 2
 2807 0026 7B68     		ldr	r3, [r7, #4]
 2808 0028 1B68     		ldr	r3, [r3]
 2809 002a 7A68     		ldr	r2, [r7, #4]
 2810 002c 1268     		ldr	r2, [r2]
 2811 002e D268     		ldr	r2, [r2, #12]
 2812 0030 22F00202 		bic	r2, r2, #2
 2813 0034 DA60     		str	r2, [r3, #12]
1405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2814              		.loc 1 1406 0 discriminator 2
 2815 0036 7B68     		ldr	r3, [r7, #4]
 2816 0038 2022     		movs	r2, #32
 2817 003a 83F83920 		strb	r2, [r3, #57]
1407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2818              		.loc 1 1409 0 discriminator 2
 2819 003e 7B68     		ldr	r3, [r7, #4]
 2820 0040 0022     		movs	r2, #0
 2821 0042 83F83820 		strb	r2, [r3, #56]
1410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
 2822              		.loc 1 1411 0 discriminator 2
 2823 0046 0023     		movs	r3, #0
 2824              	.L130:
1412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2825              		.loc 1 1412 0
 2826 0048 1846     		mov	r0, r3
 2827 004a 0C37     		adds	r7, r7, #12
 2828              	.LCFI136:
 2829              		.cfi_def_cfa_offset 4
 2830 004c BD46     		mov	sp, r7
 2831              	.LCFI137:
 2832              		.cfi_def_cfa_register 13
 2833              		@ sp needed
 2834 004e 5DF8047B 		ldr	r7, [sp], #4
 2835              	.LCFI138:
 2836              		.cfi_restore 7
 2837              		.cfi_def_cfa_offset 0
 2838 0052 7047     		bx	lr
 2839              		.cfi_endproc
 2840              	.LFE150:
 2842              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 2843              		.align	2
 2844              		.global	HAL_HalfDuplex_EnableTransmitter
 2845              		.thumb
 2846              		.thumb_func
 2848              	HAL_HalfDuplex_EnableTransmitter:
 2849              	.LFB151:
1413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccez0bZg.s 			page 75


1414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enables the UART transmitter and disables the UART receiver.
1416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
1421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2850              		.loc 1 1421 0
 2851              		.cfi_startproc
 2852              		@ args = 0, pretend = 0, frame = 16
 2853              		@ frame_needed = 1, uses_anonymous_args = 0
 2854              		@ link register save eliminated.
 2855 0000 80B4     		push	{r7}
 2856              	.LCFI139:
 2857              		.cfi_def_cfa_offset 4
 2858              		.cfi_offset 7, -4
 2859 0002 85B0     		sub	sp, sp, #20
 2860              	.LCFI140:
 2861              		.cfi_def_cfa_offset 24
 2862 0004 00AF     		add	r7, sp, #0
 2863              	.LCFI141:
 2864              		.cfi_def_cfa_register 7
 2865 0006 7860     		str	r0, [r7, #4]
1422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 2866              		.loc 1 1422 0
 2867 0008 0023     		movs	r3, #0
 2868 000a FB60     		str	r3, [r7, #12]
1423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 2869              		.loc 1 1425 0
 2870 000c 7B68     		ldr	r3, [r7, #4]
 2871 000e 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 2872 0012 012B     		cmp	r3, #1
 2873 0014 01D1     		bne	.L132
 2874              		.loc 1 1425 0 is_stmt 0 discriminator 1
 2875 0016 0223     		movs	r3, #2
 2876 0018 20E0     		b	.L133
 2877              	.L132:
 2878              		.loc 1 1425 0 discriminator 2
 2879 001a 7B68     		ldr	r3, [r7, #4]
 2880 001c 0122     		movs	r2, #1
 2881 001e 83F83820 		strb	r2, [r3, #56]
1426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2882              		.loc 1 1427 0 is_stmt 1 discriminator 2
 2883 0022 7B68     		ldr	r3, [r7, #4]
 2884 0024 2422     		movs	r2, #36
 2885 0026 83F83920 		strb	r2, [r3, #57]
1428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
1430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
 2886              		.loc 1 1430 0 discriminator 2
 2887 002a 7B68     		ldr	r3, [r7, #4]
 2888 002c 1B68     		ldr	r3, [r3]
 2889 002e DB68     		ldr	r3, [r3, #12]
ARM GAS  /tmp/ccez0bZg.s 			page 76


 2890 0030 FB60     		str	r3, [r7, #12]
1431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear TE and RE bits */
1433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
 2891              		.loc 1 1433 0 discriminator 2
 2892 0032 FB68     		ldr	r3, [r7, #12]
 2893 0034 23F00C03 		bic	r3, r3, #12
 2894 0038 FB60     		str	r3, [r7, #12]
1434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
1436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_TE;
 2895              		.loc 1 1436 0 discriminator 2
 2896 003a FB68     		ldr	r3, [r7, #12]
 2897 003c 43F00803 		orr	r3, r3, #8
 2898 0040 FB60     		str	r3, [r7, #12]
1437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
1439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
 2899              		.loc 1 1439 0 discriminator 2
 2900 0042 7B68     		ldr	r3, [r7, #4]
 2901 0044 1B68     		ldr	r3, [r3]
 2902 0046 FA68     		ldr	r2, [r7, #12]
 2903 0048 DA60     		str	r2, [r3, #12]
1440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
1441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2904              		.loc 1 1441 0 discriminator 2
 2905 004a 7B68     		ldr	r3, [r7, #4]
 2906 004c 2022     		movs	r2, #32
 2907 004e 83F83920 		strb	r2, [r3, #57]
1442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2908              		.loc 1 1444 0 discriminator 2
 2909 0052 7B68     		ldr	r3, [r7, #4]
 2910 0054 0022     		movs	r2, #0
 2911 0056 83F83820 		strb	r2, [r3, #56]
1445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
 2912              		.loc 1 1446 0 discriminator 2
 2913 005a 0023     		movs	r3, #0
 2914              	.L133:
1447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2915              		.loc 1 1447 0
 2916 005c 1846     		mov	r0, r3
 2917 005e 1437     		adds	r7, r7, #20
 2918              	.LCFI142:
 2919              		.cfi_def_cfa_offset 4
 2920 0060 BD46     		mov	sp, r7
 2921              	.LCFI143:
 2922              		.cfi_def_cfa_register 13
 2923              		@ sp needed
 2924 0062 5DF8047B 		ldr	r7, [sp], #4
 2925              	.LCFI144:
 2926              		.cfi_restore 7
 2927              		.cfi_def_cfa_offset 0
 2928 0066 7047     		bx	lr
 2929              		.cfi_endproc
ARM GAS  /tmp/ccez0bZg.s 			page 77


 2930              	.LFE151:
 2932              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 2933              		.align	2
 2934              		.global	HAL_HalfDuplex_EnableReceiver
 2935              		.thumb
 2936              		.thumb_func
 2938              	HAL_HalfDuplex_EnableReceiver:
 2939              	.LFB152:
1448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enables the UART receiver and disables the UART transmitter.
1451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
1456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2940              		.loc 1 1456 0
 2941              		.cfi_startproc
 2942              		@ args = 0, pretend = 0, frame = 16
 2943              		@ frame_needed = 1, uses_anonymous_args = 0
 2944              		@ link register save eliminated.
 2945 0000 80B4     		push	{r7}
 2946              	.LCFI145:
 2947              		.cfi_def_cfa_offset 4
 2948              		.cfi_offset 7, -4
 2949 0002 85B0     		sub	sp, sp, #20
 2950              	.LCFI146:
 2951              		.cfi_def_cfa_offset 24
 2952 0004 00AF     		add	r7, sp, #0
 2953              	.LCFI147:
 2954              		.cfi_def_cfa_register 7
 2955 0006 7860     		str	r0, [r7, #4]
1457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 2956              		.loc 1 1457 0
 2957 0008 0023     		movs	r3, #0
 2958 000a FB60     		str	r3, [r7, #12]
1458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 2959              		.loc 1 1460 0
 2960 000c 7B68     		ldr	r3, [r7, #4]
 2961 000e 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 2962 0012 012B     		cmp	r3, #1
 2963 0014 01D1     		bne	.L135
 2964              		.loc 1 1460 0 is_stmt 0 discriminator 1
 2965 0016 0223     		movs	r3, #2
 2966 0018 20E0     		b	.L136
 2967              	.L135:
 2968              		.loc 1 1460 0 discriminator 2
 2969 001a 7B68     		ldr	r3, [r7, #4]
 2970 001c 0122     		movs	r2, #1
 2971 001e 83F83820 		strb	r2, [r3, #56]
1461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2972              		.loc 1 1462 0 is_stmt 1 discriminator 2
 2973 0022 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccez0bZg.s 			page 78


 2974 0024 2422     		movs	r2, #36
 2975 0026 83F83920 		strb	r2, [r3, #57]
1463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
1465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
 2976              		.loc 1 1465 0 discriminator 2
 2977 002a 7B68     		ldr	r3, [r7, #4]
 2978 002c 1B68     		ldr	r3, [r3]
 2979 002e DB68     		ldr	r3, [r3, #12]
 2980 0030 FB60     		str	r3, [r7, #12]
1466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear TE and RE bits */
1468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
 2981              		.loc 1 1468 0 discriminator 2
 2982 0032 FB68     		ldr	r3, [r7, #12]
 2983 0034 23F00C03 		bic	r3, r3, #12
 2984 0038 FB60     		str	r3, [r7, #12]
1469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
1471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_RE;
 2985              		.loc 1 1471 0 discriminator 2
 2986 003a FB68     		ldr	r3, [r7, #12]
 2987 003c 43F00403 		orr	r3, r3, #4
 2988 0040 FB60     		str	r3, [r7, #12]
1472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
1474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
 2989              		.loc 1 1474 0 discriminator 2
 2990 0042 7B68     		ldr	r3, [r7, #4]
 2991 0044 1B68     		ldr	r3, [r3]
 2992 0046 FA68     		ldr	r2, [r7, #12]
 2993 0048 DA60     		str	r2, [r3, #12]
1475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2994              		.loc 1 1476 0 discriminator 2
 2995 004a 7B68     		ldr	r3, [r7, #4]
 2996 004c 2022     		movs	r2, #32
 2997 004e 83F83920 		strb	r2, [r3, #57]
1477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2998              		.loc 1 1479 0 discriminator 2
 2999 0052 7B68     		ldr	r3, [r7, #4]
 3000 0054 0022     		movs	r2, #0
 3001 0056 83F83820 		strb	r2, [r3, #56]
1480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
 3002              		.loc 1 1481 0 discriminator 2
 3003 005a 0023     		movs	r3, #0
 3004              	.L136:
1482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3005              		.loc 1 1482 0
 3006 005c 1846     		mov	r0, r3
 3007 005e 1437     		adds	r7, r7, #20
 3008              	.LCFI148:
 3009              		.cfi_def_cfa_offset 4
 3010 0060 BD46     		mov	sp, r7
ARM GAS  /tmp/ccez0bZg.s 			page 79


 3011              	.LCFI149:
 3012              		.cfi_def_cfa_register 13
 3013              		@ sp needed
 3014 0062 5DF8047B 		ldr	r7, [sp], #4
 3015              	.LCFI150:
 3016              		.cfi_restore 7
 3017              		.cfi_def_cfa_offset 0
 3018 0066 7047     		bx	lr
 3019              		.cfi_endproc
 3020              	.LFE152:
 3022              		.section	.text.HAL_UART_GetState,"ax",%progbits
 3023              		.align	2
 3024              		.global	HAL_UART_GetState
 3025              		.thumb
 3026              		.thumb_func
 3028              	HAL_UART_GetState:
 3029              	.LFB153:
1483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
1486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Errors functions 
1489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief   UART State and Errors functions 
1490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
1491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim   
1492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
1493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                  ##### Peripheral State and Errors functions #####
1494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================  
1495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  [..]
1496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    This subsection provides a set of functions allowing to return the State of 
1497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    UART communication process, return Peripheral Errors occurred during communication 
1498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    process
1499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    (+) HAL_UART_GetState() API can be helpful to check in run-time the state of the UART peripheral
1500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    (+) HAL_UART_GetError() check in run-time errors that could be occurred during communication. 
1501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
1503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
1504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Returns the UART state.
1508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL state
1511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
1513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3030              		.loc 1 1513 0
 3031              		.cfi_startproc
 3032              		@ args = 0, pretend = 0, frame = 16
 3033              		@ frame_needed = 1, uses_anonymous_args = 0
 3034              		@ link register save eliminated.
 3035 0000 80B4     		push	{r7}
 3036              	.LCFI151:
 3037              		.cfi_def_cfa_offset 4
 3038              		.cfi_offset 7, -4
ARM GAS  /tmp/ccez0bZg.s 			page 80


 3039 0002 85B0     		sub	sp, sp, #20
 3040              	.LCFI152:
 3041              		.cfi_def_cfa_offset 24
 3042 0004 00AF     		add	r7, sp, #0
 3043              	.LCFI153:
 3044              		.cfi_def_cfa_register 7
 3045 0006 7860     		str	r0, [r7, #4]
1514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
 3046              		.loc 1 1514 0
 3047 0008 0023     		movs	r3, #0
 3048 000a FB60     		str	r3, [r7, #12]
 3049 000c 0023     		movs	r3, #0
 3050 000e BB60     		str	r3, [r7, #8]
1515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp1 = huart->gState;
 3051              		.loc 1 1515 0
 3052 0010 7B68     		ldr	r3, [r7, #4]
 3053 0012 93F83930 		ldrb	r3, [r3, #57]
 3054 0016 DBB2     		uxtb	r3, r3
 3055 0018 FB60     		str	r3, [r7, #12]
1516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp2 = huart->RxState;
 3056              		.loc 1 1516 0
 3057 001a 7B68     		ldr	r3, [r7, #4]
 3058 001c 93F83A30 		ldrb	r3, [r3, #58]
 3059 0020 DBB2     		uxtb	r3, r3
 3060 0022 BB60     		str	r3, [r7, #8]
1517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
 3061              		.loc 1 1518 0
 3062 0024 FB68     		ldr	r3, [r7, #12]
 3063 0026 DAB2     		uxtb	r2, r3
 3064 0028 BB68     		ldr	r3, [r7, #8]
 3065 002a DBB2     		uxtb	r3, r3
 3066 002c 1343     		orrs	r3, r3, r2
 3067 002e DBB2     		uxtb	r3, r3
1519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3068              		.loc 1 1519 0
 3069 0030 1846     		mov	r0, r3
 3070 0032 1437     		adds	r7, r7, #20
 3071              	.LCFI154:
 3072              		.cfi_def_cfa_offset 4
 3073 0034 BD46     		mov	sp, r7
 3074              	.LCFI155:
 3075              		.cfi_def_cfa_register 13
 3076              		@ sp needed
 3077 0036 5DF8047B 		ldr	r7, [sp], #4
 3078              	.LCFI156:
 3079              		.cfi_restore 7
 3080              		.cfi_def_cfa_offset 0
 3081 003a 7047     		bx	lr
 3082              		.cfi_endproc
 3083              	.LFE153:
 3085              		.section	.text.HAL_UART_GetError,"ax",%progbits
 3086              		.align	2
 3087              		.global	HAL_UART_GetError
 3088              		.thumb
 3089              		.thumb_func
 3091              	HAL_UART_GetError:
ARM GAS  /tmp/ccez0bZg.s 			page 81


 3092              	.LFB154:
1520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Return the UART error code
1523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart : pointer to a UART_HandleTypeDef structure that contains
1524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *              the configuration information for the specified UART.
1525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval UART Error Code
1526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
1528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3093              		.loc 1 1528 0
 3094              		.cfi_startproc
 3095              		@ args = 0, pretend = 0, frame = 8
 3096              		@ frame_needed = 1, uses_anonymous_args = 0
 3097              		@ link register save eliminated.
 3098 0000 80B4     		push	{r7}
 3099              	.LCFI157:
 3100              		.cfi_def_cfa_offset 4
 3101              		.cfi_offset 7, -4
 3102 0002 83B0     		sub	sp, sp, #12
 3103              	.LCFI158:
 3104              		.cfi_def_cfa_offset 16
 3105 0004 00AF     		add	r7, sp, #0
 3106              	.LCFI159:
 3107              		.cfi_def_cfa_register 7
 3108 0006 7860     		str	r0, [r7, #4]
1529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return huart->ErrorCode;
 3109              		.loc 1 1529 0
 3110 0008 7B68     		ldr	r3, [r7, #4]
 3111 000a DB6B     		ldr	r3, [r3, #60]
1530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3112              		.loc 1 1530 0
 3113 000c 1846     		mov	r0, r3
 3114 000e 0C37     		adds	r7, r7, #12
 3115              	.LCFI160:
 3116              		.cfi_def_cfa_offset 4
 3117 0010 BD46     		mov	sp, r7
 3118              	.LCFI161:
 3119              		.cfi_def_cfa_register 13
 3120              		@ sp needed
 3121 0012 5DF8047B 		ldr	r7, [sp], #4
 3122              	.LCFI162:
 3123              		.cfi_restore 7
 3124              		.cfi_def_cfa_offset 0
 3125 0016 7047     		bx	lr
 3126              		.cfi_endproc
 3127              	.LFE154:
 3129              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 3130              		.align	2
 3131              		.thumb
 3132              		.thumb_func
 3134              	UART_DMATransmitCplt:
 3135              	.LFB155:
1531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
1534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
ARM GAS  /tmp/ccez0bZg.s 			page 82


1535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART transmit process complete callback. 
1538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma: DMA handle
1539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
1542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3136              		.loc 1 1542 0
 3137              		.cfi_startproc
 3138              		@ args = 0, pretend = 0, frame = 16
 3139              		@ frame_needed = 1, uses_anonymous_args = 0
 3140 0000 80B5     		push	{r7, lr}
 3141              	.LCFI163:
 3142              		.cfi_def_cfa_offset 8
 3143              		.cfi_offset 7, -8
 3144              		.cfi_offset 14, -4
 3145 0002 84B0     		sub	sp, sp, #16
 3146              	.LCFI164:
 3147              		.cfi_def_cfa_offset 24
 3148 0004 00AF     		add	r7, sp, #0
 3149              	.LCFI165:
 3150              		.cfi_def_cfa_register 7
 3151 0006 7860     		str	r0, [r7, #4]
1543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3152              		.loc 1 1543 0
 3153 0008 7B68     		ldr	r3, [r7, #4]
 3154 000a 9B6B     		ldr	r3, [r3, #56]
 3155 000c FB60     		str	r3, [r7, #12]
1544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
1545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
 3156              		.loc 1 1545 0
 3157 000e 7B68     		ldr	r3, [r7, #4]
 3158 0010 1B68     		ldr	r3, [r3]
 3159 0012 1B68     		ldr	r3, [r3]
 3160 0014 03F48073 		and	r3, r3, #256
 3161 0018 002B     		cmp	r3, #0
 3162 001a 13D1     		bne	.L142
1546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0U;
 3163              		.loc 1 1547 0
 3164 001c FB68     		ldr	r3, [r7, #12]
 3165 001e 0022     		movs	r2, #0
 3166 0020 DA84     		strh	r2, [r3, #38]	@ movhi
1548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by setting the DMAT bit
1550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
1551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 3167              		.loc 1 1551 0
 3168 0022 FB68     		ldr	r3, [r7, #12]
 3169 0024 1B68     		ldr	r3, [r3]
 3170 0026 FA68     		ldr	r2, [r7, #12]
 3171 0028 1268     		ldr	r2, [r2]
 3172 002a 5269     		ldr	r2, [r2, #20]
 3173 002c 22F08002 		bic	r2, r2, #128
 3174 0030 5A61     		str	r2, [r3, #20]
1552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccez0bZg.s 			page 83


1553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
1554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 3175              		.loc 1 1554 0
 3176 0032 FB68     		ldr	r3, [r7, #12]
 3177 0034 1B68     		ldr	r3, [r3]
 3178 0036 FA68     		ldr	r2, [r7, #12]
 3179 0038 1268     		ldr	r2, [r2]
 3180 003a D268     		ldr	r2, [r2, #12]
 3181 003c 42F04002 		orr	r2, r2, #64
 3182 0040 DA60     		str	r2, [r3, #12]
1555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Circular mode */
1558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
1561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3183              		.loc 1 1562 0
 3184 0042 02E0     		b	.L144
 3185              	.L142:
1560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 3186              		.loc 1 1560 0
 3187 0044 F868     		ldr	r0, [r7, #12]
 3188 0046 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 3189              	.L144:
 3190              		.loc 1 1562 0
 3191 004a 00BF     		nop
 3192 004c 1037     		adds	r7, r7, #16
 3193              	.LCFI166:
 3194              		.cfi_def_cfa_offset 8
 3195 004e BD46     		mov	sp, r7
 3196              	.LCFI167:
 3197              		.cfi_def_cfa_register 13
 3198              		@ sp needed
 3199 0050 80BD     		pop	{r7, pc}
 3200              		.cfi_endproc
 3201              	.LFE155:
 3203 0052 00BF     		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 3204              		.align	2
 3205              		.thumb
 3206              		.thumb_func
 3208              	UART_DMATxHalfCplt:
 3209              	.LFB156:
1563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback 
1566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
1567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified DMA module.
1568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
1571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3210              		.loc 1 1571 0
 3211              		.cfi_startproc
 3212              		@ args = 0, pretend = 0, frame = 16
 3213              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccez0bZg.s 			page 84


 3214 0000 80B5     		push	{r7, lr}
 3215              	.LCFI168:
 3216              		.cfi_def_cfa_offset 8
 3217              		.cfi_offset 7, -8
 3218              		.cfi_offset 14, -4
 3219 0002 84B0     		sub	sp, sp, #16
 3220              	.LCFI169:
 3221              		.cfi_def_cfa_offset 24
 3222 0004 00AF     		add	r7, sp, #0
 3223              	.LCFI170:
 3224              		.cfi_def_cfa_register 7
 3225 0006 7860     		str	r0, [r7, #4]
1572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 3226              		.loc 1 1572 0
 3227 0008 7B68     		ldr	r3, [r7, #4]
 3228 000a 9B6B     		ldr	r3, [r3, #56]
 3229 000c FB60     		str	r3, [r7, #12]
1573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 3230              		.loc 1 1574 0
 3231 000e F868     		ldr	r0, [r7, #12]
 3232 0010 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
1575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3233              		.loc 1 1575 0
 3234 0014 00BF     		nop
 3235 0016 1037     		adds	r7, r7, #16
 3236              	.LCFI171:
 3237              		.cfi_def_cfa_offset 8
 3238 0018 BD46     		mov	sp, r7
 3239              	.LCFI172:
 3240              		.cfi_def_cfa_register 13
 3241              		@ sp needed
 3242 001a 80BD     		pop	{r7, pc}
 3243              		.cfi_endproc
 3244              	.LFE156:
 3246              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 3247              		.align	2
 3248              		.thumb
 3249              		.thumb_func
 3251              	UART_DMAReceiveCplt:
 3252              	.LFB157:
1576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART receive process complete callback. 
1579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma: DMA handle
1580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
1583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3253              		.loc 1 1583 0
 3254              		.cfi_startproc
 3255              		@ args = 0, pretend = 0, frame = 16
 3256              		@ frame_needed = 1, uses_anonymous_args = 0
 3257 0000 80B5     		push	{r7, lr}
 3258              	.LCFI173:
 3259              		.cfi_def_cfa_offset 8
 3260              		.cfi_offset 7, -8
ARM GAS  /tmp/ccez0bZg.s 			page 85


 3261              		.cfi_offset 14, -4
 3262 0002 84B0     		sub	sp, sp, #16
 3263              	.LCFI174:
 3264              		.cfi_def_cfa_offset 24
 3265 0004 00AF     		add	r7, sp, #0
 3266              	.LCFI175:
 3267              		.cfi_def_cfa_register 7
 3268 0006 7860     		str	r0, [r7, #4]
1584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3269              		.loc 1 1584 0
 3270 0008 7B68     		ldr	r3, [r7, #4]
 3271 000a 9B6B     		ldr	r3, [r3, #56]
 3272 000c FB60     		str	r3, [r7, #12]
1585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
1586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
 3273              		.loc 1 1586 0
 3274 000e 7B68     		ldr	r3, [r7, #4]
 3275 0010 1B68     		ldr	r3, [r3]
 3276 0012 1B68     		ldr	r3, [r3]
 3277 0014 03F48073 		and	r3, r3, #256
 3278 0018 002B     		cmp	r3, #0
 3279 001a 1ED1     		bne	.L147
1587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 3280              		.loc 1 1588 0
 3281 001c FB68     		ldr	r3, [r7, #12]
 3282 001e 0022     		movs	r2, #0
 3283 0020 DA85     		strh	r2, [r3, #46]	@ movhi
1589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 3284              		.loc 1 1591 0
 3285 0022 FB68     		ldr	r3, [r7, #12]
 3286 0024 1B68     		ldr	r3, [r3]
 3287 0026 FA68     		ldr	r2, [r7, #12]
 3288 0028 1268     		ldr	r2, [r2]
 3289 002a D268     		ldr	r2, [r2, #12]
 3290 002c 22F48072 		bic	r2, r2, #256
 3291 0030 DA60     		str	r2, [r3, #12]
1592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3292              		.loc 1 1592 0
 3293 0032 FB68     		ldr	r3, [r7, #12]
 3294 0034 1B68     		ldr	r3, [r3]
 3295 0036 FA68     		ldr	r2, [r7, #12]
 3296 0038 1268     		ldr	r2, [r2]
 3297 003a 5269     		ldr	r2, [r2, #20]
 3298 003c 22F00102 		bic	r2, r2, #1
 3299 0040 5A61     		str	r2, [r3, #20]
1593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by setting the DMAR bit 
1595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
1596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3300              		.loc 1 1596 0
 3301 0042 FB68     		ldr	r3, [r7, #12]
 3302 0044 1B68     		ldr	r3, [r3]
 3303 0046 FA68     		ldr	r2, [r7, #12]
 3304 0048 1268     		ldr	r2, [r2]
ARM GAS  /tmp/ccez0bZg.s 			page 86


 3305 004a 5269     		ldr	r2, [r2, #20]
 3306 004c 22F04002 		bic	r2, r2, #64
 3307 0050 5A61     		str	r2, [r3, #20]
1597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 	
1598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3308              		.loc 1 1599 0
 3309 0052 FB68     		ldr	r3, [r7, #12]
 3310 0054 2022     		movs	r2, #32
 3311 0056 83F83A20 		strb	r2, [r3, #58]
 3312              	.L147:
1600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
 3313              		.loc 1 1601 0
 3314 005a F868     		ldr	r0, [r7, #12]
 3315 005c FFF7FEFF 		bl	HAL_UART_RxCpltCallback
1602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3316              		.loc 1 1602 0
 3317 0060 00BF     		nop
 3318 0062 1037     		adds	r7, r7, #16
 3319              	.LCFI176:
 3320              		.cfi_def_cfa_offset 8
 3321 0064 BD46     		mov	sp, r7
 3322              	.LCFI177:
 3323              		.cfi_def_cfa_register 13
 3324              		@ sp needed
 3325 0066 80BD     		pop	{r7, pc}
 3326              		.cfi_endproc
 3327              	.LFE157:
 3329              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 3330              		.align	2
 3331              		.thumb
 3332              		.thumb_func
 3334              	UART_DMARxHalfCplt:
 3335              	.LFB158:
1603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback 
1606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
1607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified DMA module.
1608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
1611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3336              		.loc 1 1611 0
 3337              		.cfi_startproc
 3338              		@ args = 0, pretend = 0, frame = 16
 3339              		@ frame_needed = 1, uses_anonymous_args = 0
 3340 0000 80B5     		push	{r7, lr}
 3341              	.LCFI178:
 3342              		.cfi_def_cfa_offset 8
 3343              		.cfi_offset 7, -8
 3344              		.cfi_offset 14, -4
 3345 0002 84B0     		sub	sp, sp, #16
 3346              	.LCFI179:
 3347              		.cfi_def_cfa_offset 24
 3348 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccez0bZg.s 			page 87


 3349              	.LCFI180:
 3350              		.cfi_def_cfa_register 7
 3351 0006 7860     		str	r0, [r7, #4]
1612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 3352              		.loc 1 1612 0
 3353 0008 7B68     		ldr	r3, [r7, #4]
 3354 000a 9B6B     		ldr	r3, [r3, #56]
 3355 000c FB60     		str	r3, [r7, #12]
1613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart); 
 3356              		.loc 1 1614 0
 3357 000e F868     		ldr	r0, [r7, #12]
 3358 0010 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
1615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3359              		.loc 1 1615 0
 3360 0014 00BF     		nop
 3361 0016 1037     		adds	r7, r7, #16
 3362              	.LCFI181:
 3363              		.cfi_def_cfa_offset 8
 3364 0018 BD46     		mov	sp, r7
 3365              	.LCFI182:
 3366              		.cfi_def_cfa_register 13
 3367              		@ sp needed
 3368 001a 80BD     		pop	{r7, pc}
 3369              		.cfi_endproc
 3370              	.LFE158:
 3372              		.section	.text.UART_DMAError,"ax",%progbits
 3373              		.align	2
 3374              		.thumb
 3375              		.thumb_func
 3377              	UART_DMAError:
 3378              	.LFB159:
1616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART communication error callback.
1619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma: DMA handle
1620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
1623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3379              		.loc 1 1623 0
 3380              		.cfi_startproc
 3381              		@ args = 0, pretend = 0, frame = 16
 3382              		@ frame_needed = 1, uses_anonymous_args = 0
 3383 0000 80B5     		push	{r7, lr}
 3384              	.LCFI183:
 3385              		.cfi_def_cfa_offset 8
 3386              		.cfi_offset 7, -8
 3387              		.cfi_offset 14, -4
 3388 0002 84B0     		sub	sp, sp, #16
 3389              	.LCFI184:
 3390              		.cfi_def_cfa_offset 24
 3391 0004 00AF     		add	r7, sp, #0
 3392              	.LCFI185:
 3393              		.cfi_def_cfa_register 7
 3394 0006 7860     		str	r0, [r7, #4]
1624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
ARM GAS  /tmp/ccez0bZg.s 			page 88


 3395              		.loc 1 1624 0
 3396 0008 0023     		movs	r3, #0
 3397 000a FB60     		str	r3, [r7, #12]
1625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3398              		.loc 1 1625 0
 3399 000c 7B68     		ldr	r3, [r7, #4]
 3400 000e 9B6B     		ldr	r3, [r3, #56]
 3401 0010 BB60     		str	r3, [r7, #8]
1626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 3402              		.loc 1 1628 0
 3403 0012 BB68     		ldr	r3, [r7, #8]
 3404 0014 1B68     		ldr	r3, [r3]
 3405 0016 5B69     		ldr	r3, [r3, #20]
 3406 0018 03F08003 		and	r3, r3, #128
 3407 001c 002B     		cmp	r3, #0
 3408 001e 14BF     		ite	ne
 3409 0020 0123     		movne	r3, #1
 3410 0022 0023     		moveq	r3, #0
 3411 0024 DBB2     		uxtb	r3, r3
 3412 0026 FB60     		str	r3, [r7, #12]
1629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 3413              		.loc 1 1629 0
 3414 0028 BB68     		ldr	r3, [r7, #8]
 3415 002a 93F83930 		ldrb	r3, [r3, #57]
 3416 002e DBB2     		uxtb	r3, r3
 3417 0030 212B     		cmp	r3, #33
 3418 0032 08D1     		bne	.L150
 3419              		.loc 1 1629 0 is_stmt 0 discriminator 1
 3420 0034 FB68     		ldr	r3, [r7, #12]
 3421 0036 002B     		cmp	r3, #0
 3422 0038 05D0     		beq	.L150
1630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0U;
 3423              		.loc 1 1631 0 is_stmt 1
 3424 003a BB68     		ldr	r3, [r7, #8]
 3425 003c 0022     		movs	r2, #0
 3426 003e DA84     		strh	r2, [r3, #38]	@ movhi
1632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 3427              		.loc 1 1632 0
 3428 0040 B868     		ldr	r0, [r7, #8]
 3429 0042 FFF7FEFF 		bl	UART_EndTxTransfer
 3430              	.L150:
1633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR); 
 3431              		.loc 1 1636 0
 3432 0046 BB68     		ldr	r3, [r7, #8]
 3433 0048 1B68     		ldr	r3, [r3]
 3434 004a 5B69     		ldr	r3, [r3, #20]
 3435 004c 03F04003 		and	r3, r3, #64
 3436 0050 002B     		cmp	r3, #0
 3437 0052 14BF     		ite	ne
 3438 0054 0123     		movne	r3, #1
 3439 0056 0023     		moveq	r3, #0
ARM GAS  /tmp/ccez0bZg.s 			page 89


 3440 0058 DBB2     		uxtb	r3, r3
 3441 005a FB60     		str	r3, [r7, #12]
1637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 3442              		.loc 1 1637 0
 3443 005c BB68     		ldr	r3, [r7, #8]
 3444 005e 93F83A30 		ldrb	r3, [r3, #58]
 3445 0062 DBB2     		uxtb	r3, r3
 3446 0064 222B     		cmp	r3, #34
 3447 0066 08D1     		bne	.L151
 3448              		.loc 1 1637 0 is_stmt 0 discriminator 1
 3449 0068 FB68     		ldr	r3, [r7, #12]
 3450 006a 002B     		cmp	r3, #0
 3451 006c 05D0     		beq	.L151
1638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 3452              		.loc 1 1639 0 is_stmt 1
 3453 006e BB68     		ldr	r3, [r7, #8]
 3454 0070 0022     		movs	r2, #0
 3455 0072 DA85     		strh	r2, [r3, #46]	@ movhi
1640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 3456              		.loc 1 1640 0
 3457 0074 B868     		ldr	r0, [r7, #8]
 3458 0076 FFF7FEFF 		bl	UART_EndRxTransfer
 3459              	.L151:
1641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
 3460              		.loc 1 1643 0
 3461 007a BB68     		ldr	r3, [r7, #8]
 3462 007c DB6B     		ldr	r3, [r3, #60]
 3463 007e 43F01002 		orr	r2, r3, #16
 3464 0082 BB68     		ldr	r3, [r7, #8]
 3465 0084 DA63     		str	r2, [r3, #60]
1644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 3466              		.loc 1 1644 0
 3467 0086 B868     		ldr	r0, [r7, #8]
 3468 0088 FFF7FEFF 		bl	HAL_UART_ErrorCallback
1645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3469              		.loc 1 1645 0
 3470 008c 00BF     		nop
 3471 008e 1037     		adds	r7, r7, #16
 3472              	.LCFI186:
 3473              		.cfi_def_cfa_offset 8
 3474 0090 BD46     		mov	sp, r7
 3475              	.LCFI187:
 3476              		.cfi_def_cfa_register 13
 3477              		@ sp needed
 3478 0092 80BD     		pop	{r7, pc}
 3479              		.cfi_endproc
 3480              	.LFE159:
 3482              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 3483              		.align	2
 3484              		.thumb
 3485              		.thumb_func
 3487              	UART_WaitOnFlagUntilTimeout:
 3488              	.LFB160:
1646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccez0bZg.s 			page 90


1647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout.
1649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Flag: specifies the UART flag to check.
1652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Status: The new Flag status (SET or RESET).
1653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Tickstart Tick start value
1654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout: Timeout duration
1655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
1658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3489              		.loc 1 1658 0
 3490              		.cfi_startproc
 3491              		@ args = 4, pretend = 0, frame = 16
 3492              		@ frame_needed = 1, uses_anonymous_args = 0
 3493 0000 80B5     		push	{r7, lr}
 3494              	.LCFI188:
 3495              		.cfi_def_cfa_offset 8
 3496              		.cfi_offset 7, -8
 3497              		.cfi_offset 14, -4
 3498 0002 84B0     		sub	sp, sp, #16
 3499              	.LCFI189:
 3500              		.cfi_def_cfa_offset 24
 3501 0004 00AF     		add	r7, sp, #0
 3502              	.LCFI190:
 3503              		.cfi_def_cfa_register 7
 3504 0006 F860     		str	r0, [r7, #12]
 3505 0008 B960     		str	r1, [r7, #8]
 3506 000a 3B60     		str	r3, [r7]
 3507 000c 1346     		mov	r3, r2
 3508 000e FB71     		strb	r3, [r7, #7]
1659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Wait until flag is set */
1660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status) 
 3509              		.loc 1 1660 0
 3510 0010 2CE0     		b	.L153
 3511              	.L156:
1661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check for the Timeout */
1663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(Timeout != HAL_MAX_DELAY)
 3512              		.loc 1 1663 0
 3513 0012 BB69     		ldr	r3, [r7, #24]
 3514 0014 B3F1FF3F 		cmp	r3, #-1
 3515 0018 28D0     		beq	.L153
1664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if((Timeout == 0U)||((HAL_GetTick() - Tickstart ) > Timeout))
 3516              		.loc 1 1665 0
 3517 001a BB69     		ldr	r3, [r7, #24]
 3518 001c 002B     		cmp	r3, #0
 3519 001e 07D0     		beq	.L154
 3520              		.loc 1 1665 0 is_stmt 0 discriminator 1
 3521 0020 FFF7FEFF 		bl	HAL_GetTick
 3522 0024 0246     		mov	r2, r0
 3523 0026 3B68     		ldr	r3, [r7]
 3524 0028 D21A     		subs	r2, r2, r3
 3525 002a BB69     		ldr	r3, [r7, #24]
 3526 002c 9A42     		cmp	r2, r3
ARM GAS  /tmp/ccez0bZg.s 			page 91


 3527 002e 1DD9     		bls	.L153
 3528              	.L154:
1666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
1668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 3529              		.loc 1 1668 0 is_stmt 1
 3530 0030 FB68     		ldr	r3, [r7, #12]
 3531 0032 1B68     		ldr	r3, [r3]
 3532 0034 FA68     		ldr	r2, [r7, #12]
 3533 0036 1268     		ldr	r2, [r2]
 3534 0038 D268     		ldr	r2, [r2, #12]
 3535 003a 22F4D072 		bic	r2, r2, #416
 3536 003e DA60     		str	r2, [r3, #12]
1669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3537              		.loc 1 1669 0
 3538 0040 FB68     		ldr	r3, [r7, #12]
 3539 0042 1B68     		ldr	r3, [r3]
 3540 0044 FA68     		ldr	r2, [r7, #12]
 3541 0046 1268     		ldr	r2, [r2]
 3542 0048 5269     		ldr	r2, [r2, #20]
 3543 004a 22F00102 		bic	r2, r2, #1
 3544 004e 5A61     		str	r2, [r3, #20]
1670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
1671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->gState  = HAL_UART_STATE_READY;
 3545              		.loc 1 1671 0
 3546 0050 FB68     		ldr	r3, [r7, #12]
 3547 0052 2022     		movs	r2, #32
 3548 0054 83F83920 		strb	r2, [r3, #57]
1672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 3549              		.loc 1 1672 0
 3550 0058 FB68     		ldr	r3, [r7, #12]
 3551 005a 2022     		movs	r2, #32
 3552 005c 83F83A20 		strb	r2, [r3, #58]
1673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
1674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Process Unlocked */
1675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
 3553              		.loc 1 1675 0
 3554 0060 FB68     		ldr	r3, [r7, #12]
 3555 0062 0022     		movs	r2, #0
 3556 0064 83F83820 		strb	r2, [r3, #56]
1676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
1677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         return HAL_TIMEOUT;
 3557              		.loc 1 1677 0
 3558 0068 0323     		movs	r3, #3
 3559 006a 0FE0     		b	.L155
 3560              	.L153:
1660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3561              		.loc 1 1660 0
 3562 006c FB68     		ldr	r3, [r7, #12]
 3563 006e 1B68     		ldr	r3, [r3]
 3564 0070 1A68     		ldr	r2, [r3]
 3565 0072 BB68     		ldr	r3, [r7, #8]
 3566 0074 1A40     		ands	r2, r2, r3
 3567 0076 BB68     		ldr	r3, [r7, #8]
 3568 0078 9A42     		cmp	r2, r3
 3569 007a 0CBF     		ite	eq
 3570 007c 0123     		moveq	r3, #1
ARM GAS  /tmp/ccez0bZg.s 			page 92


 3571 007e 0023     		movne	r3, #0
 3572 0080 DBB2     		uxtb	r3, r3
 3573 0082 1A46     		mov	r2, r3
 3574 0084 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3575 0086 9A42     		cmp	r2, r3
 3576 0088 C3D0     		beq	.L156
1678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 3577              		.loc 1 1682 0
 3578 008a 0023     		movs	r3, #0
 3579              	.L155:
1683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3580              		.loc 1 1683 0
 3581 008c 1846     		mov	r0, r3
 3582 008e 1037     		adds	r7, r7, #16
 3583              	.LCFI191:
 3584              		.cfi_def_cfa_offset 8
 3585 0090 BD46     		mov	sp, r7
 3586              	.LCFI192:
 3587              		.cfi_def_cfa_register 13
 3588              		@ sp needed
 3589 0092 80BD     		pop	{r7, pc}
 3590              		.cfi_endproc
 3591              	.LFE160:
 3593              		.section	.text.UART_EndTxTransfer,"ax",%progbits
 3594              		.align	2
 3595              		.thumb
 3596              		.thumb_func
 3598              	UART_EndTxTransfer:
 3599              	.LFB161:
1684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
1687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: UART handle.
1688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
1691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3600              		.loc 1 1691 0
 3601              		.cfi_startproc
 3602              		@ args = 0, pretend = 0, frame = 8
 3603              		@ frame_needed = 1, uses_anonymous_args = 0
 3604              		@ link register save eliminated.
 3605 0000 80B4     		push	{r7}
 3606              	.LCFI193:
 3607              		.cfi_def_cfa_offset 4
 3608              		.cfi_offset 7, -4
 3609 0002 83B0     		sub	sp, sp, #12
 3610              	.LCFI194:
 3611              		.cfi_def_cfa_offset 16
 3612 0004 00AF     		add	r7, sp, #0
 3613              	.LCFI195:
 3614              		.cfi_def_cfa_register 7
 3615 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/ccez0bZg.s 			page 93


1692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 3616              		.loc 1 1693 0
 3617 0008 7B68     		ldr	r3, [r7, #4]
 3618 000a 1B68     		ldr	r3, [r3]
 3619 000c 7A68     		ldr	r2, [r7, #4]
 3620 000e 1268     		ldr	r2, [r2]
 3621 0010 D268     		ldr	r2, [r2, #12]
 3622 0012 22F0C002 		bic	r2, r2, #192
 3623 0016 DA60     		str	r2, [r3, #12]
1694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
1696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3624              		.loc 1 1696 0
 3625 0018 7B68     		ldr	r3, [r7, #4]
 3626 001a 2022     		movs	r2, #32
 3627 001c 83F83920 		strb	r2, [r3, #57]
1697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3628              		.loc 1 1697 0
 3629 0020 00BF     		nop
 3630 0022 0C37     		adds	r7, r7, #12
 3631              	.LCFI196:
 3632              		.cfi_def_cfa_offset 4
 3633 0024 BD46     		mov	sp, r7
 3634              	.LCFI197:
 3635              		.cfi_def_cfa_register 13
 3636              		@ sp needed
 3637 0026 5DF8047B 		ldr	r7, [sp], #4
 3638              	.LCFI198:
 3639              		.cfi_restore 7
 3640              		.cfi_def_cfa_offset 0
 3641 002a 7047     		bx	lr
 3642              		.cfi_endproc
 3643              	.LFE161:
 3645              		.section	.text.UART_EndRxTransfer,"ax",%progbits
 3646              		.align	2
 3647              		.thumb
 3648              		.thumb_func
 3650              	UART_EndRxTransfer:
 3651              	.LFB162:
1698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
1701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: UART handle.
1702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
1705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3652              		.loc 1 1705 0
 3653              		.cfi_startproc
 3654              		@ args = 0, pretend = 0, frame = 8
 3655              		@ frame_needed = 1, uses_anonymous_args = 0
 3656              		@ link register save eliminated.
 3657 0000 80B4     		push	{r7}
 3658              	.LCFI199:
 3659              		.cfi_def_cfa_offset 4
 3660              		.cfi_offset 7, -4
ARM GAS  /tmp/ccez0bZg.s 			page 94


 3661 0002 83B0     		sub	sp, sp, #12
 3662              	.LCFI200:
 3663              		.cfi_def_cfa_offset 16
 3664 0004 00AF     		add	r7, sp, #0
 3665              	.LCFI201:
 3666              		.cfi_def_cfa_register 7
 3667 0006 7860     		str	r0, [r7, #4]
1706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 3668              		.loc 1 1707 0
 3669 0008 7B68     		ldr	r3, [r7, #4]
 3670 000a 1B68     		ldr	r3, [r3]
 3671 000c 7A68     		ldr	r2, [r7, #4]
 3672 000e 1268     		ldr	r2, [r2]
 3673 0010 D268     		ldr	r2, [r2, #12]
 3674 0012 22F49072 		bic	r2, r2, #288
 3675 0016 DA60     		str	r2, [r3, #12]
1708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3676              		.loc 1 1708 0
 3677 0018 7B68     		ldr	r3, [r7, #4]
 3678 001a 1B68     		ldr	r3, [r3]
 3679 001c 7A68     		ldr	r2, [r7, #4]
 3680 001e 1268     		ldr	r2, [r2]
 3681 0020 5269     		ldr	r2, [r2, #20]
 3682 0022 22F00102 		bic	r2, r2, #1
 3683 0026 5A61     		str	r2, [r3, #20]
1709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
1711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3684              		.loc 1 1711 0
 3685 0028 7B68     		ldr	r3, [r7, #4]
 3686 002a 2022     		movs	r2, #32
 3687 002c 83F83A20 		strb	r2, [r3, #58]
1712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3688              		.loc 1 1712 0
 3689 0030 00BF     		nop
 3690 0032 0C37     		adds	r7, r7, #12
 3691              	.LCFI202:
 3692              		.cfi_def_cfa_offset 4
 3693 0034 BD46     		mov	sp, r7
 3694              	.LCFI203:
 3695              		.cfi_def_cfa_register 13
 3696              		@ sp needed
 3697 0036 5DF8047B 		ldr	r7, [sp], #4
 3698              	.LCFI204:
 3699              		.cfi_restore 7
 3700              		.cfi_def_cfa_offset 0
 3701 003a 7047     		bx	lr
 3702              		.cfi_endproc
 3703              	.LFE162:
 3705              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 3706              		.align	2
 3707              		.thumb
 3708              		.thumb_func
 3710              	UART_DMAAbortOnError:
 3711              	.LFB163:
1713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccez0bZg.s 			page 95


1714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
1716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
1717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma DMA handle.
1718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
1721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3712              		.loc 1 1721 0
 3713              		.cfi_startproc
 3714              		@ args = 0, pretend = 0, frame = 16
 3715              		@ frame_needed = 1, uses_anonymous_args = 0
 3716 0000 80B5     		push	{r7, lr}
 3717              	.LCFI205:
 3718              		.cfi_def_cfa_offset 8
 3719              		.cfi_offset 7, -8
 3720              		.cfi_offset 14, -4
 3721 0002 84B0     		sub	sp, sp, #16
 3722              	.LCFI206:
 3723              		.cfi_def_cfa_offset 24
 3724 0004 00AF     		add	r7, sp, #0
 3725              	.LCFI207:
 3726              		.cfi_def_cfa_register 7
 3727 0006 7860     		str	r0, [r7, #4]
1722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3728              		.loc 1 1722 0
 3729 0008 7B68     		ldr	r3, [r7, #4]
 3730 000a 9B6B     		ldr	r3, [r3, #56]
 3731 000c FB60     		str	r3, [r7, #12]
1723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0;
 3732              		.loc 1 1723 0
 3733 000e FB68     		ldr	r3, [r7, #12]
 3734 0010 0022     		movs	r2, #0
 3735 0012 DA85     		strh	r2, [r3, #46]	@ movhi
1724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0;
 3736              		.loc 1 1724 0
 3737 0014 FB68     		ldr	r3, [r7, #12]
 3738 0016 0022     		movs	r2, #0
 3739 0018 DA84     		strh	r2, [r3, #38]	@ movhi
1725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 3740              		.loc 1 1726 0
 3741 001a F868     		ldr	r0, [r7, #12]
 3742 001c FFF7FEFF 		bl	HAL_UART_ErrorCallback
1727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3743              		.loc 1 1727 0
 3744 0020 00BF     		nop
 3745 0022 1037     		adds	r7, r7, #16
 3746              	.LCFI208:
 3747              		.cfi_def_cfa_offset 8
 3748 0024 BD46     		mov	sp, r7
 3749              	.LCFI209:
 3750              		.cfi_def_cfa_register 13
 3751              		@ sp needed
 3752 0026 80BD     		pop	{r7, pc}
 3753              		.cfi_endproc
 3754              	.LFE163:
ARM GAS  /tmp/ccez0bZg.s 			page 96


 3756              		.section	.text.UART_Transmit_IT,"ax",%progbits
 3757              		.align	2
 3758              		.thumb
 3759              		.thumb_func
 3761              	UART_Transmit_IT:
 3762              	.LFB164:
1728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
1731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
1732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
1736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3763              		.loc 1 1736 0
 3764              		.cfi_startproc
 3765              		@ args = 0, pretend = 0, frame = 16
 3766              		@ frame_needed = 1, uses_anonymous_args = 0
 3767              		@ link register save eliminated.
 3768 0000 80B4     		push	{r7}
 3769              	.LCFI210:
 3770              		.cfi_def_cfa_offset 4
 3771              		.cfi_offset 7, -4
 3772 0002 85B0     		sub	sp, sp, #20
 3773              	.LCFI211:
 3774              		.cfi_def_cfa_offset 24
 3775 0004 00AF     		add	r7, sp, #0
 3776              	.LCFI212:
 3777              		.cfi_def_cfa_register 7
 3778 0006 7860     		str	r0, [r7, #4]
1737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
1738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
1740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
 3779              		.loc 1 1740 0
 3780 0008 7B68     		ldr	r3, [r7, #4]
 3781 000a 93F83930 		ldrb	r3, [r3, #57]
 3782 000e DBB2     		uxtb	r3, r3
 3783 0010 212B     		cmp	r3, #33
 3784 0012 43D1     		bne	.L161
1741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 3785              		.loc 1 1742 0
 3786 0014 7B68     		ldr	r3, [r7, #4]
 3787 0016 9B68     		ldr	r3, [r3, #8]
 3788 0018 B3F5805F 		cmp	r3, #4096
 3789 001c 19D1     		bne	.L162
1743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       tmp = (uint16_t*) huart->pTxBuffPtr;
 3790              		.loc 1 1744 0
 3791 001e 7B68     		ldr	r3, [r7, #4]
 3792 0020 1B6A     		ldr	r3, [r3, #32]
 3793 0022 FB60     		str	r3, [r7, #12]
1745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FFU);
 3794              		.loc 1 1745 0
 3795 0024 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccez0bZg.s 			page 97


 3796 0026 1B68     		ldr	r3, [r3]
 3797 0028 FA68     		ldr	r2, [r7, #12]
 3798 002a 1288     		ldrh	r2, [r2]
 3799 002c C2F30802 		ubfx	r2, r2, #0, #9
 3800 0030 5A60     		str	r2, [r3, #4]
1746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
 3801              		.loc 1 1746 0
 3802 0032 7B68     		ldr	r3, [r7, #4]
 3803 0034 1B69     		ldr	r3, [r3, #16]
 3804 0036 002B     		cmp	r3, #0
 3805 0038 05D1     		bne	.L163
1747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 3806              		.loc 1 1748 0
 3807 003a 7B68     		ldr	r3, [r7, #4]
 3808 003c 1B6A     		ldr	r3, [r3, #32]
 3809 003e 9A1C     		adds	r2, r3, #2
 3810 0040 7B68     		ldr	r3, [r7, #4]
 3811 0042 1A62     		str	r2, [r3, #32]
 3812 0044 0EE0     		b	.L165
 3813              	.L163:
1749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pTxBuffPtr += 1U;
 3814              		.loc 1 1752 0
 3815 0046 7B68     		ldr	r3, [r7, #4]
 3816 0048 1B6A     		ldr	r3, [r3, #32]
 3817 004a 5A1C     		adds	r2, r3, #1
 3818 004c 7B68     		ldr	r3, [r7, #4]
 3819 004e 1A62     		str	r2, [r3, #32]
 3820 0050 08E0     		b	.L165
 3821              	.L162:
1753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     } 
1755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FFU);
 3822              		.loc 1 1757 0
 3823 0052 7B68     		ldr	r3, [r7, #4]
 3824 0054 1A68     		ldr	r2, [r3]
 3825 0056 7B68     		ldr	r3, [r7, #4]
 3826 0058 1B6A     		ldr	r3, [r3, #32]
 3827 005a 581C     		adds	r0, r3, #1
 3828 005c 7968     		ldr	r1, [r7, #4]
 3829 005e 0862     		str	r0, [r1, #32]
 3830 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3831 0062 5360     		str	r3, [r2, #4]
 3832              	.L165:
1758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(--huart->TxXferCount == 0U)
 3833              		.loc 1 1760 0
 3834 0064 7B68     		ldr	r3, [r7, #4]
 3835 0066 DB8C     		ldrh	r3, [r3, #38]	@ movhi
 3836 0068 9BB2     		uxth	r3, r3
 3837 006a 013B     		subs	r3, r3, #1
ARM GAS  /tmp/ccez0bZg.s 			page 98


 3838 006c 9BB2     		uxth	r3, r3
 3839 006e 7A68     		ldr	r2, [r7, #4]
 3840 0070 1946     		mov	r1, r3	@ movhi
 3841 0072 D184     		strh	r1, [r2, #38]	@ movhi
 3842 0074 002B     		cmp	r3, #0
 3843 0076 0FD1     		bne	.L166
1761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Transmit Complete Interrupt */
1763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 3844              		.loc 1 1763 0
 3845 0078 7B68     		ldr	r3, [r7, #4]
 3846 007a 1B68     		ldr	r3, [r3]
 3847 007c 7A68     		ldr	r2, [r7, #4]
 3848 007e 1268     		ldr	r2, [r2]
 3849 0080 D268     		ldr	r2, [r2, #12]
 3850 0082 22F08002 		bic	r2, r2, #128
 3851 0086 DA60     		str	r2, [r3, #12]
1764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */    
1766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 3852              		.loc 1 1766 0
 3853 0088 7B68     		ldr	r3, [r7, #4]
 3854 008a 1B68     		ldr	r3, [r3]
 3855 008c 7A68     		ldr	r2, [r7, #4]
 3856 008e 1268     		ldr	r2, [r2]
 3857 0090 D268     		ldr	r2, [r2, #12]
 3858 0092 42F04002 		orr	r2, r2, #64
 3859 0096 DA60     		str	r2, [r3, #12]
 3860              	.L166:
1767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 3861              		.loc 1 1768 0
 3862 0098 0023     		movs	r3, #0
 3863 009a 00E0     		b	.L167
 3864              	.L161:
1769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 3865              		.loc 1 1772 0
 3866 009c 0223     		movs	r3, #2
 3867              	.L167:
1773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3868              		.loc 1 1774 0
 3869 009e 1846     		mov	r0, r3
 3870 00a0 1437     		adds	r7, r7, #20
 3871              	.LCFI213:
 3872              		.cfi_def_cfa_offset 4
 3873 00a2 BD46     		mov	sp, r7
 3874              	.LCFI214:
 3875              		.cfi_def_cfa_register 13
 3876              		@ sp needed
 3877 00a4 5DF8047B 		ldr	r7, [sp], #4
 3878              	.LCFI215:
 3879              		.cfi_restore 7
 3880              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccez0bZg.s 			page 99


 3881 00a8 7047     		bx	lr
 3882              		.cfi_endproc
 3883              	.LFE164:
 3885 00aa 00BF     		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 3886              		.align	2
 3887              		.thumb
 3888              		.thumb_func
 3890              	UART_EndTransmit_IT:
 3891              	.LFB165:
1775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Wraps up transmission in non blocking mode.
1778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
1783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3892              		.loc 1 1783 0
 3893              		.cfi_startproc
 3894              		@ args = 0, pretend = 0, frame = 8
 3895              		@ frame_needed = 1, uses_anonymous_args = 0
 3896 0000 80B5     		push	{r7, lr}
 3897              	.LCFI216:
 3898              		.cfi_def_cfa_offset 8
 3899              		.cfi_offset 7, -8
 3900              		.cfi_offset 14, -4
 3901 0002 82B0     		sub	sp, sp, #8
 3902              	.LCFI217:
 3903              		.cfi_def_cfa_offset 16
 3904 0004 00AF     		add	r7, sp, #0
 3905              	.LCFI218:
 3906              		.cfi_def_cfa_register 7
 3907 0006 7860     		str	r0, [r7, #4]
1784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */    
1785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 3908              		.loc 1 1785 0
 3909 0008 7B68     		ldr	r3, [r7, #4]
 3910 000a 1B68     		ldr	r3, [r3]
 3911 000c 7A68     		ldr	r2, [r7, #4]
 3912 000e 1268     		ldr	r2, [r2]
 3913 0010 D268     		ldr	r2, [r2, #12]
 3914 0012 22F04002 		bic	r2, r2, #64
 3915 0016 DA60     		str	r2, [r3, #12]
1786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
1788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3916              		.loc 1 1788 0
 3917 0018 7B68     		ldr	r3, [r7, #4]
 3918 001a 2022     		movs	r2, #32
 3919 001c 83F83920 		strb	r2, [r3, #57]
1789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 3920              		.loc 1 1790 0
 3921 0020 7868     		ldr	r0, [r7, #4]
 3922 0022 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
1791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
ARM GAS  /tmp/ccez0bZg.s 			page 100


1792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 3923              		.loc 1 1792 0
 3924 0026 0023     		movs	r3, #0
1793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3925              		.loc 1 1793 0
 3926 0028 1846     		mov	r0, r3
 3927 002a 0837     		adds	r7, r7, #8
 3928              	.LCFI219:
 3929              		.cfi_def_cfa_offset 8
 3930 002c BD46     		mov	sp, r7
 3931              	.LCFI220:
 3932              		.cfi_def_cfa_register 13
 3933              		@ sp needed
 3934 002e 80BD     		pop	{r7, pc}
 3935              		.cfi_endproc
 3936              	.LFE165:
 3938              		.section	.text.UART_Receive_IT,"ax",%progbits
 3939              		.align	2
 3940              		.thumb
 3941              		.thumb_func
 3943              	UART_Receive_IT:
 3944              	.LFB166:
1794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode 
1797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
1802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3945              		.loc 1 1802 0
 3946              		.cfi_startproc
 3947              		@ args = 0, pretend = 0, frame = 16
 3948              		@ frame_needed = 1, uses_anonymous_args = 0
 3949 0000 80B5     		push	{r7, lr}
 3950              	.LCFI221:
 3951              		.cfi_def_cfa_offset 8
 3952              		.cfi_offset 7, -8
 3953              		.cfi_offset 14, -4
 3954 0002 84B0     		sub	sp, sp, #16
 3955              	.LCFI222:
 3956              		.cfi_def_cfa_offset 24
 3957 0004 00AF     		add	r7, sp, #0
 3958              	.LCFI223:
 3959              		.cfi_def_cfa_register 7
 3960 0006 7860     		str	r0, [r7, #4]
1803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
1804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
1806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX) 
 3961              		.loc 1 1806 0
 3962 0008 7B68     		ldr	r3, [r7, #4]
 3963 000a 93F83A30 		ldrb	r3, [r3, #58]
 3964 000e DBB2     		uxtb	r3, r3
 3965 0010 222B     		cmp	r3, #34
 3966 0012 69D1     		bne	.L171
ARM GAS  /tmp/ccez0bZg.s 			page 101


1807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 3967              		.loc 1 1808 0
 3968 0014 7B68     		ldr	r3, [r7, #4]
 3969 0016 9B68     		ldr	r3, [r3, #8]
 3970 0018 B3F5805F 		cmp	r3, #4096
 3971 001c 23D1     		bne	.L172
1809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       tmp = (uint16_t*) huart->pRxBuffPtr;
 3972              		.loc 1 1810 0
 3973 001e 7B68     		ldr	r3, [r7, #4]
 3974 0020 9B6A     		ldr	r3, [r3, #40]
 3975 0022 FB60     		str	r3, [r7, #12]
1811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
 3976              		.loc 1 1811 0
 3977 0024 7B68     		ldr	r3, [r7, #4]
 3978 0026 1B69     		ldr	r3, [r3, #16]
 3979 0028 002B     		cmp	r3, #0
 3980 002a 0ED1     		bne	.L173
1812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FFU);
 3981              		.loc 1 1813 0
 3982 002c 7B68     		ldr	r3, [r7, #4]
 3983 002e 1B68     		ldr	r3, [r3]
 3984 0030 5B68     		ldr	r3, [r3, #4]
 3985 0032 9BB2     		uxth	r3, r3
 3986 0034 C3F30803 		ubfx	r3, r3, #0, #9
 3987 0038 9AB2     		uxth	r2, r3
 3988 003a FB68     		ldr	r3, [r7, #12]
 3989 003c 1A80     		strh	r2, [r3]	@ movhi
1814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 2U;
 3990              		.loc 1 1814 0
 3991 003e 7B68     		ldr	r3, [r7, #4]
 3992 0040 9B6A     		ldr	r3, [r3, #40]
 3993 0042 9A1C     		adds	r2, r3, #2
 3994 0044 7B68     		ldr	r3, [r7, #4]
 3995 0046 9A62     		str	r2, [r3, #40]
 3996 0048 29E0     		b	.L175
 3997              	.L173:
1815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FFU);
 3998              		.loc 1 1818 0
 3999 004a 7B68     		ldr	r3, [r7, #4]
 4000 004c 1B68     		ldr	r3, [r3]
 4001 004e 5B68     		ldr	r3, [r3, #4]
 4002 0050 9BB2     		uxth	r3, r3
 4003 0052 DBB2     		uxtb	r3, r3
 4004 0054 9AB2     		uxth	r2, r3
 4005 0056 FB68     		ldr	r3, [r7, #12]
 4006 0058 1A80     		strh	r2, [r3]	@ movhi
1819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 1U;
 4007              		.loc 1 1819 0
 4008 005a 7B68     		ldr	r3, [r7, #4]
 4009 005c 9B6A     		ldr	r3, [r3, #40]
 4010 005e 5A1C     		adds	r2, r3, #1
ARM GAS  /tmp/ccez0bZg.s 			page 102


 4011 0060 7B68     		ldr	r3, [r7, #4]
 4012 0062 9A62     		str	r2, [r3, #40]
 4013 0064 1BE0     		b	.L175
 4014              	.L172:
1820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
 4015              		.loc 1 1824 0
 4016 0066 7B68     		ldr	r3, [r7, #4]
 4017 0068 1B69     		ldr	r3, [r3, #16]
 4018 006a 002B     		cmp	r3, #0
 4019 006c 0AD1     		bne	.L176
1825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FFU);
 4020              		.loc 1 1826 0
 4021 006e 7B68     		ldr	r3, [r7, #4]
 4022 0070 9B6A     		ldr	r3, [r3, #40]
 4023 0072 591C     		adds	r1, r3, #1
 4024 0074 7A68     		ldr	r2, [r7, #4]
 4025 0076 9162     		str	r1, [r2, #40]
 4026 0078 7A68     		ldr	r2, [r7, #4]
 4027 007a 1268     		ldr	r2, [r2]
 4028 007c 5268     		ldr	r2, [r2, #4]
 4029 007e D2B2     		uxtb	r2, r2
 4030 0080 1A70     		strb	r2, [r3]
 4031 0082 0CE0     		b	.L175
 4032              	.L176:
1827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007FU);
 4033              		.loc 1 1830 0
 4034 0084 7B68     		ldr	r3, [r7, #4]
 4035 0086 9B6A     		ldr	r3, [r3, #40]
 4036 0088 591C     		adds	r1, r3, #1
 4037 008a 7A68     		ldr	r2, [r7, #4]
 4038 008c 9162     		str	r1, [r2, #40]
 4039 008e 7A68     		ldr	r2, [r7, #4]
 4040 0090 1268     		ldr	r2, [r2]
 4041 0092 5268     		ldr	r2, [r2, #4]
 4042 0094 D2B2     		uxtb	r2, r2
 4043 0096 02F07F02 		and	r2, r2, #127
 4044 009a D2B2     		uxtb	r2, r2
 4045 009c 1A70     		strb	r2, [r3]
 4046              	.L175:
1831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(--huart->RxXferCount == 0U)
 4047              		.loc 1 1834 0
 4048 009e 7B68     		ldr	r3, [r7, #4]
 4049 00a0 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 4050 00a2 9BB2     		uxth	r3, r3
 4051 00a4 013B     		subs	r3, r3, #1
 4052 00a6 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccez0bZg.s 			page 103


 4053 00a8 7A68     		ldr	r2, [r7, #4]
 4054 00aa 1946     		mov	r1, r3	@ movhi
 4055 00ac D185     		strh	r1, [r2, #46]	@ movhi
 4056 00ae 002B     		cmp	r3, #0
 4057 00b0 18D1     		bne	.L177
1835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
1837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 4058              		.loc 1 1837 0
 4059 00b2 7B68     		ldr	r3, [r7, #4]
 4060 00b4 1B68     		ldr	r3, [r3]
 4061 00b6 7A68     		ldr	r2, [r7, #4]
 4062 00b8 1268     		ldr	r2, [r2]
 4063 00ba D268     		ldr	r2, [r2, #12]
 4064 00bc 22F49072 		bic	r2, r2, #288
 4065 00c0 DA60     		str	r2, [r3, #12]
1838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4066              		.loc 1 1840 0
 4067 00c2 7B68     		ldr	r3, [r7, #4]
 4068 00c4 1B68     		ldr	r3, [r3]
 4069 00c6 7A68     		ldr	r2, [r7, #4]
 4070 00c8 1268     		ldr	r2, [r2]
 4071 00ca 5269     		ldr	r2, [r2, #20]
 4072 00cc 22F00102 		bic	r2, r2, #1
 4073 00d0 5A61     		str	r2, [r3, #20]
1841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
1843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 4074              		.loc 1 1843 0
 4075 00d2 7B68     		ldr	r3, [r7, #4]
 4076 00d4 2022     		movs	r2, #32
 4077 00d6 83F83A20 		strb	r2, [r3, #58]
1844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      
1845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
 4078              		.loc 1 1845 0
 4079 00da 7868     		ldr	r0, [r7, #4]
 4080 00dc FFF7FEFF 		bl	HAL_UART_RxCpltCallback
1846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_OK;
 4081              		.loc 1 1847 0
 4082 00e0 0023     		movs	r3, #0
 4083 00e2 02E0     		b	.L178
 4084              	.L177:
1848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 4085              		.loc 1 1849 0
 4086 00e4 0023     		movs	r3, #0
 4087 00e6 00E0     		b	.L178
 4088              	.L171:
1850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 4089              		.loc 1 1853 0
 4090 00e8 0223     		movs	r3, #2
ARM GAS  /tmp/ccez0bZg.s 			page 104


 4091              	.L178:
1854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4092              		.loc 1 1855 0
 4093 00ea 1846     		mov	r0, r3
 4094 00ec 1037     		adds	r7, r7, #16
 4095              	.LCFI224:
 4096              		.cfi_def_cfa_offset 8
 4097 00ee BD46     		mov	sp, r7
 4098              	.LCFI225:
 4099              		.cfi_def_cfa_register 13
 4100              		@ sp needed
 4101 00f0 80BD     		pop	{r7, pc}
 4102              		.cfi_endproc
 4103              	.LFE166:
 4105 00f2 00BF     		.section	.text.UART_SetConfig,"ax",%progbits
 4106              		.align	2
 4107              		.thumb
 4108              		.thumb_func
 4110              	UART_SetConfig:
 4111              	.LFB167:
1856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Configures the UART peripheral. 
1859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart)
1864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4112              		.loc 1 1864 0
 4113              		.cfi_startproc
 4114              		@ args = 0, pretend = 0, frame = 16
 4115              		@ frame_needed = 1, uses_anonymous_args = 0
 4116 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4117              	.LCFI226:
 4118              		.cfi_def_cfa_offset 20
 4119              		.cfi_offset 4, -20
 4120              		.cfi_offset 5, -16
 4121              		.cfi_offset 6, -12
 4122              		.cfi_offset 7, -8
 4123              		.cfi_offset 14, -4
 4124 0002 85B0     		sub	sp, sp, #20
 4125              	.LCFI227:
 4126              		.cfi_def_cfa_offset 40
 4127 0004 00AF     		add	r7, sp, #0
 4128              	.LCFI228:
 4129              		.cfi_def_cfa_register 7
 4130 0006 7860     		str	r0, [r7, #4]
1865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 4131              		.loc 1 1865 0
 4132 0008 0023     		movs	r3, #0
 4133 000a FB60     		str	r3, [r7, #12]
1866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
1868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
1869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
ARM GAS  /tmp/ccez0bZg.s 			page 105


1870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
1871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
1872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
1874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR2;
 4134              		.loc 1 1874 0
 4135 000c 7B68     		ldr	r3, [r7, #4]
 4136 000e 1B68     		ldr	r3, [r3]
 4137 0010 1B69     		ldr	r3, [r3, #16]
 4138 0012 FB60     		str	r3, [r7, #12]
1875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear STOP[13:12] bits */
1877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)USART_CR2_STOP);
 4139              		.loc 1 1877 0
 4140 0014 FB68     		ldr	r3, [r7, #12]
 4141 0016 23F44053 		bic	r3, r3, #12288
 4142 001a FB60     		str	r3, [r7, #12]
1878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according to huart->Init.StopBits value */
1880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->Init.StopBits;
 4143              		.loc 1 1880 0
 4144 001c 7B68     		ldr	r3, [r7, #4]
 4145 001e DB68     		ldr	r3, [r3, #12]
 4146 0020 FA68     		ldr	r2, [r7, #12]
 4147 0022 1343     		orrs	r3, r3, r2
 4148 0024 FB60     		str	r3, [r7, #12]
1881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR2 */
1883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR2, (uint32_t)tmpreg);
 4149              		.loc 1 1883 0
 4150 0026 7B68     		ldr	r3, [r7, #4]
 4151 0028 1B68     		ldr	r3, [r3]
 4152 002a FA68     		ldr	r2, [r7, #12]
 4153 002c 1A61     		str	r2, [r3, #16]
1884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
1886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
 4154              		.loc 1 1886 0
 4155 002e 7B68     		ldr	r3, [r7, #4]
 4156 0030 1B68     		ldr	r3, [r3]
 4157 0032 DB68     		ldr	r3, [r3, #12]
 4158 0034 FB60     		str	r3, [r7, #12]
1887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear M, PCE, PS, TE and RE bits */
1889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | \
 4159              		.loc 1 1889 0
 4160 0036 FB68     		ldr	r3, [r7, #12]
 4161 0038 23F41643 		bic	r3, r3, #38400
 4162 003c 23F00C03 		bic	r3, r3, #12
 4163 0040 FB60     		str	r3, [r7, #12]
1890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                    USART_CR1_RE | USART_CR1_OVER8));
1891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART Word Length, Parity and mode: 
1893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set the M bits according to huart->Init.WordLength value 
1894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set PCE and PS bits according to huart->Init.Parity value
1895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set TE and RE bits according to huart->Init.Mode value
1896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set OVER8 bit according to huart->Init.OverSampling value */
ARM GAS  /tmp/ccez0bZg.s 			page 106


1897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.
 4164              		.loc 1 1897 0
 4165 0042 7B68     		ldr	r3, [r7, #4]
 4166 0044 9A68     		ldr	r2, [r3, #8]
 4167 0046 7B68     		ldr	r3, [r7, #4]
 4168 0048 1B69     		ldr	r3, [r3, #16]
 4169 004a 1A43     		orrs	r2, r2, r3
 4170 004c 7B68     		ldr	r3, [r7, #4]
 4171 004e 5B69     		ldr	r3, [r3, #20]
 4172 0050 1A43     		orrs	r2, r2, r3
 4173 0052 7B68     		ldr	r3, [r7, #4]
 4174 0054 DB69     		ldr	r3, [r3, #28]
 4175 0056 1343     		orrs	r3, r3, r2
 4176 0058 FA68     		ldr	r2, [r7, #12]
 4177 005a 1343     		orrs	r3, r3, r2
 4178 005c FB60     		str	r3, [r7, #12]
1898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
1900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
 4179              		.loc 1 1900 0
 4180 005e 7B68     		ldr	r3, [r7, #4]
 4181 0060 1B68     		ldr	r3, [r3]
 4182 0062 FA68     		ldr	r2, [r7, #12]
 4183 0064 DA60     		str	r2, [r3, #12]
1901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/  
1903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR3;
 4184              		.loc 1 1903 0
 4185 0066 7B68     		ldr	r3, [r7, #4]
 4186 0068 1B68     		ldr	r3, [r3]
 4187 006a 5B69     		ldr	r3, [r3, #20]
 4188 006c FB60     		str	r3, [r7, #12]
1904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear CTSE and RTSE bits */
1906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE));
 4189              		.loc 1 1906 0
 4190 006e FB68     		ldr	r3, [r7, #12]
 4191 0070 23F44073 		bic	r3, r3, #768
 4192 0074 FB60     		str	r3, [r7, #12]
1907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
1909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= huart->Init.HwFlowCtl;
 4193              		.loc 1 1909 0
 4194 0076 7B68     		ldr	r3, [r7, #4]
 4195 0078 9B69     		ldr	r3, [r3, #24]
 4196 007a FA68     		ldr	r2, [r7, #12]
 4197 007c 1343     		orrs	r3, r3, r2
 4198 007e FB60     		str	r3, [r7, #12]
1910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR3 */
1912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR3, (uint32_t)tmpreg);
 4199              		.loc 1 1912 0
 4200 0080 7B68     		ldr	r3, [r7, #4]
 4201 0082 1B68     		ldr	r3, [r3]
 4202 0084 FA68     		ldr	r2, [r7, #12]
 4203 0086 5A61     		str	r2, [r3, #20]
1913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
ARM GAS  /tmp/ccez0bZg.s 			page 107


1914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the Over Sampling */
1915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->Init.OverSampling == UART_OVERSAMPLING_8)
 4204              		.loc 1 1915 0
 4205 0088 7B68     		ldr	r3, [r7, #4]
 4206 008a DB69     		ldr	r3, [r3, #28]
 4207 008c B3F5004F 		cmp	r3, #32768
 4208 0090 40F0E480 		bne	.L180
1916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*-------------------------- USART BRR Configuration ---------------------*/
1918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((huart->Instance == USART1) || (huart->Instance == USART6))
 4209              		.loc 1 1918 0
 4210 0094 7B68     		ldr	r3, [r7, #4]
 4211 0096 1B68     		ldr	r3, [r3]
 4212 0098 AB4A     		ldr	r2, .L188
 4213 009a 9342     		cmp	r3, r2
 4214 009c 04D0     		beq	.L181
 4215              		.loc 1 1918 0 is_stmt 0 discriminator 1
 4216 009e 7B68     		ldr	r3, [r7, #4]
 4217 00a0 1B68     		ldr	r3, [r3]
 4218 00a2 AA4A     		ldr	r2, .L188+4
 4219 00a4 9342     		cmp	r3, r2
 4220 00a6 6CD1     		bne	.L182
 4221              	.L181:
1919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
 4222              		.loc 1 1920 0 is_stmt 1
 4223 00a8 7B68     		ldr	r3, [r7, #4]
 4224 00aa 1C68     		ldr	r4, [r3]
 4225 00ac FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 4226 00b0 0246     		mov	r2, r0
 4227 00b2 1346     		mov	r3, r2
 4228 00b4 9B00     		lsls	r3, r3, #2
 4229 00b6 1344     		add	r3, r3, r2
 4230 00b8 9A00     		lsls	r2, r3, #2
 4231 00ba 1A44     		add	r2, r2, r3
 4232 00bc 7B68     		ldr	r3, [r7, #4]
 4233 00be 5B68     		ldr	r3, [r3, #4]
 4234 00c0 5B00     		lsls	r3, r3, #1
 4235 00c2 B2FBF3F3 		udiv	r3, r2, r3
 4236 00c6 A24A     		ldr	r2, .L188+8
 4237 00c8 A2FB0323 		umull	r2, r3, r2, r3
 4238 00cc 5B09     		lsrs	r3, r3, #5
 4239 00ce 1D01     		lsls	r5, r3, #4
 4240 00d0 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 4241 00d4 0246     		mov	r2, r0
 4242 00d6 1346     		mov	r3, r2
 4243 00d8 9B00     		lsls	r3, r3, #2
 4244 00da 1344     		add	r3, r3, r2
 4245 00dc 9A00     		lsls	r2, r3, #2
 4246 00de 1A44     		add	r2, r2, r3
 4247 00e0 7B68     		ldr	r3, [r7, #4]
 4248 00e2 5B68     		ldr	r3, [r3, #4]
 4249 00e4 5B00     		lsls	r3, r3, #1
 4250 00e6 B2FBF3F6 		udiv	r6, r2, r3
 4251 00ea FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 4252 00ee 0246     		mov	r2, r0
 4253 00f0 1346     		mov	r3, r2
ARM GAS  /tmp/ccez0bZg.s 			page 108


 4254 00f2 9B00     		lsls	r3, r3, #2
 4255 00f4 1344     		add	r3, r3, r2
 4256 00f6 9A00     		lsls	r2, r3, #2
 4257 00f8 1A44     		add	r2, r2, r3
 4258 00fa 7B68     		ldr	r3, [r7, #4]
 4259 00fc 5B68     		ldr	r3, [r3, #4]
 4260 00fe 5B00     		lsls	r3, r3, #1
 4261 0100 B2FBF3F3 		udiv	r3, r2, r3
 4262 0104 924A     		ldr	r2, .L188+8
 4263 0106 A2FB0323 		umull	r2, r3, r2, r3
 4264 010a 5B09     		lsrs	r3, r3, #5
 4265 010c 6422     		movs	r2, #100
 4266 010e 02FB03F3 		mul	r3, r2, r3
 4267 0112 F31A     		subs	r3, r6, r3
 4268 0114 DB00     		lsls	r3, r3, #3
 4269 0116 3233     		adds	r3, r3, #50
 4270 0118 8D4A     		ldr	r2, .L188+8
 4271 011a A2FB0323 		umull	r2, r3, r2, r3
 4272 011e 5B09     		lsrs	r3, r3, #5
 4273 0120 03F0F803 		and	r3, r3, #248
 4274 0124 5B00     		lsls	r3, r3, #1
 4275 0126 1D44     		add	r5, r5, r3
 4276 0128 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 4277 012c 0246     		mov	r2, r0
 4278 012e 1346     		mov	r3, r2
 4279 0130 9B00     		lsls	r3, r3, #2
 4280 0132 1344     		add	r3, r3, r2
 4281 0134 9A00     		lsls	r2, r3, #2
 4282 0136 1A44     		add	r2, r2, r3
 4283 0138 7B68     		ldr	r3, [r7, #4]
 4284 013a 5B68     		ldr	r3, [r3, #4]
 4285 013c 5B00     		lsls	r3, r3, #1
 4286 013e B2FBF3F6 		udiv	r6, r2, r3
 4287 0142 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 4288 0146 0246     		mov	r2, r0
 4289 0148 1346     		mov	r3, r2
 4290 014a 9B00     		lsls	r3, r3, #2
 4291 014c 1344     		add	r3, r3, r2
 4292 014e 9A00     		lsls	r2, r3, #2
 4293 0150 1A44     		add	r2, r2, r3
 4294 0152 7B68     		ldr	r3, [r7, #4]
 4295 0154 5B68     		ldr	r3, [r3, #4]
 4296 0156 5B00     		lsls	r3, r3, #1
 4297 0158 B2FBF3F3 		udiv	r3, r2, r3
 4298 015c 7C4A     		ldr	r2, .L188+8
 4299 015e A2FB0323 		umull	r2, r3, r2, r3
 4300 0162 5B09     		lsrs	r3, r3, #5
 4301 0164 6422     		movs	r2, #100
 4302 0166 02FB03F3 		mul	r3, r2, r3
 4303 016a F31A     		subs	r3, r6, r3
 4304 016c DB00     		lsls	r3, r3, #3
 4305 016e 3233     		adds	r3, r3, #50
 4306 0170 774A     		ldr	r2, .L188+8
 4307 0172 A2FB0323 		umull	r2, r3, r2, r3
 4308 0176 5B09     		lsrs	r3, r3, #5
 4309 0178 03F00703 		and	r3, r3, #7
 4310 017c 2B44     		add	r3, r3, r5
ARM GAS  /tmp/ccez0bZg.s 			page 109


 4311 017e A360     		str	r3, [r4, #8]
 4312 0180 54E1     		b	.L184
 4313              	.L182:
1921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 4314              		.loc 1 1924 0
 4315 0182 7B68     		ldr	r3, [r7, #4]
 4316 0184 1C68     		ldr	r4, [r3]
 4317 0186 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4318 018a 0246     		mov	r2, r0
 4319 018c 1346     		mov	r3, r2
 4320 018e 9B00     		lsls	r3, r3, #2
 4321 0190 1344     		add	r3, r3, r2
 4322 0192 9A00     		lsls	r2, r3, #2
 4323 0194 1A44     		add	r2, r2, r3
 4324 0196 7B68     		ldr	r3, [r7, #4]
 4325 0198 5B68     		ldr	r3, [r3, #4]
 4326 019a 5B00     		lsls	r3, r3, #1
 4327 019c B2FBF3F3 		udiv	r3, r2, r3
 4328 01a0 6B4A     		ldr	r2, .L188+8
 4329 01a2 A2FB0323 		umull	r2, r3, r2, r3
 4330 01a6 5B09     		lsrs	r3, r3, #5
 4331 01a8 1D01     		lsls	r5, r3, #4
 4332 01aa FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4333 01ae 0246     		mov	r2, r0
 4334 01b0 1346     		mov	r3, r2
 4335 01b2 9B00     		lsls	r3, r3, #2
 4336 01b4 1344     		add	r3, r3, r2
 4337 01b6 9A00     		lsls	r2, r3, #2
 4338 01b8 1A44     		add	r2, r2, r3
 4339 01ba 7B68     		ldr	r3, [r7, #4]
 4340 01bc 5B68     		ldr	r3, [r3, #4]
 4341 01be 5B00     		lsls	r3, r3, #1
 4342 01c0 B2FBF3F6 		udiv	r6, r2, r3
 4343 01c4 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4344 01c8 0246     		mov	r2, r0
 4345 01ca 1346     		mov	r3, r2
 4346 01cc 9B00     		lsls	r3, r3, #2
 4347 01ce 1344     		add	r3, r3, r2
 4348 01d0 9A00     		lsls	r2, r3, #2
 4349 01d2 1A44     		add	r2, r2, r3
 4350 01d4 7B68     		ldr	r3, [r7, #4]
 4351 01d6 5B68     		ldr	r3, [r3, #4]
 4352 01d8 5B00     		lsls	r3, r3, #1
 4353 01da B2FBF3F3 		udiv	r3, r2, r3
 4354 01de 5C4A     		ldr	r2, .L188+8
 4355 01e0 A2FB0323 		umull	r2, r3, r2, r3
 4356 01e4 5B09     		lsrs	r3, r3, #5
 4357 01e6 6422     		movs	r2, #100
 4358 01e8 02FB03F3 		mul	r3, r2, r3
 4359 01ec F31A     		subs	r3, r6, r3
 4360 01ee DB00     		lsls	r3, r3, #3
 4361 01f0 3233     		adds	r3, r3, #50
 4362 01f2 574A     		ldr	r2, .L188+8
 4363 01f4 A2FB0323 		umull	r2, r3, r2, r3
ARM GAS  /tmp/ccez0bZg.s 			page 110


 4364 01f8 5B09     		lsrs	r3, r3, #5
 4365 01fa 03F0F803 		and	r3, r3, #248
 4366 01fe 5B00     		lsls	r3, r3, #1
 4367 0200 1D44     		add	r5, r5, r3
 4368 0202 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4369 0206 0246     		mov	r2, r0
 4370 0208 1346     		mov	r3, r2
 4371 020a 9B00     		lsls	r3, r3, #2
 4372 020c 1344     		add	r3, r3, r2
 4373 020e 9A00     		lsls	r2, r3, #2
 4374 0210 1A44     		add	r2, r2, r3
 4375 0212 7B68     		ldr	r3, [r7, #4]
 4376 0214 5B68     		ldr	r3, [r3, #4]
 4377 0216 5B00     		lsls	r3, r3, #1
 4378 0218 B2FBF3F6 		udiv	r6, r2, r3
 4379 021c FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4380 0220 0246     		mov	r2, r0
 4381 0222 1346     		mov	r3, r2
 4382 0224 9B00     		lsls	r3, r3, #2
 4383 0226 1344     		add	r3, r3, r2
 4384 0228 9A00     		lsls	r2, r3, #2
 4385 022a 1A44     		add	r2, r2, r3
 4386 022c 7B68     		ldr	r3, [r7, #4]
 4387 022e 5B68     		ldr	r3, [r3, #4]
 4388 0230 5B00     		lsls	r3, r3, #1
 4389 0232 B2FBF3F3 		udiv	r3, r2, r3
 4390 0236 464A     		ldr	r2, .L188+8
 4391 0238 A2FB0323 		umull	r2, r3, r2, r3
 4392 023c 5B09     		lsrs	r3, r3, #5
 4393 023e 6422     		movs	r2, #100
 4394 0240 02FB03F3 		mul	r3, r2, r3
 4395 0244 F31A     		subs	r3, r6, r3
 4396 0246 DB00     		lsls	r3, r3, #3
 4397 0248 3233     		adds	r3, r3, #50
 4398 024a 414A     		ldr	r2, .L188+8
 4399 024c A2FB0323 		umull	r2, r3, r2, r3
 4400 0250 5B09     		lsrs	r3, r3, #5
 4401 0252 03F00703 		and	r3, r3, #7
 4402 0256 2B44     		add	r3, r3, r5
 4403 0258 A360     		str	r3, [r4, #8]
1925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*-------------------------- USART BRR Configuration ---------------------*/
1930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((huart->Instance == USART1) || (huart->Instance == USART6))
1931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
1933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
1937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4404              		.loc 1 1939 0
 4405 025a E7E0     		b	.L187
ARM GAS  /tmp/ccez0bZg.s 			page 111


 4406              	.L180:
1930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4407              		.loc 1 1930 0
 4408 025c 7B68     		ldr	r3, [r7, #4]
 4409 025e 1B68     		ldr	r3, [r3]
 4410 0260 394A     		ldr	r2, .L188
 4411 0262 9342     		cmp	r3, r2
 4412 0264 04D0     		beq	.L185
1930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4413              		.loc 1 1930 0 is_stmt 0 discriminator 1
 4414 0266 7B68     		ldr	r3, [r7, #4]
 4415 0268 1B68     		ldr	r3, [r3]
 4416 026a 384A     		ldr	r2, .L188+4
 4417 026c 9342     		cmp	r3, r2
 4418 026e 71D1     		bne	.L186
 4419              	.L185:
1932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 4420              		.loc 1 1932 0 is_stmt 1
 4421 0270 7B68     		ldr	r3, [r7, #4]
 4422 0272 1C68     		ldr	r4, [r3]
 4423 0274 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 4424 0278 0246     		mov	r2, r0
 4425 027a 1346     		mov	r3, r2
 4426 027c 9B00     		lsls	r3, r3, #2
 4427 027e 1344     		add	r3, r3, r2
 4428 0280 9A00     		lsls	r2, r3, #2
 4429 0282 1A44     		add	r2, r2, r3
 4430 0284 7B68     		ldr	r3, [r7, #4]
 4431 0286 5B68     		ldr	r3, [r3, #4]
 4432 0288 9B00     		lsls	r3, r3, #2
 4433 028a B2FBF3F3 		udiv	r3, r2, r3
 4434 028e 304A     		ldr	r2, .L188+8
 4435 0290 A2FB0323 		umull	r2, r3, r2, r3
 4436 0294 5B09     		lsrs	r3, r3, #5
 4437 0296 1D01     		lsls	r5, r3, #4
 4438 0298 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 4439 029c 0246     		mov	r2, r0
 4440 029e 1346     		mov	r3, r2
 4441 02a0 9B00     		lsls	r3, r3, #2
 4442 02a2 1344     		add	r3, r3, r2
 4443 02a4 9A00     		lsls	r2, r3, #2
 4444 02a6 1A44     		add	r2, r2, r3
 4445 02a8 7B68     		ldr	r3, [r7, #4]
 4446 02aa 5B68     		ldr	r3, [r3, #4]
 4447 02ac 9B00     		lsls	r3, r3, #2
 4448 02ae B2FBF3F6 		udiv	r6, r2, r3
 4449 02b2 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 4450 02b6 0246     		mov	r2, r0
 4451 02b8 1346     		mov	r3, r2
 4452 02ba 9B00     		lsls	r3, r3, #2
 4453 02bc 1344     		add	r3, r3, r2
 4454 02be 9A00     		lsls	r2, r3, #2
 4455 02c0 1A44     		add	r2, r2, r3
 4456 02c2 7B68     		ldr	r3, [r7, #4]
 4457 02c4 5B68     		ldr	r3, [r3, #4]
 4458 02c6 9B00     		lsls	r3, r3, #2
 4459 02c8 B2FBF3F3 		udiv	r3, r2, r3
ARM GAS  /tmp/ccez0bZg.s 			page 112


 4460 02cc 204A     		ldr	r2, .L188+8
 4461 02ce A2FB0323 		umull	r2, r3, r2, r3
 4462 02d2 5B09     		lsrs	r3, r3, #5
 4463 02d4 6422     		movs	r2, #100
 4464 02d6 02FB03F3 		mul	r3, r2, r3
 4465 02da F31A     		subs	r3, r6, r3
 4466 02dc 1B01     		lsls	r3, r3, #4
 4467 02de 3233     		adds	r3, r3, #50
 4468 02e0 1B4A     		ldr	r2, .L188+8
 4469 02e2 A2FB0323 		umull	r2, r3, r2, r3
 4470 02e6 5B09     		lsrs	r3, r3, #5
 4471 02e8 03F0F003 		and	r3, r3, #240
 4472 02ec 1D44     		add	r5, r5, r3
 4473 02ee FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 4474 02f2 0246     		mov	r2, r0
 4475 02f4 1346     		mov	r3, r2
 4476 02f6 9B00     		lsls	r3, r3, #2
 4477 02f8 1344     		add	r3, r3, r2
 4478 02fa 9A00     		lsls	r2, r3, #2
 4479 02fc 1A44     		add	r2, r2, r3
 4480 02fe 7B68     		ldr	r3, [r7, #4]
 4481 0300 5B68     		ldr	r3, [r3, #4]
 4482 0302 9B00     		lsls	r3, r3, #2
 4483 0304 B2FBF3F6 		udiv	r6, r2, r3
 4484 0308 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 4485 030c 0246     		mov	r2, r0
 4486 030e 1346     		mov	r3, r2
 4487 0310 9B00     		lsls	r3, r3, #2
 4488 0312 1344     		add	r3, r3, r2
 4489 0314 9A00     		lsls	r2, r3, #2
 4490 0316 1A44     		add	r2, r2, r3
 4491 0318 7B68     		ldr	r3, [r7, #4]
 4492 031a 5B68     		ldr	r3, [r3, #4]
 4493 031c 9B00     		lsls	r3, r3, #2
 4494 031e B2FBF3F3 		udiv	r3, r2, r3
 4495 0322 0B4A     		ldr	r2, .L188+8
 4496 0324 A2FB0323 		umull	r2, r3, r2, r3
 4497 0328 5B09     		lsrs	r3, r3, #5
 4498 032a 6422     		movs	r2, #100
 4499 032c 02FB03F3 		mul	r3, r2, r3
 4500 0330 F31A     		subs	r3, r6, r3
 4501 0332 1B01     		lsls	r3, r3, #4
 4502 0334 3233     		adds	r3, r3, #50
 4503 0336 064A     		ldr	r2, .L188+8
 4504 0338 A2FB0323 		umull	r2, r3, r2, r3
 4505 033c 5B09     		lsrs	r3, r3, #5
 4506 033e 03F00F03 		and	r3, r3, #15
 4507 0342 2B44     		add	r3, r3, r5
 4508 0344 A360     		str	r3, [r4, #8]
 4509 0346 71E0     		b	.L184
 4510              	.L189:
 4511              		.align	2
 4512              	.L188:
 4513 0348 00100140 		.word	1073811456
 4514 034c 00140140 		.word	1073812480
 4515 0350 1F85EB51 		.word	1374389535
 4516              	.L186:
ARM GAS  /tmp/ccez0bZg.s 			page 113


1936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 4517              		.loc 1 1936 0
 4518 0354 7B68     		ldr	r3, [r7, #4]
 4519 0356 1C68     		ldr	r4, [r3]
 4520 0358 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4521 035c 0246     		mov	r2, r0
 4522 035e 1346     		mov	r3, r2
 4523 0360 9B00     		lsls	r3, r3, #2
 4524 0362 1344     		add	r3, r3, r2
 4525 0364 9A00     		lsls	r2, r3, #2
 4526 0366 1A44     		add	r2, r2, r3
 4527 0368 7B68     		ldr	r3, [r7, #4]
 4528 036a 5B68     		ldr	r3, [r3, #4]
 4529 036c 9B00     		lsls	r3, r3, #2
 4530 036e B2FBF3F3 		udiv	r3, r2, r3
 4531 0372 304A     		ldr	r2, .L190
 4532 0374 A2FB0323 		umull	r2, r3, r2, r3
 4533 0378 5B09     		lsrs	r3, r3, #5
 4534 037a 1D01     		lsls	r5, r3, #4
 4535 037c FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4536 0380 0246     		mov	r2, r0
 4537 0382 1346     		mov	r3, r2
 4538 0384 9B00     		lsls	r3, r3, #2
 4539 0386 1344     		add	r3, r3, r2
 4540 0388 9A00     		lsls	r2, r3, #2
 4541 038a 1A44     		add	r2, r2, r3
 4542 038c 7B68     		ldr	r3, [r7, #4]
 4543 038e 5B68     		ldr	r3, [r3, #4]
 4544 0390 9B00     		lsls	r3, r3, #2
 4545 0392 B2FBF3F6 		udiv	r6, r2, r3
 4546 0396 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4547 039a 0246     		mov	r2, r0
 4548 039c 1346     		mov	r3, r2
 4549 039e 9B00     		lsls	r3, r3, #2
 4550 03a0 1344     		add	r3, r3, r2
 4551 03a2 9A00     		lsls	r2, r3, #2
 4552 03a4 1A44     		add	r2, r2, r3
 4553 03a6 7B68     		ldr	r3, [r7, #4]
 4554 03a8 5B68     		ldr	r3, [r3, #4]
 4555 03aa 9B00     		lsls	r3, r3, #2
 4556 03ac B2FBF3F3 		udiv	r3, r2, r3
 4557 03b0 204A     		ldr	r2, .L190
 4558 03b2 A2FB0323 		umull	r2, r3, r2, r3
 4559 03b6 5B09     		lsrs	r3, r3, #5
 4560 03b8 6422     		movs	r2, #100
 4561 03ba 02FB03F3 		mul	r3, r2, r3
 4562 03be F31A     		subs	r3, r6, r3
 4563 03c0 1B01     		lsls	r3, r3, #4
 4564 03c2 3233     		adds	r3, r3, #50
 4565 03c4 1B4A     		ldr	r2, .L190
 4566 03c6 A2FB0323 		umull	r2, r3, r2, r3
 4567 03ca 5B09     		lsrs	r3, r3, #5
 4568 03cc 03F0F003 		and	r3, r3, #240
 4569 03d0 1D44     		add	r5, r5, r3
 4570 03d2 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4571 03d6 0246     		mov	r2, r0
 4572 03d8 1346     		mov	r3, r2
ARM GAS  /tmp/ccez0bZg.s 			page 114


 4573 03da 9B00     		lsls	r3, r3, #2
 4574 03dc 1344     		add	r3, r3, r2
 4575 03de 9A00     		lsls	r2, r3, #2
 4576 03e0 1A44     		add	r2, r2, r3
 4577 03e2 7B68     		ldr	r3, [r7, #4]
 4578 03e4 5B68     		ldr	r3, [r3, #4]
 4579 03e6 9B00     		lsls	r3, r3, #2
 4580 03e8 B2FBF3F6 		udiv	r6, r2, r3
 4581 03ec FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4582 03f0 0246     		mov	r2, r0
 4583 03f2 1346     		mov	r3, r2
 4584 03f4 9B00     		lsls	r3, r3, #2
 4585 03f6 1344     		add	r3, r3, r2
 4586 03f8 9A00     		lsls	r2, r3, #2
 4587 03fa 1A44     		add	r2, r2, r3
 4588 03fc 7B68     		ldr	r3, [r7, #4]
 4589 03fe 5B68     		ldr	r3, [r3, #4]
 4590 0400 9B00     		lsls	r3, r3, #2
 4591 0402 B2FBF3F3 		udiv	r3, r2, r3
 4592 0406 0B4A     		ldr	r2, .L190
 4593 0408 A2FB0323 		umull	r2, r3, r2, r3
 4594 040c 5B09     		lsrs	r3, r3, #5
 4595 040e 6422     		movs	r2, #100
 4596 0410 02FB03F3 		mul	r3, r2, r3
 4597 0414 F31A     		subs	r3, r6, r3
 4598 0416 1B01     		lsls	r3, r3, #4
 4599 0418 3233     		adds	r3, r3, #50
 4600 041a 064A     		ldr	r2, .L190
 4601 041c A2FB0323 		umull	r2, r3, r2, r3
 4602 0420 5B09     		lsrs	r3, r3, #5
 4603 0422 03F00F03 		and	r3, r3, #15
 4604 0426 2B44     		add	r3, r3, r5
 4605 0428 A360     		str	r3, [r4, #8]
 4606              		.loc 1 1939 0
 4607 042a FFE7     		b	.L187
 4608              	.L184:
 4609              	.L187:
 4610 042c 00BF     		nop
 4611 042e 1437     		adds	r7, r7, #20
 4612              	.LCFI229:
 4613              		.cfi_def_cfa_offset 20
 4614 0430 BD46     		mov	sp, r7
 4615              	.LCFI230:
 4616              		.cfi_def_cfa_register 13
 4617              		@ sp needed
 4618 0432 F0BD     		pop	{r4, r5, r6, r7, pc}
 4619              	.L191:
 4620              		.align	2
 4621              	.L190:
 4622 0434 1F85EB51 		.word	1374389535
 4623              		.cfi_endproc
 4624              	.LFE167:
 4626              		.text
 4627              	.Letext0:
 4628              		.file 2 "/usr/local/gcc-arm-none-eabi-5_4-2016q2/arm-none-eabi/include/machine/_default_types.h"
 4629              		.file 3 "/usr/local/gcc-arm-none-eabi-5_4-2016q2/arm-none-eabi/include/sys/_stdint.h"
 4630              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
ARM GAS  /tmp/ccez0bZg.s 			page 115


 4631              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 4632              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 4633              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 4634              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 4635              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  /tmp/ccez0bZg.s 			page 116


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_hal_uart.c
     /tmp/ccez0bZg.s:22     .text.HAL_UART_Init:00000000 $t
     /tmp/ccez0bZg.s:27     .text.HAL_UART_Init:00000000 HAL_UART_Init
     /tmp/ccez0bZg.s:622    .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
     /tmp/ccez0bZg.s:4110   .text.UART_SetConfig:00000000 UART_SetConfig
     /tmp/ccez0bZg.s:136    .text.HAL_HalfDuplex_Init:00000000 $t
     /tmp/ccez0bZg.s:141    .text.HAL_HalfDuplex_Init:00000000 HAL_HalfDuplex_Init
     /tmp/ccez0bZg.s:257    .text.HAL_LIN_Init:00000000 $t
     /tmp/ccez0bZg.s:262    .text.HAL_LIN_Init:00000000 HAL_LIN_Init
     /tmp/ccez0bZg.s:396    .text.HAL_MultiProcessor_Init:00000000 $t
     /tmp/ccez0bZg.s:401    .text.HAL_MultiProcessor_Init:00000000 HAL_MultiProcessor_Init
     /tmp/ccez0bZg.s:546    .text.HAL_UART_DeInit:00000000 $t
     /tmp/ccez0bZg.s:551    .text.HAL_UART_DeInit:00000000 HAL_UART_DeInit
     /tmp/ccez0bZg.s:663    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
     /tmp/ccez0bZg.s:617    .text.HAL_UART_MspInit:00000000 $t
     /tmp/ccez0bZg.s:658    .text.HAL_UART_MspDeInit:00000000 $t
     /tmp/ccez0bZg.s:699    .text.HAL_UART_Transmit:00000000 $t
     /tmp/ccez0bZg.s:704    .text.HAL_UART_Transmit:00000000 HAL_UART_Transmit
     /tmp/ccez0bZg.s:3487   .text.UART_WaitOnFlagUntilTimeout:00000000 UART_WaitOnFlagUntilTimeout
     /tmp/ccez0bZg.s:912    .text.HAL_UART_Receive:00000000 $t
     /tmp/ccez0bZg.s:917    .text.HAL_UART_Receive:00000000 HAL_UART_Receive
     /tmp/ccez0bZg.s:1140   .text.HAL_UART_Transmit_IT:00000000 $t
     /tmp/ccez0bZg.s:1145   .text.HAL_UART_Transmit_IT:00000000 HAL_UART_Transmit_IT
     /tmp/ccez0bZg.s:1255   .text.HAL_UART_Receive_IT:00000000 $t
     /tmp/ccez0bZg.s:1260   .text.HAL_UART_Receive_IT:00000000 HAL_UART_Receive_IT
     /tmp/ccez0bZg.s:1378   .text.HAL_UART_Transmit_DMA:00000000 $t
     /tmp/ccez0bZg.s:1383   .text.HAL_UART_Transmit_DMA:00000000 HAL_UART_Transmit_DMA
     /tmp/ccez0bZg.s:1527   .text.HAL_UART_Transmit_DMA:000000cc $d
     /tmp/ccez0bZg.s:3134   .text.UART_DMATransmitCplt:00000000 UART_DMATransmitCplt
     /tmp/ccez0bZg.s:3208   .text.UART_DMATxHalfCplt:00000000 UART_DMATxHalfCplt
     /tmp/ccez0bZg.s:3377   .text.UART_DMAError:00000000 UART_DMAError
     /tmp/ccez0bZg.s:1534   .text.HAL_UART_Receive_DMA:00000000 $t
     /tmp/ccez0bZg.s:1539   .text.HAL_UART_Receive_DMA:00000000 HAL_UART_Receive_DMA
     /tmp/ccez0bZg.s:1690   .text.HAL_UART_Receive_DMA:000000dc $d
     /tmp/ccez0bZg.s:3251   .text.UART_DMAReceiveCplt:00000000 UART_DMAReceiveCplt
     /tmp/ccez0bZg.s:3334   .text.UART_DMARxHalfCplt:00000000 UART_DMARxHalfCplt
     /tmp/ccez0bZg.s:1697   .text.HAL_UART_DMAPause:00000000 $t
     /tmp/ccez0bZg.s:1702   .text.HAL_UART_DMAPause:00000000 HAL_UART_DMAPause
     /tmp/ccez0bZg.s:1837   .text.HAL_UART_DMAResume:00000000 $t
     /tmp/ccez0bZg.s:1842   .text.HAL_UART_DMAResume:00000000 HAL_UART_DMAResume
     /tmp/ccez0bZg.s:1958   .text.HAL_UART_DMAStop:00000000 $t
     /tmp/ccez0bZg.s:1963   .text.HAL_UART_DMAStop:00000000 HAL_UART_DMAStop
     /tmp/ccez0bZg.s:3598   .text.UART_EndTxTransfer:00000000 UART_EndTxTransfer
     /tmp/ccez0bZg.s:3650   .text.UART_EndRxTransfer:00000000 UART_EndRxTransfer
     /tmp/ccez0bZg.s:2088   .text.HAL_UART_IRQHandler:00000000 $t
     /tmp/ccez0bZg.s:2093   .text.HAL_UART_IRQHandler:00000000 HAL_UART_IRQHandler
     /tmp/ccez0bZg.s:3943   .text.UART_Receive_IT:00000000 UART_Receive_IT
     /tmp/ccez0bZg.s:2576   .text.HAL_UART_ErrorCallback:00000000 HAL_UART_ErrorCallback
     /tmp/ccez0bZg.s:3761   .text.UART_Transmit_IT:00000000 UART_Transmit_IT
     /tmp/ccez0bZg.s:3890   .text.UART_EndTransmit_IT:00000000 UART_EndTransmit_IT
     /tmp/ccez0bZg.s:2402   .text.HAL_UART_IRQHandler:000001f4 $d
     /tmp/ccez0bZg.s:3710   .text.UART_DMAAbortOnError:00000000 UART_DMAAbortOnError
     /tmp/ccez0bZg.s:2407   .text.HAL_UART_TxCpltCallback:00000000 $t
     /tmp/ccez0bZg.s:2412   .text.HAL_UART_TxCpltCallback:00000000 HAL_UART_TxCpltCallback
     /tmp/ccez0bZg.s:2448   .text.HAL_UART_TxHalfCpltCallback:00000000 $t
     /tmp/ccez0bZg.s:2453   .text.HAL_UART_TxHalfCpltCallback:00000000 HAL_UART_TxHalfCpltCallback
ARM GAS  /tmp/ccez0bZg.s 			page 117


     /tmp/ccez0bZg.s:2489   .text.HAL_UART_RxCpltCallback:00000000 $t
     /tmp/ccez0bZg.s:2494   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
     /tmp/ccez0bZg.s:2530   .text.HAL_UART_RxHalfCpltCallback:00000000 $t
     /tmp/ccez0bZg.s:2535   .text.HAL_UART_RxHalfCpltCallback:00000000 HAL_UART_RxHalfCpltCallback
     /tmp/ccez0bZg.s:2571   .text.HAL_UART_ErrorCallback:00000000 $t
     /tmp/ccez0bZg.s:2612   .text.HAL_LIN_SendBreak:00000000 $t
     /tmp/ccez0bZg.s:2617   .text.HAL_LIN_SendBreak:00000000 HAL_LIN_SendBreak
     /tmp/ccez0bZg.s:2689   .text.HAL_MultiProcessor_EnterMuteMode:00000000 $t
     /tmp/ccez0bZg.s:2694   .text.HAL_MultiProcessor_EnterMuteMode:00000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/ccez0bZg.s:2766   .text.HAL_MultiProcessor_ExitMuteMode:00000000 $t
     /tmp/ccez0bZg.s:2771   .text.HAL_MultiProcessor_ExitMuteMode:00000000 HAL_MultiProcessor_ExitMuteMode
     /tmp/ccez0bZg.s:2843   .text.HAL_HalfDuplex_EnableTransmitter:00000000 $t
     /tmp/ccez0bZg.s:2848   .text.HAL_HalfDuplex_EnableTransmitter:00000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/ccez0bZg.s:2933   .text.HAL_HalfDuplex_EnableReceiver:00000000 $t
     /tmp/ccez0bZg.s:2938   .text.HAL_HalfDuplex_EnableReceiver:00000000 HAL_HalfDuplex_EnableReceiver
     /tmp/ccez0bZg.s:3023   .text.HAL_UART_GetState:00000000 $t
     /tmp/ccez0bZg.s:3028   .text.HAL_UART_GetState:00000000 HAL_UART_GetState
     /tmp/ccez0bZg.s:3086   .text.HAL_UART_GetError:00000000 $t
     /tmp/ccez0bZg.s:3091   .text.HAL_UART_GetError:00000000 HAL_UART_GetError
     /tmp/ccez0bZg.s:3130   .text.UART_DMATransmitCplt:00000000 $t
     /tmp/ccez0bZg.s:3204   .text.UART_DMATxHalfCplt:00000000 $t
     /tmp/ccez0bZg.s:3247   .text.UART_DMAReceiveCplt:00000000 $t
     /tmp/ccez0bZg.s:3330   .text.UART_DMARxHalfCplt:00000000 $t
     /tmp/ccez0bZg.s:3373   .text.UART_DMAError:00000000 $t
     /tmp/ccez0bZg.s:3483   .text.UART_WaitOnFlagUntilTimeout:00000000 $t
     /tmp/ccez0bZg.s:3594   .text.UART_EndTxTransfer:00000000 $t
     /tmp/ccez0bZg.s:3646   .text.UART_EndRxTransfer:00000000 $t
     /tmp/ccez0bZg.s:3706   .text.UART_DMAAbortOnError:00000000 $t
     /tmp/ccez0bZg.s:3757   .text.UART_Transmit_IT:00000000 $t
     /tmp/ccez0bZg.s:3886   .text.UART_EndTransmit_IT:00000000 $t
     /tmp/ccez0bZg.s:3939   .text.UART_Receive_IT:00000000 $t
     /tmp/ccez0bZg.s:4106   .text.UART_SetConfig:00000000 $t
     /tmp/ccez0bZg.s:4513   .text.UART_SetConfig:00000348 $d
     /tmp/ccez0bZg.s:4518   .text.UART_SetConfig:00000354 $t
     /tmp/ccez0bZg.s:4622   .text.UART_SetConfig:00000434 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
HAL_RCC_GetPCLK2Freq
HAL_RCC_GetPCLK1Freq
